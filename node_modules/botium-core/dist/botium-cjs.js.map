{"version":3,"file":"botium-cjs.js","sources":["../src/Capabilities.js","../src/Source.js","../src/Defaults.js","../src/Fluent.js","../src/Events.js","../src/scripting/BotiumError.js","../src/scripting/logichook/LogicHookConsts.js","../src/scripting/logichook/LogicHookUtils.js","../src/scripting/Constants.js","../src/mocks/BotiumMockAttachment.js","../src/mocks/BotiumMockRichMessageTypes.js","../src/mocks/BotiumMockScripting.js","../src/mocks/BotiumMockMessage.js","../src/scripting/helper.js","../src/scripting/ScriptingMemory.js","../src/scripting/Convo.js","../src/helpers/RetryHelper.js","../src/scripting/MatchFunctions.js","../src/helpers/Utils.js","../src/scripting/precompilers/JsonToJson.js","../src/helpers/HookUtils.js","../src/scripting/precompilers/Script.js","../src/scripting/precompilers/MarkdownRasa.js","../src/helpers/CapabilitiesUtils.js","../src/scripting/precompilers/index.js","../src/scripting/CompilerBase.js","../src/scripting/Utterance.js","../src/scripting/CompilerXlsx.js","../src/scripting/CompilerTxt.js","../src/scripting/CompilerCsv.js","../src/scripting/CompilerObjectBase.js","../src/scripting/CompilerYaml.js","../src/scripting/CompilerJson.js","../src/scripting/CompilerMarkdown.js","../src/scripting/ScriptingProvider.js","../src/repos/BaseRepo.js","../src/repos/NoRepo.js","../src/helpers/ProcessUtils.js","../src/repos/GitRepo.js","../src/repos/LocalRepo.js","../src/Commands.js","../src/helpers/QueueTimeoutError.js","../src/helpers/Queue.js","../src/containers/BaseContainer.js","../src/containers/GridContainer.js","../src/containers/InProcessContainer.js","../src/grid/inbound/proxy.js","../src/containers/plugins/SimpleRestContainer.js","../src/containers/plugins/index.js","../src/containers/PluginConnectorContainer.js","../src/BotDriver.js","../src/Plugins.js","../index.js"],"sourcesContent":["module.exports = {\n  PROJECTNAME: 'PROJECTNAME',\n  TESTSESSIONNAME: 'TESTSESSIONNAME',\n  TESTCASENAME: 'TESTCASENAME',\n  TEMPDIR: 'TEMPDIR',\n  CLEANUPTEMPDIR: 'CLEANUPTEMPDIR',\n  WAITFORBOTTIMEOUT: 'WAITFORBOTTIMEOUT',\n  CONTAINERMODE: 'CONTAINERMODE',\n  PLUGINMODULEPATH: 'PLUGINMODULEPATH',\n  // falsy or ms/keystroke\n  SIMULATE_WRITING_SPEED: 'SIMULATE_WRITING_SPEED',\n  BOTIUMGRIDURL: 'BOTIUMGRIDURL',\n  BOTIUMAPITOKEN: 'BOTIUMAPITOKEN',\n  BOTIUMGRIDSLOT: 'BOTIUMGRIDSLOT',\n  // Simple Reset Bot Settings\n  SIMPLEREST_PING_URL: 'SIMPLEREST_PING_URL',\n  SIMPLEREST_PING_VERB: 'SIMPLEREST_PING_VERB',\n  SIMPLEREST_PING_BODY: 'SIMPLEREST_PING_BODY',\n  SIMPLEREST_PING_BODY_RAW: 'SIMPLEREST_PING_BODY_RAW',\n  SIMPLEREST_PING_HEADERS: 'SIMPLEREST_PING_HEADERS',\n  SIMPLEREST_PING_REQUEST_HOOK: 'SIMPLEREST_PING_REQUEST_HOOK',\n  SIMPLEREST_PING_RETRIES: 'SIMPLEREST_PING_RETRIES',\n  SIMPLEREST_PING_TIMEOUT: 'SIMPLEREST_PING_TIMEOUT',\n  SIMPLEREST_PING_UPDATE_CONTEXT: 'SIMPLEREST_PING_UPDATE_CONTEXT',\n  SIMPLEREST_PING_PROCESS_RESPONSE: 'SIMPLEREST_PING_PROCESS_RESPONSE',\n  SIMPLEREST_START_URL: 'SIMPLEREST_START_URL',\n  SIMPLEREST_START_VERB: 'SIMPLEREST_START_VERB',\n  SIMPLEREST_START_BODY: 'SIMPLEREST_START_BODY',\n  SIMPLEREST_START_BODY_RAW: 'SIMPLEREST_START_BODY_RAW',\n  SIMPLEREST_START_HEADERS: 'SIMPLEREST_START_HEADERS',\n  SIMPLEREST_START_REQUEST_HOOK: 'SIMPLEREST_START_REQUEST_HOOK',\n  SIMPLEREST_START_RETRIES: 'SIMPLEREST_START_RETRIES',\n  SIMPLEREST_START_TIMEOUT: 'SIMPLEREST_START_TIMEOUT',\n  SIMPLEREST_START_UPDATE_CONTEXT: 'SIMPLEREST_START_UPDATE_CONTEXT',\n  SIMPLEREST_START_PROCESS_RESPONSE: 'SIMPLEREST_START_PROCESS_RESPONSE',\n  SIMPLEREST_STOP_URL: 'SIMPLEREST_STOP_URL',\n  SIMPLEREST_STOP_VERB: 'SIMPLEREST_STOP_VERB',\n  SIMPLEREST_STOP_BODY: 'SIMPLEREST_STOP_BODY',\n  SIMPLEREST_STOP_BODY_RAW: 'SIMPLEREST_STOP_BODY_RAW',\n  SIMPLEREST_STOP_HEADERS: 'SIMPLEREST_STOP_HEADERS',\n  SIMPLEREST_STOP_REQUEST_HOOK: 'SIMPLEREST_STOP_REQUEST_HOOK',\n  SIMPLEREST_STOP_RETRIES: 'SIMPLEREST_STOP_RETRIES',\n  SIMPLEREST_STOP_TIMEOUT: 'SIMPLEREST_STOP_TIMEOUT',\n  SIMPLEREST_INIT_CONTEXT: 'SIMPLEREST_INIT_CONTEXT',\n  SIMPLEREST_INIT_TEXT: 'SIMPLEREST_INIT_TEXT',\n  SIMPLEREST_INIT_PROCESS_RESPONSE: 'SIMPLEREST_INIT_PROCESS_RESPONSE',\n  SIMPLEREST_PROXY_URL: 'SIMPLEREST_PROXY_URL',\n  SIMPLEREST_STRICT_SSL: 'SIMPLEREST_STRICT_SSL',\n  SIMPLEREST_URL: 'SIMPLEREST_URL',\n  SIMPLEREST_EXTRA_OPTIONS: 'SIMPLEREST_EXTRA_OPTIONS',\n  SIMPLEREST_IGNORE_EMPTY: 'SIMPLEREST_IGNORE_EMPTY',\n  SIMPLEREST_TIMEOUT: 'SIMPLEREST_TIMEOUT',\n  SIMPLEREST_METHOD: 'SIMPLEREST_METHOD',\n  SIMPLEREST_VERB: 'SIMPLEREST_VERB',\n  SIMPLEREST_HEADERS_TEMPLATE: 'SIMPLEREST_HEADERS_TEMPLATE',\n  SIMPLEREST_BODY_TEMPLATE: 'SIMPLEREST_BODY_TEMPLATE',\n  SIMPLEREST_BODY_RAW: 'SIMPLEREST_BODY_RAW',\n  SIMPLEREST_START_HOOK: 'SIMPLEREST_START_HOOK',\n  SIMPLEREST_STOP_HOOK: 'SIMPLEREST_STOP_HOOK',\n  SIMPLEREST_REQUEST_HOOK: 'SIMPLEREST_REQUEST_HOOK',\n  SIMPLEREST_PARSER_HOOK: 'SIMPLEREST_PARSER_HOOK',\n  SIMPLEREST_POLL_URL: 'SIMPLEREST_POLL_URL',\n  SIMPLEREST_POLL_VERB: 'SIMPLEREST_POLL_VERB',\n  SIMPLEREST_POLL_BODY: 'SIMPLEREST_POLL_BODY',\n  SIMPLEREST_POLL_BODY_RAW: 'SIMPLEREST_POLL_BODY_RAW',\n  SIMPLEREST_POLL_HEADERS: 'SIMPLEREST_POLL_HEADERS',\n  SIMPLEREST_POLL_REQUEST_HOOK: 'SIMPLEREST_POLL_REQUEST_HOOK',\n  SIMPLEREST_POLL_INTERVAL: 'SIMPLEREST_POLL_INTERVAL',\n  SIMPLEREST_POLL_TIMEOUT: 'SIMPLEREST_PING_TIMEOUT',\n  SIMPLEREST_POLL_UPDATE_CONTEXT: 'SIMPLEREST_POLL_UPDATE_CONTEXT',\n  SIMPLEREST_BODY_JSONPATH: 'SIMPLEREST_BODY_JSONPATH',\n  SIMPLEREST_RESPONSE_JSONPATH: 'SIMPLEREST_RESPONSE_JSONPATH',\n  SIMPLEREST_RESPONSE_HOOK: 'SIMPLEREST_RESPONSE_HOOK',\n  SIMPLEREST_MEDIA_JSONPATH: 'SIMPLEREST_MEDIA_JSONPATH',\n  SIMPLEREST_BUTTONS_JSONPATH: 'SIMPLEREST_BUTTONS_JSONPATH',\n  SIMPLEREST_CONTEXT_JSONPATH: 'SIMPLEREST_CONTEXT_JSONPATH',\n  SIMPLEREST_CONTEXT_MERGE_OR_REPLACE: 'SIMPLEREST_CONTEXT_MERGE_OR_REPLACE',\n  SIMPLEREST_CONVERSATION_ID_TEMPLATE: 'SIMPLEREST_CONVERSATION_ID_TEMPLATE',\n  SIMPLEREST_STEP_ID_TEMPLATE: 'SIMPLEREST_STEP_ID_TEMPLATE',\n  SIMPLEREST_INBOUND_REDISURL: 'SIMPLEREST_INBOUND_REDISURL',\n  SIMPLEREST_INBOUND_ENDPOINT: 'SIMPLEREST_INBOUND_ENDPOINT',\n  SIMPLEREST_INBOUND_PORT: 'SIMPLEREST_INBOUND_PORT',\n  SIMPLEREST_INBOUND_SELECTOR_JSONPATH: 'SIMPLEREST_INBOUND_SELECTOR_JSONPATH',\n  SIMPLEREST_INBOUND_SELECTOR_VALUE: 'SIMPLEREST_INBOUND_SELECTOR_VALUE',\n  SIMPLEREST_INBOUND_UPDATE_CONTEXT: 'SIMPLEREST_INBOUND_UPDATE_CONTEXT',\n  SIMPLEREST_REDIS_TOPIC: 'SIMPLEREST_REDIS_TOPIC',\n  SIMPLEREST_INBOUND_ORDER_UNSETTLED_EVENTS_JSONPATH: 'SIMPLEREST_INBOUND_ORDER_UNSETTLED_EVENTS_JSONPATH',\n  SIMPLEREST_INBOUND_DEBOUNCE_TIMEOUT: 'SIMPLEREST_INBOUND_DEBOUNCE_TIMEOUT',\n  // Script Compiler\n  SCRIPTING_TXT_EOL: 'SCRIPTING_TXT_EOL',\n  // ROW_PER_MESSAGE or QUESTION_ANSWER\n  SCRIPTING_XLSX_MODE: 'SCRIPTING_XLSX_MODE',\n  SCRIPTING_XLSX_EOL_WRITE: 'SCRIPTING_XLSX_EOL_WRITE',\n  SCRIPTING_XLSX_STARTROW: 'SCRIPTING_XLSX_STARTROW',\n  SCRIPTING_XLSX_STARTCOL: 'SCRIPTING_XLSX_STARTCOL',\n  SCRIPTING_XLSX_HASNAMECOL: 'SCRIPTING_XLSX_HASNAMECOL',\n  SCRIPTING_XLSX_HASHEADERS: 'SCRIPTING_XLSX_HASHEADERS',\n  SCRIPTING_XLSX_SHEETNAMES: 'SCRIPTING_XLSX_SHEETNAMES',\n  SCRIPTING_XLSX_SHEETNAMES_PCONVOS: 'SCRIPTING_XLSX_SHEETNAMES_PCONVOS',\n  SCRIPTING_XLSX_SHEETNAMES_UTTERANCES: 'SCRIPTING_XLSX_SHEETNAMES_UTTERANCES',\n  SCRIPTING_XLSX_SHEETNAMES_SCRIPTING_MEMORY: 'SCRIPTING_XLSX_SHEETNAMES_SCRIPTING_MEMORY',\n  SCRIPTING_CSV_DELIMITER: 'SCRIPTING_CSV_DELIMITER',\n  SCRIPTING_CSV_SKIP_HEADER: 'SCRIPTING_CSV_SKIP_HEADER',\n  SCRIPTING_CSV_QUOTE: 'SCRIPTING_CSV_QUOTE',\n  SCRIPTING_CSV_ESCAPE: 'SCRIPTING_CSV_ESCAPE',\n  SCRIPTING_CSV_MULTIROW_COLUMN_CONVERSATION_ID: 'SCRIPTING_CSV_MULTIROW_COLUMN_CONVERSATION_ID',\n  SCRIPTING_CSV_MULTIROW_COLUMN_SENDER: 'SCRIPTING_CSV_MULTIROW_COLUMN_SENDER',\n  SCRIPTING_CSV_MULTIROW_COLUMN_TEXT: 'SCRIPTING_CSV_MULTIROW_COLUMN_TEXT',\n  SCRIPTING_CSV_QA_COLUMN_QUESTION: 'SCRIPTING_CSV_QA_COLUMN_QUESTION',\n  SCRIPTING_CSV_QA_COLUMN_ANSWER: 'SCRIPTING_CSV_QA_COLUMN_ANSWER',\n  SCRIPTING_NORMALIZE_TEXT: 'SCRIPTING_NORMALIZE_TEXT',\n  SCRIPTING_ENABLE_MEMORY: 'SCRIPTING_ENABLE_MEMORY',\n  SCRIPTING_ENABLE_MULTIPLE_ASSERT_ERRORS: 'SCRIPTING_ENABLE_MULTIPLE_ASSERT_ERRORS',\n  SCRIPTING_FORCE_BOT_CONSUMED: 'SCRIPTING_FORCE_BOT_CONSUMED',\n  // regexp, regexpIgnoreCase, wildcard, wildcardIgnoreCase, wildcardExact, wildcardExactIgnoreCase, include, includeIgnoreCase, equals, equalsIgnoreCase\n  SCRIPTING_MATCHING_MODE: 'SCRIPTING_MATCHING_MODE',\n  // all, first, random\n  SCRIPTING_UTTEXPANSION_MODE: 'SCRIPTING_UTTEXPANSION_MODE',\n  SCRIPTING_UTTEXPANSION_RANDOM_COUNT: 'SCRIPTING_UTTEXPANSION_RANDOM_COUNT',\n  SCRIPTING_UTTEXPANSION_INCOMPREHENSION: 'SCRIPTING_UTTEXPANSION_INCOMPREHENSION',\n  SCRIPTING_UTTEXPANSION_USENAMEASINTENT: 'SCRIPTING_UTTEXPANSION_USENAMEASINTENT',\n  // justLineTag, utterance\n  SCRIPTING_UTTEXPANSION_NAMING_MODE: 'SCRIPTING_UTTEXPANSION_NAMING_MODE',\n  SCRIPTING_UTTEXPANSION_NAMING_UTTERANCE_MAX: 'SCRIPTING_UTTEXPANSION_NAMING_UTTERANCE_MAX',\n  // Del original convo or not\n  SCRIPTING_MEMORYEXPANSION_KEEP_ORIG: 'SCRIPTING_MEMORYEXPANSION_KEEP_ORIG',\n  // word, non_whitespace, joker\n  SCRIPTING_MEMORY_MATCHING_MODE: 'SCRIPTING_MEMORY_MATCHING_MODE',\n  // Botium Lifecycle Hooks\n  CUSTOMHOOK_ONBUILD: 'CUSTOMHOOK_ONBUILD',\n  CUSTOMHOOK_ONSTART: 'CUSTOMHOOK_ONSTART',\n  CUSTOMHOOK_ONUSERSAYS: 'CUSTOMHOOK_ONUSERSAYS',\n  CUSTOMHOOK_ONBOTRESPONSE: 'CUSTOMHOOK_ONBOTRESPONSE',\n  CUSTOMHOOK_ONSTOP: 'CUSTOMHOOK_ONSTOP',\n  CUSTOMHOOK_ONCLEAN: 'CUSTOMHOOK_ONCLEAN',\n  // Extension components\n  ASSERTERS: 'ASSERTERS',\n  LOGIC_HOOKS: 'LOGIC_HOOKS',\n  USER_INPUTS: 'USER_INPUTS',\n  // API Calls Rate Limiting\n  RATELIMIT_USERSAYS_MAXCONCURRENT: 'RATELIMIT_USERSAYS_MAXCONCURRENT',\n  RATELIMIT_USERSAYS_MINTIME: 'RATELIMIT_USERSAYS_MINTIME',\n  SECURITY_ALLOW_UNSAFE: 'SECURITY_ALLOW_UNSAFE',\n  PRECOMPILERS: 'PRECOMPILERS'\n}\n","module.exports = {\n  LOCALPATH: 'LOCALPATH',\n  GITPATH: 'GITPATH',\n  GITURL: 'GITURL',\n  GITBRANCH: 'GITBRANCH',\n  GITDIR: 'GITDIR',\n  GITPREPARECMD: 'GITPREPARECMD'\n}\n","const Capabilities = require('./Capabilities')\nconst Source = require('./Source')\n\nmodule.exports = {\n  Capabilities: {\n    [Capabilities.PROJECTNAME]: 'Botium Project',\n    [Capabilities.TESTSESSIONNAME]: 'Botium Test Session',\n    [Capabilities.TESTCASENAME]: 'Botium Test Case',\n    [Capabilities.TEMPDIR]: 'botiumwork',\n    [Capabilities.CLEANUPTEMPDIR]: true,\n    [Capabilities.WAITFORBOTTIMEOUT]: 10000,\n    [Capabilities.SIMULATE_WRITING_SPEED]: false,\n    [Capabilities.SIMPLEREST_PING_RETRIES]: 6,\n    [Capabilities.SIMPLEREST_PING_TIMEOUT]: 10000,\n    [Capabilities.SIMPLEREST_PING_VERB]: 'GET',\n    [Capabilities.SIMPLEREST_PING_UPDATE_CONTEXT]: true,\n    [Capabilities.SIMPLEREST_PING_PROCESS_RESPONSE]: false,\n    [Capabilities.SIMPLEREST_INIT_PROCESS_RESPONSE]: false,\n    [Capabilities.SIMPLEREST_STOP_RETRIES]: 6,\n    [Capabilities.SIMPLEREST_STOP_TIMEOUT]: 10000,\n    [Capabilities.SIMPLEREST_STOP_VERB]: 'GET',\n    [Capabilities.SIMPLEREST_START_RETRIES]: 6,\n    [Capabilities.SIMPLEREST_START_TIMEOUT]: 10000,\n    [Capabilities.SIMPLEREST_START_UPDATE_CONTEXT]: true,\n    [Capabilities.SIMPLEREST_START_PROCESS_RESPONSE]: true,\n    [Capabilities.SIMPLEREST_START_VERB]: 'GET',\n    [Capabilities.SIMPLEREST_POLL_VERB]: 'GET',\n    [Capabilities.SIMPLEREST_POLL_INTERVAL]: 1000,\n    [Capabilities.SIMPLEREST_POLL_TIMEOUT]: 10000,\n    [Capabilities.SIMPLEREST_POLL_UPDATE_CONTEXT]: true,\n    [Capabilities.SIMPLEREST_METHOD]: 'GET',\n    [Capabilities.SIMPLEREST_IGNORE_EMPTY]: true,\n    [Capabilities.SIMPLEREST_TIMEOUT]: 10000,\n    [Capabilities.SIMPLEREST_EXTRA_OPTIONS]: {},\n    [Capabilities.SIMPLEREST_STRICT_SSL]: true,\n    [Capabilities.SIMPLEREST_INBOUND_UPDATE_CONTEXT]: true,\n    [Capabilities.SIMPLEREST_CONTEXT_MERGE_OR_REPLACE]: 'MERGE',\n    [Capabilities.SCRIPTING_TXT_EOL]: '\\n',\n    [Capabilities.SCRIPTING_XLSX_EOL_WRITE]: '\\r\\n',\n    [Capabilities.SCRIPTING_XLSX_HASHEADERS]: true,\n    [Capabilities.SCRIPTING_CSV_SKIP_HEADER]: true,\n    [Capabilities.SCRIPTING_CSV_QUOTE]: '\"',\n    [Capabilities.SCRIPTING_CSV_ESCAPE]: '\"',\n    [Capabilities.SCRIPTING_NORMALIZE_TEXT]: true,\n    [Capabilities.SCRIPTING_ENABLE_MEMORY]: false,\n    [Capabilities.SCRIPTING_ENABLE_MULTIPLE_ASSERT_ERRORS]: false,\n    [Capabilities.SCRIPTING_MATCHING_MODE]: 'wildcardIgnoreCase',\n    [Capabilities.SCRIPTING_UTTEXPANSION_MODE]: 'all',\n    [Capabilities.SCRIPTING_UTTEXPANSION_RANDOM_COUNT]: 1,\n    [Capabilities.SCRIPTING_UTTEXPANSION_NAMING_MODE]: 'justLineTag',\n    [Capabilities.SCRIPTING_UTTEXPANSION_NAMING_UTTERANCE_MAX]: '16',\n    [Capabilities.SCRIPTING_MEMORYEXPANSION_KEEP_ORIG]: false,\n    [Capabilities.SCRIPTING_FORCE_BOT_CONSUMED]: false,\n    [Capabilities.ASSERTERS]: [],\n    [Capabilities.LOGIC_HOOKS]: [],\n    [Capabilities.USER_INPUTS]: [],\n    [Capabilities.SECURITY_ALLOW_UNSAFE]: true\n  },\n  Sources: {\n    [Source.LOCALPATH]: '.',\n    [Source.GITPATH]: 'git',\n    [Source.GITBRANCH]: 'master',\n    [Source.GITDIR]: '.'\n  },\n  Envs: {\n    IS_BOTIUM_CONTAINER: true\n  }\n}\n","const async = require('async')\nconst _ = require('lodash')\n\nmodule.exports = class Fluent {\n  constructor (driver) {\n    this.driver = driver\n    this.compiler = null\n    this.container = null\n    this.currentChannel = null\n    this.tasks = []\n\n    this.tasks.push(() => {\n      return new Promise((resolve, reject) => {\n        this.driver.Build()\n          .then((container) => {\n            this.container = container\n            resolve()\n          })\n          .catch((err) => {\n            reject(err)\n          })\n      })\n    })\n  }\n\n  Exec () {\n    return new Promise((resolve, reject) => {\n      async.eachSeries(this.tasks, (task, cb) => {\n        try {\n          const taskResult = task()\n          if (taskResult && taskResult.then) {\n            taskResult.then(() => cb()).catch(cb)\n          } else {\n            cb()\n          }\n        } catch (err) {\n          cb(err)\n        }\n      }, (err) => {\n        if (err) return reject(err)\n        resolve()\n      })\n    })\n  }\n\n  Start () {\n    this.tasks.push(() => {\n      return this.container.Start()\n    })\n    return this\n  }\n\n  SwitchChannel (channel) {\n    this.tasks.push(() => {\n      this.currentChannel = channel\n      return Promise.resolve()\n    })\n    return this\n  }\n\n  ReadScripts (convoDir, globFilter) {\n    this.tasks.push(() => {\n      return new Promise((resolve, reject) => {\n        if (this.compiler == null) {\n          try {\n            this.compiler = this.driver.BuildCompiler()\n          } catch (err) {\n            return reject(err)\n          }\n        }\n        try {\n          this.compiler.ReadScriptsFromDirectory(convoDir, globFilter)\n          resolve()\n        } catch (err) {\n          reject(err)\n        }\n      })\n    })\n    return this\n  }\n\n  Compile (scriptBuffer, scriptFormat, scriptType) {\n    this.tasks.push(() => {\n      return new Promise((resolve, reject) => {\n        if (this.compiler == null) {\n          try {\n            this.compiler = this.driver.BuildCompiler()\n          } catch (err) {\n            return reject(err)\n          }\n        }\n        try {\n          this.compiler.Compile(scriptBuffer, scriptFormat, scriptType)\n          resolve()\n        } catch (err) {\n          reject(err)\n        }\n      })\n    })\n    return this\n  }\n\n  RunScripts (assertCb, failCb) {\n    this.tasks.push(() => {\n      return new Promise((resolve, reject) => {\n        if (assertCb) {\n          this.compiler.scriptingEvents.assertBotResponse = assertCb.bind(this.compiler)\n        }\n        if (failCb) {\n          this.compiler.scriptingEvents.fail = failCb.bind(this.compiler)\n        }\n\n        this.compiler.ExpandConvos()\n\n        async.eachSeries(this.compiler.convos, (convo, convoDone) => {\n          this.container.Start()\n            .then(() => convo.Run(this.container))\n            .then(() => this.container.Stop())\n            .then(() => convoDone())\n            .catch(convoDone)\n        },\n        (err) => {\n          if (err) return reject(err)\n          else resolve()\n        })\n      })\n    })\n    return this\n  }\n\n  UserSaysText (msg) {\n    this.tasks.push(() => {\n      if (_.isFunction(msg)) {\n        msg = msg()\n      }\n\n      if (this.currentChannel) {\n        return this.container.UserSays({ messageText: msg, channel: this.currentChannel })\n      } else {\n        return this.container.UserSaysText(msg)\n      }\n    })\n    return this\n  }\n\n  UserSays (msg) {\n    this.tasks.push(() => {\n      if (_.isFunction(msg)) {\n        msg = msg()\n      }\n\n      if (this.currentChannel && !msg.channel) {\n        msg = Object.assign({}, msg)\n        msg.channel = this.currentChannel\n      }\n      return this.container.UserSays(msg)\n    })\n    return this\n  }\n\n  WaitBotSays (channel = null, timeoutMillis = null, callback = null) {\n    if (!callback) {\n      if (timeoutMillis && _.isFunction(timeoutMillis)) {\n        callback = timeoutMillis\n        timeoutMillis = null\n      } else if (!timeoutMillis && channel && _.isFunction(channel)) {\n        callback = channel\n        timeoutMillis = null\n        channel = null\n      }\n    }\n\n    this.tasks.push(() => {\n      return new Promise((resolve, reject) => {\n        if (this.currentChannel && !channel) {\n          channel = this.currentChannel\n        }\n        this.container.WaitBotSays(channel, timeoutMillis)\n          .then((botMsg) => {\n            if (callback) callback(botMsg)\n            resolve()\n          })\n          .catch((err) => {\n            reject(err)\n          })\n      })\n    })\n    return this\n  }\n\n  WaitBotSaysText (channel = null, timeoutMillis = null, callback = null) {\n    if (!callback) {\n      if (timeoutMillis && _.isFunction(timeoutMillis)) {\n        callback = timeoutMillis\n        timeoutMillis = null\n      } else if (!timeoutMillis && channel && _.isFunction(channel)) {\n        callback = channel\n        timeoutMillis = null\n        channel = null\n      }\n    }\n\n    this.tasks.push(() => {\n      return new Promise((resolve, reject) => {\n        if (this.currentChannel && !channel) {\n          channel = this.currentChannel\n        }\n        this.container.WaitBotSaysText(channel, timeoutMillis)\n          .then((text) => {\n            if (callback) callback(text)\n            resolve()\n          })\n          .catch((err) => {\n            reject(err)\n          })\n      })\n    })\n    return this\n  }\n\n  Restart () {\n    this.tasks.push(() => {\n      return this.container.Restart()\n    })\n    return this\n  }\n\n  Stop () {\n    this.tasks.push(() => {\n      return this.container.Stop()\n    })\n    return this\n  }\n\n  Clean () {\n    this.tasks.push(() => {\n      return this.container.Clean()\n    })\n    return this\n  }\n\n  Call (customFunction) {\n    this.tasks.push(() => {\n      return (customFunction(this) || Promise.resolve())\n    })\n    return this\n  }\n}\n","module.exports = {\n  // Botium Events\n  CONTAINER_BUILDING: 'CONTAINER_BUILDING',\n  CONTAINER_BUILT: 'CONTAINER_BUILT',\n  CONTAINER_BUILD_ERROR: 'CONTAINER_BUILD_ERROR',\n  CONTAINER_STARTING: 'CONTAINER_STARTING',\n  CONTAINER_STARTED: 'CONTAINER_STARTED',\n  CONTAINER_START_ERROR: 'CONTAINER_START_ERROR',\n  CONTAINER_STOPPING: 'CONTAINER_STOPPING',\n  CONTAINER_STOPPED: 'CONTAINER_STOPPED',\n  CONTAINER_STOP_ERROR: 'CONTAINER_STOP_ERROR',\n  CONTAINER_CLEANING: 'CONTAINER_CLEANING',\n  CONTAINER_CLEANED: 'CONTAINER_CLEANED',\n  CONTAINER_CLEAN_ERROR: 'CONTAINER_CLEAN_ERROR',\n  BOT_CONNECTED: 'BOT_CONNECTED',\n  // Chatbot Events\n  MESSAGE_SENTTOBOT: 'MESSAGE_SENTTOBOT',\n  MESSAGE_SENDTOBOT_ERROR: 'MESSAGE_SENDTOBOT_ERROR',\n  MESSAGE_RECEIVEDFROMBOT: 'MESSAGE_RECEIVEDFROMBOT',\n  MESSAGE_RECEIVEFROMBOT_ERROR: 'MESSAGE_RECEIVEFROMBOT_ERROR',\n  MESSAGE_ATTACHMENT: 'MESSAGE_ATTACHMENT',\n  MESSAGE_TRANSCRIPT: 'MESSAGE_TRANSCRIPT',\n  // Botium Agent Events\n  TOOMUCHWORKERS_ERROR: 'TOOMUCHWORKERS_ERROR'\n}\n","const _ = require('lodash')\n\nconst BotiumError = class BotiumError extends Error {\n  /**\n   *\n   * @param message\n   * @param context A JSON with struct\n   * {\n   *   type: 'some free text to identity the exception type',\n   *   source: 'source of the event',\n   *   ...\n   */\n  constructor (message, context, supressChildCheck) {\n    super(message.message || message)\n\n    if (!supressChildCheck && _getChildErrorsFromContext(context)) {\n      throw Error('Create BotiumError with child errors using the fromList() method!')\n    }\n    // Saving class name in the property of our custom error as a shortcut.\n    this.name = this.constructor.name\n\n    // Capturing stack trace, excluding constructor call from it.\n    Error.captureStackTrace(this, this.constructor)\n\n    this.context = context || {}\n    this.context.message = message.message || message\n  }\n\n  prettify (includeJson) {\n    const lines = []\n    if (this.context) {\n      const errArr = _.isArray(this.context) ? this.context : [this.context]\n      errArr.forEach(errDetail => {\n        lines.push('########################################')\n        if (errDetail.type === 'asserter') {\n          const segments = []\n          segments.push(`ASSERTION FAILED in ${errDetail.source}${errDetail.subtype ? ` (${errDetail.subtype})` : ''}`)\n          errDetail.cause && errDetail.cause.expected && !errDetail.cause.not && segments.push(` - Expected: ${JSON.stringify(errDetail.cause.expected)} `)\n          errDetail.cause && errDetail.cause.expected && errDetail.cause.not && segments.push(` - NOT Expected: ${JSON.stringify(errDetail.cause.expected)} `)\n          errDetail.cause && errDetail.cause.actual && segments.push(` - Actual: ${JSON.stringify(errDetail.cause.actual)}`)\n          errDetail.cause && !errDetail.cause.actual && segments.push(' - Actual: empty')\n          lines.push(segments.join(''))\n          errDetail.input && errDetail.input.messageText && lines.push(`INPUT: ${errDetail.input.messageText}`)\n        } else if (errDetail.message) {\n          lines.push(`${errDetail.message}`)\n        }\n        if (errDetail.transcript && errDetail.transcript.length > 0) {\n          lines.push('------------ TRANSCRIPT ----------------------------')\n          errDetail.transcript.forEach(transcriptStep => {\n            if (transcriptStep.actual) {\n              lines.push(transcriptStep.actual.prettify())\n            }\n          })\n        }\n        if (includeJson) {\n          lines.push('------------ JSON CONTENT ----------------------------')\n          try {\n            const jsonOutput = JSON.stringify(errDetail)\n            lines.push(jsonOutput)\n          } catch (jsonErr) {\n            lines.push(`JSON Output not possible: ${jsonErr.message}`)\n          }\n        }\n      })\n    }\n    if (lines.length > 0) {\n      return lines.join('\\r\\n')\n    } else {\n      return null\n    }\n  }\n}\n\nconst _getChildErrorsFromContext = (context) => {\n  if (context && context.errors && _.isArray(context.errors)) {\n    return context.errors\n  }\n  return false\n}\n\nconst botiumErrorFromErr = (message, err) => {\n  if (err instanceof BotiumError) {\n    return new BotiumError(message, err.context, true)\n  } else {\n    return new BotiumError(message, { err }, true)\n  }\n}\n\nconst botiumErrorFromList = (errors, { type = 'list', source = 'BotiumError', flat = true }) => {\n  const message = errors.map(err => err.message || err.toString()).join(',\\n')\n  let children = []\n\n  for (const error of errors) {\n    if (error instanceof BotiumError) {\n      const childErrors = flat && _getChildErrorsFromContext(error.context)\n      if (childErrors && childErrors.length) {\n        children = children.concat(childErrors)\n      } else if (error.context) {\n        children.push(error.context)\n      }\n    } else {\n      children.push(error)\n    }\n  }\n  const result = new BotiumError(message, { errors: children, type, source }, true)\n  return result\n}\n\nmodule.exports = {\n  BotiumError,\n  botiumErrorFromErr,\n  botiumErrorFromList\n}\n","const LOGIC_HOOK_INCLUDE = 'INCLUDE'\nmodule.exports = {\n  LOGIC_HOOK_INCLUDE,\n  DEFAULT_ASSERTERS: [\n    { name: 'BUTTONS', className: 'ButtonsAsserter' },\n    { name: 'BUTTONS_COUNT', className: 'ButtonsCountAsserter' },\n    { name: 'BUTTONS_COUNT_REC', className: 'ButtonsCountRecAsserter' },\n    { name: 'MEDIA', className: 'MediaAsserter' },\n    { name: 'MEDIA_COUNT', className: 'MediaCountAsserter' },\n    { name: 'MEDIA_COUNT_REC', className: 'MediaCountRecAsserter' },\n    { name: 'CARDS', className: 'CardsAsserter' },\n    { name: 'CARDS_COUNT', className: 'CardsCountAsserter' },\n    { name: 'CARDS_COUNT_REC', className: 'CardsCountRecAsserter' },\n    { name: 'PAUSE_ASSERTER', className: 'PauseAsserter' },\n    { name: 'JSON_PATH', className: 'JsonPathAsserter' },\n    { name: 'JSON_PATH_COUNT', className: 'JsonPathCountAsserter' },\n    { name: 'RESPONSE_LENGTH', className: 'ResponseLengthAsserter' },\n    { name: 'FORMS', className: 'FormsAsserter' },\n\n    { name: 'ENTITIES', className: 'EntitiesAsserter' },\n    { name: 'ENTITY_VALUES', className: 'EntityValuesAsserter' },\n    { name: 'ENTITY_CONTENT', className: 'EntityContentAsserter' },\n\n    { name: 'INTENT', className: 'IntentAsserter' },\n    { name: 'INTENT_UNIQUE', className: 'IntentUniqueAsserter' },\n    { name: 'INTENT_CONFIDENCE', className: 'IntentConfidenceAsserter' },\n\n    { name: 'TEXT_CONTAINS_ANY', className: 'TextContainsAnyAsserter' },\n    { name: 'TEXT_CONTAINS_ANY_IC', className: 'TextContainsAnyICAsserter' },\n    { name: 'TEXT_CONTAINS_ALL', className: 'TextContainsAllAsserter' },\n    { name: 'TEXT_CONTAINS_ALL_IC', className: 'TextContainsAllICAsserter' },\n    { name: 'TEXT_WILDCARD_ANY', className: 'TextWildcardAnyAsserter' },\n    { name: 'TEXT_WILDCARD_ANY_IC', className: 'TextWildcardAnyICAsserter' },\n    { name: 'TEXT_WILDCARD_ALL', className: 'TextWildcardAllAsserter' },\n    { name: 'TEXT_WILDCARD_ALL_IC', className: 'TextWildcardAllICAsserter' },\n    { name: 'TEXT_WILDCARDEXACT_ANY', className: 'TextWildcardExactAnyAsserter' },\n    { name: 'TEXT_WILDCARDEXACT_ANY_IC', className: 'TextWildcardExactAnyICAsserter' },\n    { name: 'TEXT_WILDCARDEXACT_ALL', className: 'TextWildcardExactAllAsserter' },\n    { name: 'TEXT_WILDCARDEXACT_ALL_IC', className: 'TextWildcardExactAllICAsserter' },\n    { name: 'TEXT_REGEXP_ANY', className: 'TextRegexpAnyAsserter' },\n    { name: 'TEXT_REGEXP_ANY_IC', className: 'TextRegexpAnyICAsserter' },\n    { name: 'TEXT_REGEXP_ALL', className: 'TextRegexpAllAsserter' },\n    { name: 'TEXT_REGEXP_ALL_IC', className: 'TextRegexpAllICAsserter' },\n    { name: 'TEXT_EQUALS', className: 'TextEqualsAnyAsserter' },\n    { name: 'TEXT_EQUALS_IC', className: 'TextEqualsAnyICAsserter' },\n    { name: 'TEXT', className: 'TextEqualsAnyAsserter' },\n    { name: 'TEXT_IC', className: 'TextEqualsAnyICAsserter' },\n\n    { name: 'BOT_CONSUMED', className: 'BotRepliesConsumedAsserter' },\n    { name: 'BOT_UNCONSUMED_COUNT', className: 'BotRepliesUnconsumedCountAsserter' }\n  ],\n  DEFAULT_LOGIC_HOOKS: [\n    { name: 'PAUSE', className: 'PauseLogicHook' },\n    { name: 'WAITFORBOT', className: 'WaitForBotLogicHook' },\n    { name: 'SET_SCRIPTING_MEMORY', className: 'SetScriptingMemoryLogicHook' },\n    { name: 'CLEAR_SCRIPTING_MEMORY', className: 'ClearScriptingMemoryLogicHook' },\n    { name: 'ASSIGN_SCRIPTING_MEMORY', className: 'AssignScriptingMemoryLogicHook' },\n    { name: 'UPDATE_CUSTOM', className: 'UpdateCustomLogicHook' },\n    { name: 'SKIP_BOT_UNCONSUMED', className: 'ClearQueueLogicHook' },\n    { name: LOGIC_HOOK_INCLUDE, className: 'IncludeLogicHook' }\n  ],\n  DEFAULT_USER_INPUTS: [\n    { name: 'BUTTON', className: 'ButtonInput' },\n    { name: 'MEDIA', className: 'MediaInput' },\n    { name: 'FORM', className: 'FormInput' }\n  ]\n}\n","const { NodeVM } = require('vm2')\nconst path = require('path')\nconst fs = require('fs')\nconst isClass = require('is-class')\nconst debug = require('debug')('botium-core-asserterUtils')\n\nconst { BotiumError } = require('../BotiumError')\n\nconst { DEFAULT_ASSERTERS, DEFAULT_LOGIC_HOOKS, DEFAULT_USER_INPUTS } = require('./LogicHookConsts')\n\nDEFAULT_ASSERTERS.forEach((asserter) => {\n  asserter.Class = require(`./asserter/${asserter.className}`)\n})\n\nDEFAULT_LOGIC_HOOKS.forEach((logicHook) => {\n  logicHook.Class = require(`./logichooks/${logicHook.className}`)\n})\n\nDEFAULT_USER_INPUTS.forEach((userInput) => {\n  userInput.Class = require(`./userinput/${userInput.className}`)\n})\n\nconst Capabilities = require('../../Capabilities')\nconst _ = require('lodash')\n\nmodule.exports = class LogicHookUtils {\n  constructor ({ buildScriptContext, caps }) {\n    this.asserters = {}\n    this.globalAsserters = []\n    this.logicHooks = {}\n    this.globalLogicHooks = []\n    this.userInputs = {}\n    this.buildScriptContext = buildScriptContext\n    this.caps = caps\n    this._setDefaultAsserters()\n    this._setDefaultLogicHooks()\n    this._setDefaultUserInputs()\n    this._fetchAsserters()\n    this._fetchLogicHooks()\n    this._fetchUserInputs()\n  }\n\n  _setDefaultAsserters () {\n    DEFAULT_ASSERTERS.forEach((asserter) => {\n      this.asserters[asserter.name] = new (asserter.Class)(this.buildScriptContext, this.caps)\n    })\n  }\n\n  _setDefaultLogicHooks () {\n    DEFAULT_LOGIC_HOOKS.forEach((lh) => {\n      this.logicHooks[lh.name] = new (lh.Class)(this.buildScriptContext, this.caps)\n    })\n  }\n\n  _setDefaultUserInputs () {\n    DEFAULT_USER_INPUTS.forEach((ui) => {\n      this.userInputs[ui.name] = new (ui.Class)(this.buildScriptContext, this.caps)\n    })\n  }\n\n  _fetchAsserters () {\n    this.caps[Capabilities.ASSERTERS]\n      .forEach(asserter => {\n        if (this.asserters[asserter.ref]) {\n          debug(`${asserter.ref} asserter already exists, overwriting.`)\n        }\n        this.asserters[asserter.ref] = this._loadClass(asserter, 'asserter')\n        if (asserter.global) {\n          this.globalAsserters.push(asserter.ref)\n        }\n      })\n  }\n\n  _fetchLogicHooks () {\n    this.caps[Capabilities.LOGIC_HOOKS]\n      .forEach(logicHook => {\n        if (this.logicHooks[logicHook.ref]) {\n          debug(`${logicHook.ref} logic hook already exists, overwriting.`)\n        }\n        this.logicHooks[logicHook.ref] = this._loadClass(logicHook, 'logichook')\n        if (logicHook.global) {\n          this.globalLogicHooks.push(logicHook.ref)\n        }\n      })\n  }\n\n  _fetchUserInputs () {\n    this.caps[Capabilities.USER_INPUTS]\n      .forEach(userInput => {\n        if (this.userInputs[userInput.ref]) {\n          debug(`${userInput.ref} userinput already exists, overwriting.`)\n        }\n        this.userInputs[userInput.ref] = this._loadClass(userInput, 'userinput')\n      })\n  }\n\n  getGlobalAsserter () {\n    return this.globalAsserters\n      .map(name => this.asserters[name])\n  }\n\n  getGlobalLogicHook () {\n    return this.globalLogicHooks\n      .map(name => this.logicHooks[name])\n  }\n\n  _loadClass ({ src, ref, args }, hookType) {\n    if (hookType !== 'asserter' && hookType !== 'logichook' && hookType !== 'userinput') {\n      throw Error(`Unknown hookType ${hookType}`)\n    }\n\n    // 1 gives possibility to use default asserter as global asserter\n    if (hookType === 'asserter') {\n      const asserter = DEFAULT_ASSERTERS.find(asserter => src === asserter.className)\n      if (asserter) {\n        return new (asserter.Class)({ ref, ...this.buildScriptContext }, this.caps, args)\n      }\n    }\n    if (hookType === 'logichook') {\n      const lh = DEFAULT_LOGIC_HOOKS.find(lh => src === lh.className)\n      if (lh) {\n        return new (lh.Class)({ ref, ...this.buildScriptContext }, this.caps, args)\n      }\n    }\n    if (hookType === 'userinput') {\n      const ui = DEFAULT_USER_INPUTS.find(ui => src === ui.className)\n      if (ui) {\n        return new (ui.Class)({ ref, ...this.buildScriptContext }, this.caps, args)\n      }\n    }\n\n    const _checkUnsafe = () => {\n      if (!this.caps[Capabilities.SECURITY_ALLOW_UNSAFE]) {\n        throw new BotiumError(\n          'Security Error. Using unsafe component is not allowed',\n          {\n            type: 'security',\n            subtype: 'allow unsafe',\n            source: path.basename(__filename),\n            cause: { src: !!src, ref, args, hookType }\n          }\n        )\n      }\n    }\n\n    if (!src) {\n      const packageName = `botium-${hookType}-${ref}`\n      try {\n        const CheckClass = require(packageName)\n        if (isClass(CheckClass)) {\n          return new CheckClass({ ref, ...this.buildScriptContext }, this.caps, args)\n        } else if (_.isFunction(CheckClass)) {\n          return CheckClass({ ref, ...this.buildScriptContext }, this.caps, args)\n        } else if (isClass(CheckClass.PluginClass)) {\n          return new CheckClass.PluginClass({ ref, ...this.buildScriptContext }, this.caps, args)\n        } else {\n          throw new Error(`${packageName} class or function or PluginClass field expected`)\n        }\n      } catch (err) {\n        throw new Error(`Failed to fetch hook ${ref} ${hookType} from guessed package ${packageName} - ${err.message}`)\n      }\n    }\n\n    if (isClass(src)) {\n      try {\n        const CheckClass = src\n        return new CheckClass({ ref, ...this.buildScriptContext }, this.caps, args)\n      } catch (err) {\n        throw new Error(`Failed to load package ${ref} from provided class - ${err.message}`)\n      }\n    }\n    if (_.isFunction(src)) {\n      try {\n        return src({ ref, ...this.buildScriptContext }, this.caps, args)\n      } catch (err) {\n        throw new Error(`Failed to load package ${ref} from provided function - ${err.message}`)\n      }\n    }\n    if (_.isObject(src) && !_.isString(src)) {\n      try {\n        const hookObject = Object.keys(src).reduce((result, key) => {\n          result[key] = (args) => {\n            const script = src[key]\n            if (_.isFunction(script)) {\n              return script(args)\n            } else if (_.isString(script)) {\n              try {\n                const vm = new NodeVM({\n                  eval: false,\n                  require: false,\n                  sandbox: args\n                })\n                return vm.run(script)\n              } catch (err) {\n                throw new Error(`${err.message || err}`)\n              }\n            } else {\n              throw new Error(`Script \"${key}\" is not valid - only functions and javascript code accepted`)\n            }\n          }\n          return result\n        }, {})\n        return hookObject\n      } catch (err) {\n        throw new Error(`Failed to load package ${ref} ${hookType} from provided src function - ${err.message}`)\n      }\n    }\n\n    if (_.isString(src)) {\n      const loadErr = []\n\n      const tryLoads = [{\n        tryLoadPackageName: src,\n        tryLoadAsserterByName: null\n      }]\n      if (src.indexOf('/') >= 0) {\n        tryLoads.push({\n          tryLoadPackageName: src.substr(0, src.lastIndexOf('/')),\n          tryLoadAsserterByName: src.substr(src.lastIndexOf('/') + 1)\n        })\n      }\n\n      const tryLoadFromSource = (tryRequire, tryAsserterName) => {\n        let CheckClass = require(tryRequire)\n        if (CheckClass.default) {\n          CheckClass = CheckClass.default\n        }\n        if (tryAsserterName) {\n          if (hookType === 'asserter' && CheckClass.PluginAsserters && CheckClass.PluginAsserters[tryAsserterName]) {\n            CheckClass = CheckClass.PluginAsserters[tryAsserterName]\n          } else if (hookType === 'logichook' && CheckClass.PluginLogicHooks && CheckClass.PluginLogicHooks[tryAsserterName]) {\n            CheckClass = CheckClass.PluginLogicHooks[tryAsserterName]\n          } else {\n            throw new Error(`Loaded ${tryRequire}, but ${tryAsserterName} ${hookType} not found.`)\n          }\n        }\n        if (isClass(CheckClass)) {\n          return new CheckClass({ ref, ...this.buildScriptContext }, this.caps, args)\n        } else if (_.isFunction(CheckClass)) {\n          return CheckClass({ ref, ...this.buildScriptContext }, this.caps, args)\n        } else if (isClass(CheckClass.PluginClass)) {\n          return new CheckClass.PluginClass({ ref, ...this.buildScriptContext }, this.caps, args)\n        } else {\n          throw new Error(`${src} class or function expected`)\n        }\n      }\n\n      for (const tryLoad of tryLoads) {\n        const tryLoadFile = path.resolve(process.cwd(), tryLoad.tryLoadPackageName)\n        if (fs.existsSync(tryLoadFile)) {\n          _checkUnsafe()\n          try {\n            return tryLoadFromSource(tryLoadFile, tryLoad.tryLoadAsserterByName)\n          } catch (err) {\n            loadErr.push(`Failed to fetch ${ref} ${hookType} from ${src} - ${err.message} `)\n          }\n        }\n        try {\n          return tryLoadFromSource(tryLoad.tryLoadPackageName, tryLoad.tryLoadAsserterByName)\n        } catch (err) {\n          loadErr.push(`Failed to fetch ${ref} ${hookType} from ${src} - ${err.message} `)\n        }\n      }\n\n      loadErr.forEach(debug)\n    }\n    throw new Error(`Failed to fetch ${ref} ${hookType}, no idea how to load ...`)\n  }\n}\n","module.exports = {\n  SCRIPTING_FORMAT_XSLX: 'SCRIPTING_FORMAT_XSLX',\n  SCRIPTING_FORMAT_TXT: 'SCRIPTING_FORMAT_TXT',\n  SCRIPTING_FORMAT_YAML: 'SCRIPTING_FORMAT_YAML',\n  SCRIPTING_FORMAT_JSON: 'SCRIPTING_FORMAT_JSON',\n  SCRIPTING_FORMAT_CSV: 'SCRIPTING_FORMAT_CSV',\n  SCRIPTING_FORMAT_MARKDOWN: 'SCRIPTING_FORMAT_MARKDOWN',\n  SCRIPTING_TYPE_CONVO: 'SCRIPTING_TYPE_CONVO',\n  SCRIPTING_TYPE_PCONVO: 'SCRIPTING_TYPE_PCONVO',\n  SCRIPTING_TYPE_UTTERANCES: 'SCRIPTING_TYPE_UTTERANCES',\n  SCRIPTING_TYPE_SCRIPTING_MEMORY: 'SCRIPTING_TYPE_SCRIPTING_MEMORY'\n}\n","module.exports = class BotiumMockAttachment {\n  constructor (fromJson = {}) {\n    this.name = fromJson.name\n    this.mimeType = fromJson.mimeType\n    this.base64 = fromJson.base64\n    this.href = fromJson.href\n  }\n}\n","const _ = require('lodash')\n\nclass BotiumMockMedia {\n  constructor (fromJson = {}) {\n    this.mediaUri = fromJson.mediaUri\n    this.mimeType = fromJson.mimeType\n    this.altText = fromJson.altText\n    this.downloadUri = fromJson.downloadUri\n    this.buffer = fromJson.buffer\n  }\n\n  prettify (indent = 0) {\n    const sections = []\n    if (this.mediaUri) sections.push(_.truncate(this.mediaUri, { length: 200 }))\n    if (this.mimeType) sections.push(this.mimeType)\n    if (this.altText) sections.push(this.altText)\n    return `${' '.repeat(indent)}MEDIA(${sections.join(' | ')})`\n  }\n}\n\nclass BotiumMockButton {\n  constructor (fromJson = {}) {\n    this.text = fromJson.text\n    this.payload = fromJson.payload\n    this.imageUri = fromJson.imageUri\n  }\n\n  prettify (indent = 0) {\n    const sections = []\n    if (this.text) sections.push(this.text)\n    if (this.payload) sections.push(_.isObject(this.payload) ? JSON.stringify(this.payload) : this.payload)\n    if (this.imageUri) sections.push(_.truncate(this.imageUri, { length: 200 }))\n    return `${' '.repeat(indent)}BUTTON(${sections.join(' | ')})`\n  }\n}\n\nclass BotiumMockCard {\n  constructor (fromJson = {}) {\n    this.text = fromJson.text\n    this.subtext = fromJson.subtext\n    this.content = fromJson.content\n    this.sourceData = fromJson.sourceData\n    this.image = (fromJson.image ? new BotiumMockMedia(fromJson.image) : null)\n    this.buttons = (fromJson.buttons ? fromJson.buttons.map((a) => new BotiumMockButton(a)) : null)\n    this.media = (fromJson.media ? fromJson.media.map((a) => new BotiumMockMedia(a)) : null)\n    this.forms = (fromJson.forms ? fromJson.forms.map((a) => new BotiumMockForm(a)) : null)\n    this.cards = (fromJson.cards ? fromJson.cards.map((a) => new BotiumMockCard(a)) : null)\n    this.sourceData = fromJson.sourceData\n  }\n\n  prettify (indent = 0) {\n    return this._prettifyLines(this, indent).join('\\n')\n  }\n\n  _prettifyLines (card, indent) {\n    const prettifySafe = (entry, indent) => entry.prettify ? entry.prettify(2) : `${' '.repeat(indent)}<No botium object!>${JSON.stringify(entry)}`\n\n    const sections = []\n    if (card.text) sections.push(card.text)\n    if (card.subtext) sections.push(card.subtext)\n\n    const lines = []\n    if (card.image) lines.push(card.image.prettify(indent + 2))\n    if (card.media) lines.push(...card.media.map(m => prettifySafe(m, indent + 2)))\n    if (card.buttons) lines.push(...card.buttons.map(b => prettifySafe(b, indent + 2)))\n    if (card.forms) lines.push(...card.forms.map(f => prettifySafe(f, indent + 2)))\n    if (card.cards) lines.push(...card.cards.map(c => this._prettifyLines(c, indent + 2)))\n\n    return [\n      `${' '.repeat(indent)}CARD(${sections.join(' | ')})`,\n      ...lines\n    ]\n  }\n}\n\nclass BotiumMockForm {\n  constructor (fromJson = {}) {\n    this.name = fromJson.name\n    this.value = fromJson.value\n\n    this.label = fromJson.label\n    this.type = fromJson.type\n    this.options = (fromJson.options ? fromJson.options.map((c) => new BotiumMockChoice(c)) : null)\n  }\n\n  prettify (indent = 0) {\n    const sections = []\n    if (this.name) sections.push(this.name)\n    if (this.label) sections.push(this.label)\n    if (this.value) sections.push(this.value)\n    return `${' '.repeat(indent)}FORM(${sections.join(' | ')})`\n  }\n}\n\nclass BotiumMockChoice {\n  constructor (fromJson = {}) {\n    this.title = fromJson.title\n    this.value = fromJson.value\n  }\n}\n\nmodule.exports = {\n  BotiumMockMedia,\n  BotiumMockButton,\n  BotiumMockCard,\n  BotiumMockForm\n}\n","const _ = require('lodash')\n\nclass BotiumMockAsserter {\n  constructor (fromJson = {}) {\n    this.name = fromJson.name\n    this.args = _.cloneDeep(fromJson.args)\n  }\n}\nclass BotiumMockUserInput {\n  constructor (fromJson = {}) {\n    this.name = fromJson.name\n    this.args = _.cloneDeep(fromJson.args)\n  }\n}\nclass BotiumMockLogicHook {\n  constructor (fromJson = {}) {\n    this.name = fromJson.name\n    this.args = _.cloneDeep(fromJson.args)\n  }\n}\n\nmodule.exports = {\n  BotiumMockAsserter,\n  BotiumMockUserInput,\n  BotiumMockLogicHook\n}\n","const BotiumMockAttachment = require('./BotiumMockAttachment')\nconst { BotiumMockMedia, BotiumMockButton, BotiumMockCard, BotiumMockForm } = require('./BotiumMockRichMessageTypes')\nconst { BotiumMockAsserter, BotiumMockUserInput, BotiumMockLogicHook } = require('./BotiumMockScripting')\n\nmodule.exports = class BotiumMockMessage {\n  constructor (fromJson = {}) {\n    this.sender = fromJson.sender\n    this.channel = fromJson.channel\n    this.not = fromJson.not\n    this.optional = fromJson.optional\n    this.messageText = fromJson.messageText\n    this.media = (fromJson.media ? fromJson.media.map((a) => new BotiumMockMedia(a)) : null)\n    this.buttons = (fromJson.buttons ? fromJson.buttons.map((a) => new BotiumMockButton(a)) : null)\n    this.cards = (fromJson.cards ? fromJson.cards.map((a) => new BotiumMockCard(a)) : null)\n    this.forms = (fromJson.forms ? fromJson.forms.map((a) => new BotiumMockForm(a)) : null)\n    this.nlp = fromJson.nlp\n    this.sourceData = fromJson.sourceData\n    this.sourceAction = fromJson.sourceAction\n    this.attachments = (fromJson.attachments ? fromJson.attachments.map((a) => new BotiumMockAttachment(a)) : null)\n    this.asserters = (fromJson.asserters ? fromJson.asserters.map((a) => new BotiumMockAsserter(a)) : null)\n    this.userInputs = (fromJson.userInputs ? fromJson.userInputs.map((a) => new BotiumMockUserInput(a)) : null)\n    this.logicHooks = (fromJson.logicHooks ? fromJson.logicHooks.map((a) => new BotiumMockLogicHook(a)) : null)\n  }\n\n  prettify () {\n    const prettifySafe = (entry) => entry.prettify ? entry.prettify(2) : `${' '.repeat(2)}<No botium object!>${JSON.stringify(entry)}`\n    const lines = []\n    if (this.messageText) lines.push(this.messageText)\n    if (this.media && this.media.length > 0) lines.push(...this.media.map(m => prettifySafe(m)))\n    if (this.buttons && this.buttons.length > 0) lines.push(...this.buttons.map(b => prettifySafe(b)))\n    if (this.cards && this.cards.length > 0) lines.push(...this.cards.map(c => prettifySafe(c)))\n    if (this.forms && this.forms.length > 0) lines.push(...this.forms.map(f => prettifySafe(f)))\n\n    if (lines.length === 0) return `#${this.sender}:`\n\n    return [\n      `#${this.sender}: ${lines[0]}`,\n      ...lines.slice(1)\n    ].join('\\n')\n  }\n}\n","const _ = require('lodash')\nconst isJSON = require('is-json')\n\nconst normalizeText = (str, doCleanup) => {\n  if (str && _.isArray(str)) {\n    str = str.join(' ')\n  } else if (str && !_.isString(str)) {\n    if (str.toString) {\n      str = str.toString()\n    } else {\n      str = `${str}`\n    }\n  }\n  if (str && doCleanup) {\n    // remove html tags\n    str = str.replace(/<p[^>]*>/g, ' ')\n    str = str.replace(/<\\/p>/g, ' ')\n    str = str.replace(/<br[^>]*>/g, ' ')\n    str = str.replace(/<[^>]*>/g, '')\n    /* eslint-disable no-control-regex */\n    // remove not printable characters\n    str = str.replace(/[\\x00-\\x1F\\x7F]/g, ' ')\n    /* eslint-enable no-control-regex */\n    // replace html entities\n    str = str\n      .replace(/&amp;/g, '&')\n      .replace(/&lt;/g, '<')\n      .replace(/&gt;/g, '>')\n      .replace(/&#39;/g, '\\'')\n      .replace(/&quot;/g, '\"')\n    // replace two spaces with one\n    str = str.replace(/\\s+/g, ' ')\n\n    str = str.split('\\n').map(s => s.trim()).join('\\n').trim()\n  }\n  return str\n}\n\nconst splitStringInNonEmptyLines = (str) => str ? str.split('\\n').map(s => s.trim()).filter(s => s.length > 0) : []\n\nconst quoteRegexpString = (str) => {\n  return str.replace(/[-\\\\^$*+?.()|[\\]{}]/g, '\\\\$&')\n}\n\nconst removeBuffers = obj => {\n  const jsonString = JSON.stringify(obj, (key, value) => {\n    if (_.isBuffer(value)) {\n      return '(binary data)'\n    } else if (value && value.type && value.type === 'Buffer') {\n      return '(binary data)'\n    } else if (key.toLowerCase() === 'base64') {\n      return '(base64 data)'\n    } else if (_.isString(value) && value.startsWith('data:')) {\n      return '(base64 data url)'\n    }\n    return value\n  })\n  return JSON.parse(jsonString)\n}\n\nconst toString = (value) => {\n  if (_.isUndefined(value)) return undefined\n  if (_.isString(value)) return value\n  if (_.isNumber(value)) return value.toString()\n  if (_.isArray(value)) return value.map(v => toString(v)).join(',')\n  try {\n    return JSON.stringify(value)\n  } catch (err) {\n  }\n  if (value && value.toString) return value.toString()\n  return '' + value\n}\n\nconst flatString = (str) => {\n  return str ? str.split('\\n').map(s => s.trim()).join(' ') : ''\n}\n\nconst linesToConvoStep = (lines, sender, context, eol, singleLineMode = false) => {\n  if (!validateSender(sender)) throw new Error(`Failed to parse conversation. Section \"${sender}\" unknown.`)\n\n  const convoStep = { asserters: [], logicHooks: [], userInputs: [], not: false, optional: false, sender }\n\n  let textLinesRaw = []\n  const textLines = []\n  // local eslint accepts it without disable, but build on github does not\n  // eslint-disable-next-line no-unused-vars\n  let textLinesAccepted = true\n  for (const rawLine of lines) {\n    if (_.isString(rawLine)) {\n      let optional = false\n      let not = false\n      let logicLine = rawLine\n      if (logicLine.startsWith('?')) {\n        if (!logicLine.startsWith('??')) {\n          optional = true\n        }\n        logicLine = logicLine.substr(1)\n      }\n      if (logicLine.startsWith('!')) {\n        if (!logicLine.startsWith('!!')) {\n          not = true\n        }\n        logicLine = logicLine.substr(1)\n      }\n      const name = logicLine.split(' ')[0]\n      if (sender !== 'me' && context.IsAsserterValid(name)) {\n        const args = (logicLine.length > name.length ? logicLine.substr(name.length + 1).split('|').map(a => a.trim()) : [])\n        convoStep.asserters.push({ name, args, not, optional })\n      } else if (sender === 'me' && context.IsUserInputValid(name)) {\n        const args = (logicLine.length > name.length ? logicLine.substr(name.length + 1).split('|').map(a => a.trim()) : [])\n        convoStep.userInputs.push({ name, args })\n        textLinesAccepted = false\n      } else if (context.IsLogicHookValid(name)) {\n        const args = (logicLine.length > name.length ? logicLine.substr(name.length + 1).split('|').map(a => a.trim()) : [])\n        convoStep.logicHooks.push({ name, args })\n        textLinesAccepted = false\n      } else {\n        if (sender === 'me') {\n          if (!textLinesAccepted) {\n            if (rawLine.trim().length) {\n              throw new Error(`Failed to parse conversation. No text expected here: '${rawLine.trim()}' in convo:\\n ${lines.join('\\n')}`)\n            } else {\n              // skip empty lines\n            }\n          } else {\n            textLinesRaw.push(rawLine)\n          }\n        } else {\n          textLinesRaw.push(rawLine)\n        }\n      }\n      // line is not textline if it is empty, and there is no line with data after it.\n      if (textLinesRaw.length > 0) {\n        if (rawLine.trim().length) {\n          textLines.push(...textLinesRaw)\n          textLinesRaw = []\n        }\n      }\n    } else if (_.isObject(rawLine)) {\n      if (rawLine.asserter) {\n        if (sender !== 'bot') throw new Error(`Failed to parse conversation. No asserter \"${rawLine.asserter}\" expected in section \"${sender}\"`)\n        if (!context.IsAsserterValid(rawLine.asserter)) throw new Error(`Failed to parse conversation. No asserter \"${rawLine.asserter}\" registered for section \"${sender}\"`)\n        convoStep.asserters.push({\n          name: rawLine.asserter,\n          args: (rawLine.args && _.isString(rawLine.args) ? [rawLine.args] : rawLine.args) || [],\n          not: !!rawLine.not,\n          optional: !!rawLine.optional\n        })\n      } else if (rawLine.logichook || rawLine.logicHook) {\n        const logicHookName = rawLine.logichook || rawLine.logicHook\n        if (!context.IsLogicHookValid(logicHookName)) throw new Error(`Failed to parse conversation. No logichook \"${logicHookName}\" registered for section \"${sender}\"`)\n        convoStep.logicHooks.push({\n          name: logicHookName,\n          args: (rawLine.args && _.isString(rawLine.args) ? [rawLine.args] : rawLine.args) || []\n        })\n      } else if (rawLine.userinput || rawLine.userInput) {\n        const userInputName = rawLine.userinput || rawLine.userInput\n        if (sender !== 'me') throw new Error(`Failed to parse conversation. No userinput \"${userInputName}\" expected in section \"${sender}\"`)\n        if (!context.IsUserInputValid(userInputName)) throw new Error(`Failed to parse conversation. No userinput \"${userInputName}\" registered for section \"${sender}\"`)\n        convoStep.userInputs.push({\n          name: userInputName,\n          args: (rawLine.args && _.isString(rawLine.args) ? [rawLine.args] : rawLine.args) || []\n        })\n      } else {\n        let name = Object.keys(rawLine)[0]\n        const content = rawLine[name]\n        let optional = false\n        let not = false\n        if (name.startsWith('?')) {\n          optional = true\n          name = name.substr(1)\n        } else if (name.startsWith('OPTIONAL_')) {\n          optional = true\n          name = name.substr(9)\n        }\n        if (name.startsWith('!')) {\n          not = true\n          name = name.substr(1)\n        } else if (name.startsWith('NOT_')) {\n          not = true\n          name = name.substr(4)\n        }\n        if (sender !== 'me' && context.IsAsserterValid(name)) {\n          convoStep.asserters.push({\n            name,\n            args: (content && _.isString(content) ? [content] : content) || [],\n            not,\n            optional\n          })\n        } else if (sender === 'me' && context.IsUserInputValid(name)) {\n          convoStep.userInputs.push({\n            name,\n            args: (content && _.isString(content) ? [content] : content) || []\n          })\n        } else if (context.IsLogicHookValid(name)) {\n          convoStep.logicHooks.push({\n            name,\n            args: (content && _.isString(content) ? [content] : content) || []\n          })\n        } else {\n          throw new Error(`Failed to parse conversation. Line not recognized '${JSON.stringify(rawLine)}'`)\n        }\n      }\n    } else {\n      throw new Error(`Failed to parse conversation. Line not recognized '${JSON.stringify(rawLine)}'`)\n    }\n  }\n\n  // deal with just message convosteps\n  if (textLinesRaw.length >= 1 && textLines.length === 0) {\n    textLines.push(...textLinesRaw)\n    textLinesRaw.pop()\n  }\n\n  if (textLines.length > 0) {\n    if (textLines[0].startsWith('?')) {\n      if (!textLines[0].startsWith('??')) {\n        convoStep.optional = true\n      }\n      textLines[0] = textLines[0].substr(1)\n    }\n    if (textLines[0].startsWith('!')) {\n      if (!textLines[0].startsWith('!!')) {\n        convoStep.not = true\n      }\n      textLines[0] = textLines[0].substr(1)\n    }\n    const content = textLines.join(' ')\n    if (isJSON(content)) {\n      convoStep.sourceData = JSON.parse(content)\n    } else {\n      /// csv has always just 1 line, and has no eol setting\n      if (singleLineMode) {\n        convoStep.messageText = textLines[0]\n      } else {\n        if (eol === null) {\n          throw new Error('eol cant be null')\n        }\n        convoStep.messageText = textLines.join(eol).trim()\n      }\n    }\n  } else {\n    // no message is different from empty message\n    convoStep.messageText = null\n  }\n\n  // Check if all element in convo step is optional or not optional\n  const optionalSet = new Set()\n  if (convoStep.messageText) {\n    optionalSet.add(convoStep.optional)\n  }\n  for (const asserter of convoStep.asserters) {\n    optionalSet.add(asserter.optional)\n  }\n  if (optionalSet.size > 1) {\n    throw new Error(`Failed to parse conversation. All element in convo step has to be optional or not optional: ${JSON.stringify(lines)}`)\n  }\n\n  return convoStep\n}\n\nconst convoStepToObject = (step) => {\n  const result = []\n  if (step.sender === 'me') {\n    for (const form of (step.forms || []).filter(form => form.value)) {\n      result.push({\n        userinput: 'FORM',\n        args: [form.name, form.value]\n      })\n    }\n    if (step.buttons && step.buttons.length > 0) {\n      const userinput = {\n        userinput: 'BUTTON',\n        args: []\n      }\n      if (step.buttons[0].payload) {\n        userinput.args.push(step.buttons[0].payload)\n        if (step.buttons[0].text) {\n          userinput.args.push(step.buttons[0].text)\n        }\n      } else {\n        userinput.args.push(step.buttons[0].text)\n      }\n      result.push(userinput)\n    } else if (step.media && step.media.length > 0) {\n      result.push({\n        userinput: 'MEDIA',\n        args: [step.media[0].mediaUri]\n      })\n    } else if (step.messageText) {\n      result.push(step.messageText)\n    }\n    for (const logicHook of step.logicHooks || []) {\n      result.push({\n        logichook: logicHook.name,\n        args: logicHook.args || []\n      })\n    }\n  } else {\n    if (step.messageText) {\n      let messageTextPrefix = ''\n      if (step.optional) messageTextPrefix += '?'\n      if (step.not) messageTextPrefix += '!'\n      result.push(messageTextPrefix + step.messageText)\n    }\n    if (step.buttons && step.buttons.length > 0) {\n      result.push({\n        asserter: 'BUTTONS',\n        args: step.buttons.map(b => flatString(b.text))\n      })\n    }\n    if (step.media && step.media.length > 0) {\n      result.push({\n        asserter: 'MEDIA',\n        args: step.media.map(m => { return m.buffer && m.buffer.startsWith('data:') ? 'data:' : m.mediaUri })\n      })\n    }\n    if (step.cards && step.cards.length > 0) {\n      step.cards.forEach(c => {\n        let cardTexts = []\n        if (c.text) cardTexts = cardTexts.concat(_.isArray(c.text) ? c.text : [c.text])\n        if (c.subtext) cardTexts = cardTexts.concat(_.isArray(c.subtext) ? c.subtext : [c.subtext])\n        if (c.content) cardTexts = cardTexts.concat(_.isArray(c.content) ? c.content : [c.content])\n        if (cardTexts.length > 0) {\n          result.push({\n            asserter: 'CARDS',\n            args: cardTexts.map(c => flatString(c))\n          })\n        }\n\n        if (c.buttons && c.buttons.length > 0) {\n          result.push({\n            asserter: 'BUTTONS',\n            args: c.buttons.map(b => b.text)\n          })\n        }\n        if (c.image) {\n          result.push({\n            asserter: 'MEDIA',\n            args: c.image.mediaUr,\n            not: !!step.not\n          })\n        }\n      })\n    }\n    for (const asserter of step.asserters || []) {\n      result.push({\n        asserter: asserter.name,\n        args: asserter.args || [],\n        optional: !!asserter.optional,\n        not: !!asserter.not\n      })\n    }\n    for (const logicHook of step.logicHooks || []) {\n      result.push({\n        logichook: logicHook.name,\n        args: logicHook.args || []\n      })\n    }\n  }\n  return result\n}\n\nconst validSenders = ['begin', 'include', 'me', 'bot', 'end']\n\nconst validateSender = (sender) => {\n  if (validSenders.indexOf(sender) >= 0) return true\n  else return false\n}\n\nconst validateConvo = (convo) => {\n  const validationResult = {\n    errors: []\n  }\n  for (let i = 0; i < convo.conversation.length; i++) {\n    const step = convo.conversation[i]\n    if (step.sender === 'bot') {\n      // Check if all element in convo step is optional or not optional\n      const optionalSet = new Set()\n      if (step.messageText) {\n        optionalSet.add(step.optional)\n      }\n      if (step.asserters) {\n        for (const asserter of step.asserters) {\n          optionalSet.add(asserter.optional)\n        }\n      }\n      if (optionalSet.size > 1) {\n        validationResult.errors.push(new Error(`Step ${i + 1}: Failed to decompile conversation. Mixed optional flag is not allowed inside one step.`))\n      }\n\n      if (optionalSet.size === 1 && optionalSet.has(true)) {\n        const nextStep = convo.conversation[i + 1]\n        if (!nextStep || nextStep.sender !== 'bot') {\n          validationResult.errors.push(new Error(`Step ${i + 1}: Optional bot convo step has to be followed by a bot convo step.`))\n        }\n      }\n    }\n    if (!validateSender(step.sender)) {\n      validationResult.errors.push(new Error(`Step ${i + 1}: Sender #${step.sender} is invalid.`))\n    }\n  }\n  return validationResult\n}\n\nconst _decompileButton = (b) => {\n  let buttonScript = ''\n  if (b.payload) {\n    buttonScript += _.isObject(b.payload) ? JSON.stringify(b.payload) : flatString(b.payload)\n    if (b.text) {\n      buttonScript += `|${flatString(b.text)}`\n    }\n  } else {\n    buttonScript += flatString(b.text)\n  }\n  return buttonScript\n}\n\nconst convoStepToLines = (step) => {\n  const lines = []\n  if (step.sender === 'me') {\n    step.forms && step.forms.filter(form => form.value).forEach((form) => {\n      lines.push(`FORM ${form.name}|${form.value}`)\n    })\n    if (step.buttons && step.buttons.length > 0) {\n      lines.push('BUTTON ' + _decompileButton(step.buttons[0]))\n    } else if (step.media && step.media.length > 0) {\n      lines.push('MEDIA ' + step.media[0].mediaUri)\n    } else if (step.messageText) {\n      lines.push(step.messageText)\n    }\n    step.userInputs && step.userInputs.forEach((userInput) => {\n      lines.push(userInput.name + (userInput.args ? ' ' + userInput.args.join('|') : ''))\n    })\n    step.logicHooks && step.logicHooks.forEach((logicHook) => {\n      lines.push(logicHook.name + (logicHook.args ? ' ' + logicHook.args.join('|') : ''))\n    })\n  } else {\n    if (step.messageText) {\n      lines.push((step.optional ? '?' : '') + (step.not ? '!' : '') + step.messageText)\n    }\n    if (step.buttons && step.buttons.length > 0) lines.push('BUTTONS ' + step.buttons.filter(b => b.text).map(b => flatString(b.text)).join('|'))\n    if (step.media && step.media.length > 0) lines.push('MEDIA ' + step.media.filter(m => !m.buffer && m.mediaUri).map(m => m.mediaUri).join('|'))\n    if (step.cards && step.cards.length > 0) {\n      step.cards.forEach(c => {\n        let cardTexts = []\n        if (c.text) cardTexts = cardTexts.concat(_.isArray(c.text) ? c.text : [c.text])\n        if (c.subtext) cardTexts = cardTexts.concat(_.isArray(c.subtext) ? c.subtext : [c.subtext])\n        if (c.content) cardTexts = cardTexts.concat(_.isArray(c.content) ? c.content : [c.content])\n        if (cardTexts.length > 0) lines.push('CARDS ' + cardTexts.map(c => flatString(c)).join('|'))\n\n        if (c.buttons && c.buttons.length > 0) lines.push('BUTTONS ' + c.buttons.filter(b => b.text).map(b => flatString(b.text)).join('|'))\n        if (c.image && !c.image.buffer && c.image.mediaUri) lines.push('MEDIA ' + c.image.mediaUri)\n      })\n    }\n    step.asserters && step.asserters.forEach((asserter) => {\n      lines.push((asserter.optional ? '?' : '') + (asserter.not ? '!' : '') + asserter.name + (asserter.args ? ' ' + asserter.args.join('|') : ''))\n    })\n    step.logicHooks && step.logicHooks.forEach((logicHook) => {\n      lines.push(logicHook.name + (logicHook.args ? ' ' + logicHook.args.join('|') : ''))\n    })\n  }\n  return lines.map(l => l.trim())\n}\n\nmodule.exports = {\n  normalizeText,\n  splitStringInNonEmptyLines,\n  quoteRegexpString,\n  toString,\n  flatString,\n  removeBuffers,\n  linesToConvoStep,\n  convoStepToLines,\n  convoStepToObject,\n  validSenders,\n  validateSender,\n  validateConvo\n}\n","const util = require('util')\nconst debug = require('debug')('botium-core-ScriptingMemory')\nconst randomize = require('randomatic')\nconst { v1: uuidv1 } = require('uuid')\nconst moment = require('moment')\nconst { NodeVM } = require('vm2')\nconst _ = require('lodash')\nconst path = require('path')\nconst jp = require('jsonpath')\n\nconst Capabilities = require('../Capabilities')\nconst { quoteRegexpString, toString } = require('./helper')\nconst { BotiumError } = require('./BotiumError')\n\n// If they got parameter, then it will be a string always.\n// the receiver can decide what to do with it,\n// convert to int,\n// split by ',' for multiple params,\n// or something else\nconst SCRIPTING_FUNCTIONS_RAW = {\n  $now: () => {\n    return new Date().toLocaleString()\n  },\n  $now_EN: () => {\n    return new Date().toLocaleString('en-EN')\n  },\n  $now_DE: () => {\n    return moment().format('DD.MM.YYYY, HH:mm:ss')\n  },\n  $now_ISO: () => {\n    return new Date().toISOString()\n  },\n\n  $date: (pattern) => {\n    if (pattern) {\n      return moment().format(pattern)\n    }\n    return new Date().toLocaleDateString()\n  },\n  $date_EN: () => {\n    return new Date().toLocaleDateString('en-EN')\n  },\n  $date_DE: () => {\n    return moment().format('YYYY.MM.DD')\n  },\n  $date_ISO: () => {\n    return moment().format('YYYY-MM-DD')\n  },\n\n  $time: () => {\n    return new Date().toLocaleTimeString()\n  },\n  $time_EN: () => {\n    return new Date().toLocaleTimeString('en-EN')\n  },\n  $time_DE: () => {\n    return moment().format('HH:mm:ss')\n  },\n  $time_ISO: () => {\n    return moment().format('HH:mm:ss')\n  },\n  $time_HH_MM: () => {\n    return moment().format('HH:mm')\n  },\n  $time_HH: () => {\n    return moment().format('HH')\n  },\n  $time_H_A: () => {\n    return moment().format('h A')\n  },\n\n  $timestamp: () => {\n    return Date.now()\n  },\n\n  $year: () => {\n    return new Date().getFullYear()\n  },\n  $month: () => {\n    return moment().format('MMMM')\n  },\n  $month_MM: () => {\n    return moment().format('MM')\n  },\n  $day_of_month: () => {\n    return new Date().getDate()\n  },\n  $day_of_week: () => {\n    return moment().format('dddd')\n  },\n\n  $random: (length) => {\n    if (length == null) {\n      throw Error('random function used without args!')\n    }\n    return randomize('0', length)\n  },\n  $random10: () => {\n    return randomize('0', 10)\n  },\n\n  $uniqid: () => {\n    return uuidv1()\n  },\n\n  $projectname: {\n    handler: (caps) => {\n      return caps[Capabilities.PROJECTNAME]\n    }\n  },\n\n  $testsessionname: {\n    handler: (caps) => {\n      return caps[Capabilities.TESTSESSIONNAME]\n    }\n  },\n\n  $testcasename: {\n    handler: (caps) => {\n      return caps[Capabilities.TESTCASENAME]\n    }\n  },\n\n  $env: {\n    handler: (caps, name) => {\n      if (!name) {\n        throw Error('env function used without args!')\n      }\n      return process.env[name]\n    },\n    numberOfArguments: 1,\n    unsafe: true\n  },\n\n  $cap: {\n    handler: (caps, name) => {\n      if (!name) {\n        throw Error('cap function used without args!')\n      }\n      return caps[name]\n    },\n    numberOfArguments: 1\n  },\n\n  $msg: {\n    handler: (caps, jsonPath, mockMsg) => {\n      if (!jsonPath) {\n        throw Error('msg function used without jsonpath!')\n      }\n      if (!mockMsg) {\n        throw Error('msg function used at invalid position!')\n      }\n      const root = jp.query(mockMsg, jsonPath)\n      if (root && root.length > 0) return root[0]\n      else return ''\n    },\n    numberOfArguments: 1\n  },\n\n  $func: {\n    handler: (caps, code) => {\n      if (code == null) {\n        throw Error('func function used without args!')\n      }\n      try {\n        const vm = new NodeVM({\n          eval: false,\n          require: false,\n          env: caps[Capabilities.SECURITY_ALLOW_UNSAFE] ? process.env : {},\n          sandbox: {\n            caps\n          }\n        })\n        return vm.run(`module.exports = (${code})`)\n      } catch (err) {\n        throw Error(`func function execution failed - ${err}`)\n      }\n    },\n    numberOfArguments: 1\n  }\n}\n\nconst SCRIPTING_FUNCTIONS = _.mapValues(SCRIPTING_FUNCTIONS_RAW, (funcOrStruct, name) => {\n  const func = funcOrStruct.handler || funcOrStruct\n  const numberOfArguments = funcOrStruct.handler ? funcOrStruct.numberOfArguments || 0 : funcOrStruct.length\n\n  return {\n    handler: (caps, ...rest) => {\n      if (!caps[Capabilities.SECURITY_ALLOW_UNSAFE] && funcOrStruct.unsafe) {\n        throw new BotiumError(\n          `Security Error. Using unsafe scripting memory function ${name} is not allowed`,\n          {\n            type: 'security',\n            subtype: 'allow unsafe',\n            source: path.basename(__filename),\n            cause: {\n              SECURITY_ALLOW_UNSAFE: caps[Capabilities.SECURITY_ALLOW_UNSAFE],\n              functionName: name\n            }\n          }\n        )\n      }\n      if (funcOrStruct.handler) {\n        return func(caps, ...rest)\n      } else {\n        return func(...rest)\n      }\n    },\n    numberOfArguments\n  }\n})\nconst RESERVED_WORDS = Object.keys(SCRIPTING_FUNCTIONS)\n\nconst apply = (container, scriptingMemory, str, mockMsg) => {\n  if (container.caps[Capabilities.SCRIPTING_ENABLE_MEMORY]) {\n    str = _apply(scriptingMemory, str, container.caps, mockMsg)\n  }\n  return str\n}\n\nconst applyToArgs = (args, scriptingMemory, caps, mockMsg) => {\n  return (args || []).map(arg => {\n    return _apply(scriptingMemory, arg, caps, mockMsg)\n  })\n}\n\n// we have two replace longer variable first. if there is $year, and $years, $years should not be found by $year\nconst _longestFirst = (a, b) => b.length - a.length\n\nconst _apply = (scriptingMemory, str, caps, mockMsg) => {\n  if (str) {\n    scriptingMemory = scriptingMemory || {}\n    str = toString(str)\n\n    // merge all keys: longer is stronger, type does not matter\n    // Not clean: what if a variable references other variable/function?\n    const allKeys = Object.keys(SCRIPTING_FUNCTIONS).concat(Object.keys(scriptingMemory)).sort(_longestFirst)\n    for (const key of allKeys) {\n      // scripting memory is stronger\n      if (_.has(scriptingMemory, key)) {\n        const keyRegexp = new RegExp(`\\\\${key}`, 'g')\n        str = str.replace(keyRegexp, scriptingMemory[key])\n      } else {\n        const regex = `\\\\${key}(\\\\(.+?(?<!\\\\\\\\)\\\\))?`\n        const matches = str.match(new RegExp(regex, 'g')) || []\n        for (const match of matches) {\n          if (match.indexOf('(') > 0) {\n            const arg = match.substring(match.indexOf('(') + 1, match.lastIndexOf(')')).replace(/\\\\\\)/g, ')')\n            str = str.replace(match, SCRIPTING_FUNCTIONS[key].handler(caps, arg, mockMsg))\n          } else {\n            str = str.replace(match, SCRIPTING_FUNCTIONS[key].handler(caps))\n          }\n        }\n      }\n    }\n  }\n  return str\n}\n\nconst extractVarNames = (text) => {\n  return ((_.isString(text) ? text.match(/\\$[A-Za-z]\\w+/g) : false) || [])\n}\n\nconst fill = (container, scriptingMemory, result, utterance, scriptingEvents) => {\n  debug(`fill start: ${util.inspect(scriptingMemory)}`)\n  let varRegex\n  switch (container.caps[Capabilities.SCRIPTING_MEMORY_MATCHING_MODE]) {\n    case 'word':\n      varRegex = '(\\\\w+)'\n      break\n    case 'joker':\n      varRegex = '([\\\\w\\\\W]+)'\n      break\n    default:\n      varRegex = '(\\\\S+)'\n      break\n  }\n\n  if (result && _.isString(result) && utterance && container.caps[Capabilities.SCRIPTING_ENABLE_MEMORY]) {\n    const utterances = scriptingEvents.resolveUtterance({ utterance })\n    utterances.forEach(expected => {\n      if (_.isUndefined(expected)) return\n      expected = toString(expected)\n\n      let reExpected = expected\n      if (container.caps[Capabilities.SCRIPTING_MATCHING_MODE] !== 'regexp' && container.caps[Capabilities.SCRIPTING_MATCHING_MODE] !== 'regexpIgnoreCase') {\n        reExpected = _.isString(expected) ? quoteRegexpString(expected).replace(/\\\\\\$/g, '$') : expected\n      }\n      const varMatches = extractVarNames(expected)\n      for (let i = 0; i < varMatches.length; i++) {\n        const varMatchesRegexp = new RegExp(`\\\\${varMatches[i]}`, 'g')\n        reExpected = reExpected.replace(varMatchesRegexp, varRegex)\n      }\n      const resultMatches = result.match(reExpected) || []\n      for (let i = 1; i < resultMatches.length; i++) {\n        if (i <= varMatches.length) {\n          const varName = varMatches[i - 1]\n          if (RESERVED_WORDS.indexOf(varName) >= 0) {\n            debug(`fill Variable \"${varName}\" is not overwritten, because it is reserved word. `)\n          } else {\n            scriptingMemory[varName] = resultMatches[i]\n          }\n        }\n      }\n    })\n    debug(`fill end: ${util.inspect(scriptingMemory)}`)\n  }\n}\n\nmodule.exports = {\n  apply,\n  applyToArgs,\n  fill,\n  extractVarNames,\n  RESERVED_WORDS,\n  SCRIPTING_FUNCTIONS\n}\n","const util = require('util')\nconst _ = require('lodash')\nconst debug = require('debug')('botium-core-Convo')\n\nconst BotiumMockMessage = require('../mocks/BotiumMockMessage')\nconst Capabilities = require('../Capabilities')\nconst Events = require('../Events')\nconst ScriptingMemory = require('./ScriptingMemory')\nconst { BotiumError, botiumErrorFromErr, botiumErrorFromList } = require('./BotiumError')\nconst { normalizeText, toString, removeBuffers, splitStringInNonEmptyLines } = require('./helper')\n\nconst { LOGIC_HOOK_INCLUDE } = require('./logichook/LogicHookConsts')\n\nclass ConvoHeader {\n  constructor (fromJson = {}) {\n    this.name = fromJson.name\n    this.projectname = fromJson.projectname\n    this.testsessionname = fromJson.testsessionname\n    this.sort = fromJson.sort\n    this.order = fromJson.order\n    this.description = fromJson.description\n    Object.assign(this, fromJson)\n  }\n\n  toString () {\n    return this.order + ' ' + this.name + (this.description ? ` (${this.description})` : '')\n  }\n}\n\nclass ConvoStepAssert {\n  constructor (fromJson = {}) {\n    this.name = fromJson.name\n    this.args = fromJson.args\n    this.not = fromJson.not\n    this.optional = fromJson.optional\n  }\n\n  toString () {\n    return (this.optional ? '?' : '') + (this.not ? '!' : '') + this.name + '(' + (this.args ? this.args.join(',') : 'no args') + ')'\n  }\n}\n\nclass ConvoStepLogicHook {\n  constructor (fromJson = {}) {\n    this.name = fromJson.name\n    this.args = fromJson.args\n  }\n\n  toString () {\n    return this.name + '(' + (this.args ? this.args.join(',') : 'no args') + ')'\n  }\n}\n\nclass ConvoStepUserInput {\n  constructor (fromJson = {}) {\n    this.name = fromJson.name\n    this.args = fromJson.args\n  }\n\n  toString () {\n    return this.name + '(' + (this.args ? this.args.join(',') : 'no args') + ')'\n  }\n}\n\nclass ConvoStep {\n  constructor (fromJson = {}) {\n    this.sender = fromJson.sender\n    this.channel = fromJson.channel\n    this.messageText = fromJson.messageText\n    this.sourceData = fromJson.sourceData\n    this.stepTag = fromJson.stepTag\n    this.not = fromJson.not\n    this.optional = fromJson.optional\n    this.asserters = _.map(fromJson.asserters, (asserter) => new ConvoStepAssert(asserter))\n    this.logicHooks = _.map(fromJson.logicHooks, (logicHook) => new ConvoStepLogicHook(logicHook))\n    this.userInputs = _.map(fromJson.userInputs, (userInput) => new ConvoStepUserInput(userInput))\n  }\n\n  hasInteraction () {\n    return (this.messageText && this.messageText.length > 0) ||\n     this.sourceData ||\n     (this.asserters && this.asserters.length > 0) ||\n     (this.logicHooks && this.logicHooks.findIndex(l => l.name !== LOGIC_HOOK_INCLUDE) >= 0) ||\n     (this.userInputs && this.userInputs.length > 0)\n  }\n\n  toString () {\n    return (this.stepTag ? this.stepTag + ': ' : '') +\n      '#' + this.sender +\n      ' - ' + (this.optional ? '?' : '') + (this.not ? '!' : '') +\n      (this.messageText || '') +\n      (this.asserters && this.asserters.length > 0 ? ' ' + this.asserters.map(a => a.toString()).join(' ASS: ') : '') +\n      (this.logicHooks && this.logicHooks.length > 0 ? ' ' + this.logicHooks.map(l => l.toString()).join(' LH: ') : '') +\n      (this.userInputs && this.userInputs.length > 0 ? ' ' + this.userInputs.map(u => u.toString()).join(' UI: ') : '')\n  }\n}\n\nclass Transcript {\n  constructor ({ steps, attachments, scriptingMemory, convoBegin, convoEnd, err }) {\n    this.steps = steps\n    this.attachments = attachments\n    this.scriptingMemory = scriptingMemory\n    this.convoBegin = convoBegin\n    this.convoEnd = convoEnd\n    this.err = err\n  }\n\n  prettifyActual () {\n    const prettifiedSteps = this.steps.map(step => {\n      if (step.actual && step.actual.prettify) {\n        return step.actual.prettify()\n      } else {\n        return '<empty conversation step>'\n      }\n    })\n    return prettifiedSteps.join('\\n')\n  }\n}\n\nclass TranscriptAttachment { // eslint-disable-line no-unused-vars\n  constructor (fromJson = {}) {\n    this.name = fromJson.name\n    this.mimeType = fromJson.mimeType\n    this.base64 = fromJson.base64\n    this.href = fromJson.href\n  }\n}\n\nclass TranscriptStep {\n  constructor ({ expected, not, optional, actual, stepBegin, stepEnd, botBegin, botEnd, err }) {\n    this.expected = expected\n    this.not = not\n    this.optional = optional\n    this.actual = actual\n    this.stepBegin = stepBegin\n    this.stepEnd = stepEnd\n    this.botBegin = botBegin\n    this.botEnd = botEnd\n    this.err = err\n  }\n}\n\nclass TranscriptError extends Error {\n  constructor (err, transcript) {\n    super(err.message)\n    this.name = this.constructor.name\n    this.transcript = transcript\n    this.cause = err\n    Error.captureStackTrace(this, this.constructor)\n  }\n}\n\nclass Convo {\n  constructor (context, fromJson = {}) {\n    if (fromJson instanceof Convo) {\n      debug('Illegal state!!! Parameter should be a JSON, but it is a Convo')\n    } else if (fromJson.beginAsserter) {\n      // beginAsserter is one of the fields which are lost\n      debug('Illegal state!!! Parameter should be a native JSON, but looks as a Convo converted to JSON')\n    }\n\n    this.scriptingEvents = context.scriptingEvents\n    this.context = context\n    this.header = new ConvoHeader(fromJson.header)\n    if (fromJson.conversation && _.isArray(fromJson.conversation)) {\n      this.conversation = _.map(fromJson.conversation, (step) => new ConvoStep(step))\n    } else {\n      this.conversation = []\n    }\n    this.sourceTag = fromJson.sourceTag\n    const { beginAsserter, endAsserter } = this.setConvoBeginAndEndAsserter(fromJson)\n    this.beginAsserter = beginAsserter\n    this.endAsserter = endAsserter\n    const { beginLogicHook, endLogicHook } = this.setConvoBeginAndEndLogicHook(fromJson)\n    this.beginLogicHook = beginLogicHook\n    this.endLogicHook = endLogicHook\n    this.effectiveConversation = null\n  }\n\n  setConvoBeginAndEndAsserter (fromJson) {\n    const beginAsserter = fromJson.conversation\n      .filter(s => s.sender === 'begin' && s.asserters && s.asserters.length > 0)\n      .map(s => s.asserters)\n      .reduce((acc, val) => acc.concat(val), [])\n\n    const endAsserter = fromJson.conversation\n      .filter(s => s.sender === 'end' && s.asserters && s.asserters.length > 0)\n      .map(s => s.asserters)\n      .reduce((acc, val) => acc.concat(val), [])\n\n    return { beginAsserter, endAsserter }\n  }\n\n  setConvoBeginAndEndLogicHook (fromJson) {\n    const beginLogicHook = fromJson.conversation\n      .filter(s => s.sender === 'begin' && s.logicHooks && s.logicHooks.length > 0)\n      .map(s => s.logicHooks)\n      .reduce((acc, val) => acc.concat(val), [])\n\n    const endLogicHook = fromJson.conversation\n      .filter(s => s.sender === 'end' && s.logicHooks && s.logicHooks.length > 0)\n      .map(s => s.logicHooks)\n      .reduce((acc, val) => acc.concat(val), [])\n\n    return { beginLogicHook, endLogicHook }\n  }\n\n  toString () {\n    return this.header.toString() + (this.sourceTag ? ` (${util.inspect(this.sourceTag)})` : '') + ': ' + this.conversation.map((c) => c.toString()).join(' | ')\n  }\n\n  async Run (container) {\n    const transcript = new Transcript({\n      steps: [],\n      attachments: [],\n      convoBegin: new Date(),\n      convoEnd: null,\n      err: null\n    })\n    const scriptingMemory = {\n    }\n    container.caps[Capabilities.TESTCASENAME] = this.header.name\n    try {\n      try {\n        // onConvoBegin first or assertConvoBegin? If onConvoBegin, then it is possible to assert it too\n        await this.scriptingEvents.onConvoBegin({ convo: this, convoStep: { stepTag: '#begin' }, container, transcript, scriptingMemory })\n      } catch (err) {\n        throw new TranscriptError(botiumErrorFromErr(`${this.header.name}: ${err.message}`, err), transcript)\n      }\n      try {\n        await this.scriptingEvents.assertConvoBegin({ convo: this, convoStep: { stepTag: '#begin' }, container, scriptingMemory })\n      } catch (err) {\n        throw new TranscriptError(botiumErrorFromErr(`${this.header.name}: ${err.message}`, err), transcript)\n      }\n      await this.runConversation(container, scriptingMemory, transcript)\n      await this._checkBotRepliesConsumed(container)\n      try {\n        await this.scriptingEvents.onConvoEnd({ convo: this, convoStep: { stepTag: '#end' }, container, transcript, scriptingMemory: scriptingMemory })\n      } catch (err) {\n        throw new TranscriptError(botiumErrorFromErr(`${this.header.name}: ${err.message}`, err), transcript)\n      }\n      if (transcript.err && container.caps[Capabilities.SCRIPTING_ENABLE_MULTIPLE_ASSERT_ERRORS]) {\n        let assertConvoEndErr = null\n        try {\n          await this.scriptingEvents.assertConvoEnd({ convo: this, convoStep: { stepTag: '#end' }, container, transcript, scriptingMemory: scriptingMemory })\n        } catch (err) {\n          assertConvoEndErr = botiumErrorFromErr(`${this.header.name}: ${err.message}`, err)\n        }\n        if (assertConvoEndErr) {\n          const err = transcript.err\n          transcript.err = botiumErrorFromList([transcript.err, assertConvoEndErr], {})\n          transcript.err.context.input = err.context.input\n          transcript.err.context.transcript = err.context.transcript\n        }\n        throw new TranscriptError(transcript.err, transcript)\n      } else if (transcript.err) {\n        throw new TranscriptError(transcript.err, transcript)\n      }\n      try {\n        await this.scriptingEvents.assertConvoEnd({ convo: this, convoStep: { stepTag: '#end' }, container, transcript, scriptingMemory: scriptingMemory })\n      } catch (err) {\n        transcript.err = botiumErrorFromErr(`${this.header.name}: ${err.message}`, err)\n        throw new TranscriptError(transcript.err, transcript)\n      }\n      return transcript\n    } finally {\n      container.eventEmitter.emit(Events.MESSAGE_TRANSCRIPT, container, transcript)\n    }\n  }\n\n  async runConversation (container, scriptingMemory, transcript) {\n    const transcriptSteps = []\n    try {\n      let lastMeConvoStep = null\n      let botMsg = null\n      let waitForBotSays = true\n      let skipTranscriptStep = false\n      for (let i = 0; i < this.conversation.length; i++) {\n        const convoStep = this.conversation[i]\n        const currentStepIndex = i\n        skipTranscriptStep = false\n        const transcriptStep = new TranscriptStep({\n          expected: new BotiumMockMessage(convoStep),\n          not: convoStep.not,\n          optional: convoStep.optional,\n          actual: null,\n          stepBegin: new Date(),\n          stepEnd: null,\n          botBegin: null,\n          botEnd: null,\n          err: null\n        })\n\n        try {\n          if (convoStep.sender === 'begin' || convoStep.sender === 'end') {\n            continue\n          } else if (convoStep.sender === 'me') {\n            const meMsg = new BotiumMockMessage(convoStep)\n            meMsg.messageText = ScriptingMemory.apply(container, scriptingMemory, meMsg.messageText, meMsg)\n            // buggy command is removed, but because sideeffects are possible, it can be reactivated.\n            // If there are no sideeffects coming up, then row can be deleted permanently.\n            if (process.env.WORKAROUND_OVERWRITE_JSON_MESSAGE_TEXT) {\n              // if this line is active, then Random() in me section does not work in performance test\n              // (first run overwrites the function with the value, and the next run has the value, not the function)\n              convoStep.messageText = meMsg.messageText\n            }\n            transcriptStep.actual = meMsg\n\n            try {\n              await this.scriptingEvents.setUserInput({ convo: this, convoStep, container, scriptingMemory, meMsg, transcript, transcriptStep })\n              await this.scriptingEvents.onMeStart({ convo: this, convoStep, container, scriptingMemory, meMsg, transcript, transcriptStep })\n              await this.scriptingEvents.onMePrepare({ convo: this, convoStep, container, scriptingMemory, meMsg, transcript, transcriptStep })\n\n              await this._checkBotRepliesConsumed(container)\n\n              const coreMsg = _.omit(removeBuffers(meMsg), ['sourceData'])\n              debug(`${this.header.name}/${convoStep.stepTag}: user says (cleaned by binary and base64 data and sourceData) ${JSON.stringify(coreMsg, null, 2)}`)\n              await new Promise(resolve => {\n                if (container.caps.SIMULATE_WRITING_SPEED && meMsg.messageText && meMsg.messageText.length) {\n                  setTimeout(() => resolve(), container.caps.SIMULATE_WRITING_SPEED * meMsg.messageText.length)\n                } else {\n                  resolve()\n                }\n              })\n              lastMeConvoStep = convoStep\n              transcriptStep.botBegin = new Date()\n              if (!_.isNull(meMsg.messageText) || meMsg.sourceData || (meMsg.userInputs && meMsg.userInputs.length) || (meMsg.logicHooks && meMsg.logicHooks.length)) {\n                try {\n                  Object.assign(meMsg, { header: this.header, conversation: this.conversation, currentStepIndex, scriptingMemory })\n                  await container.UserSays(meMsg)\n                } finally {\n                  delete meMsg.header\n                  delete meMsg.conversation\n                  delete meMsg.scriptingMemory\n                }\n\n                transcriptStep.botEnd = new Date()\n                await this.scriptingEvents.onMeEnd({ convo: this, convoStep, container, scriptingMemory, meMsg, transcript, transcriptStep })\n                continue\n              } else {\n                debug(`${this.header.name}/${convoStep.stepTag}: message not found in #me section, message not sent to container ${util.inspect(convoStep)}`)\n                transcriptStep.botEnd = new Date()\n                await this.scriptingEvents.onMeEnd({ convo: this, convoStep, container, scriptingMemory, meMsg, transcript, transcriptStep })\n                continue\n              }\n            } catch (err) {\n              transcriptStep.botEnd = new Date()\n\n              const failErr = botiumErrorFromErr(`${this.header.name}/${convoStep.stepTag}: error sending to bot - ${err.message || err}`, err)\n              debug(failErr)\n              try {\n                this.scriptingEvents.fail && this.scriptingEvents.fail(failErr)\n              } catch (failErr) {\n              }\n              throw failErr\n            }\n          } else if (convoStep.sender === 'bot') {\n            if (waitForBotSays) {\n              botMsg = null\n            } else {\n              waitForBotSays = true\n            }\n\n            try {\n              debug(`${this.header.name} wait for bot ${convoStep.channel || ''}`)\n              await this.scriptingEvents.onBotStart({ convo: this, convoStep, container, scriptingMemory, transcript, transcriptStep })\n              transcriptStep.botBegin = new Date()\n              if (!botMsg) {\n                botMsg = await container.WaitBotSays(convoStep.channel)\n              }\n              transcriptStep.botEnd = new Date()\n              transcriptStep.actual = new BotiumMockMessage(botMsg)\n\n              const coreMsg = _.omit(removeBuffers(botMsg), ['sourceData'])\n              debug(`${this.header.name}: bot says (cleaned by binary and base64 data and sourceData) ${JSON.stringify(coreMsg, null, 2)}`)\n            } catch (err) {\n              transcriptStep.botEnd = new Date()\n\n              const failErr = botiumErrorFromErr(`${this.header.name}/${convoStep.stepTag}: error waiting for bot - ${err.message}`, err)\n              debug(failErr)\n              try {\n                this.scriptingEvents.fail && this.scriptingEvents.fail(failErr, lastMeConvoStep)\n              } catch (failErr) {\n              }\n              throw failErr\n            }\n\n            try {\n              const prepared = await this.scriptingEvents.onBotPrepare({ convo: this, convoStep, container, scriptingMemory, botMsg, transcript, transcriptStep })\n              if (prepared) {\n                transcriptStep.actual = new BotiumMockMessage(botMsg)\n\n                const coreMsg = _.omit(removeBuffers(botMsg), ['sourceData'])\n                debug(`${this.header.name}: onBotPrepare (cleaned by binary and base64 data and sourceData) ${JSON.stringify(coreMsg, null, 2)}`)\n              }\n            } catch (err) {\n              const failErr = botiumErrorFromErr(`${this.header.name}/${convoStep.stepTag}: onBotPrepare error - ${err.message || err}`, err)\n              debug(failErr)\n              try {\n                this.scriptingEvents.fail && this.scriptingEvents.fail(failErr, lastMeConvoStep)\n              } catch (failErr) {\n              }\n              throw failErr\n            }\n\n            if (!botMsg || (!botMsg.messageText && !botMsg.media && !botMsg.buttons && !botMsg.cards && !botMsg.sourceData && !botMsg.nlp)) {\n              const failErr = new BotiumError(`${this.header.name}/${convoStep.stepTag}: bot says nothing`)\n              debug(failErr)\n              try {\n                this.scriptingEvents.fail && this.scriptingEvents.fail(failErr, lastMeConvoStep)\n              } catch (failErr) {\n              }\n              throw failErr\n            }\n            const isErrorHandledWithOptionConvoStep = (err) => {\n              const nextConvoStep = this.conversation[i + 1]\n              if (convoStep.optional && nextConvoStep && nextConvoStep.sender === 'bot') {\n                waitForBotSays = false\n                skipTranscriptStep = true\n                return true\n              }\n              if (container.caps[Capabilities.SCRIPTING_ENABLE_MULTIPLE_ASSERT_ERRORS]) {\n                assertErrors.push(err)\n                return false\n              } else {\n                throw err\n              }\n            }\n            const assertErrors = []\n            const scriptingMemoryUpdate = {}\n            if (convoStep.messageText) {\n              const response = this._checkNormalizeText(container, botMsg.messageText)\n              const messageText = this._checkNormalizeText(container, convoStep.messageText)\n              ScriptingMemory.fill(container, scriptingMemoryUpdate, response, messageText, this.scriptingEvents)\n              const tomatch = this._resolveUtterancesToMatch(container, Object.assign({}, scriptingMemoryUpdate, scriptingMemory), messageText, botMsg)\n              if (convoStep.not) {\n                try {\n                  this.scriptingEvents.assertBotNotResponse(response, tomatch, `${this.header.name}/${convoStep.stepTag}`, lastMeConvoStep)\n                } catch (err) {\n                  if (isErrorHandledWithOptionConvoStep(err)) {\n                    continue\n                  }\n                }\n              } else {\n                try {\n                  this.scriptingEvents.assertBotResponse(response, tomatch, `${this.header.name}/${convoStep.stepTag}`, lastMeConvoStep)\n                } catch (err) {\n                  if (isErrorHandledWithOptionConvoStep(err)) {\n                    continue\n                  }\n                }\n              }\n            } else if (convoStep.sourceData) {\n              try {\n                this._compareObject(container, scriptingMemory, convoStep, botMsg.sourceData, convoStep.sourceData, botMsg)\n              } catch (err) {\n                if (isErrorHandledWithOptionConvoStep(err)) {\n                  continue\n                }\n              }\n            }\n            Object.assign(scriptingMemory, scriptingMemoryUpdate)\n            try {\n              await this.scriptingEvents.assertConvoStep({ convo: this, convoStep, container, scriptingMemory, botMsg, transcript, transcriptStep })\n              await this.scriptingEvents.onBotEnd({ convo: this, convoStep, container, scriptingMemory, botMsg, transcript, transcriptStep })\n            } catch (err) {\n              const nextConvoStep = this.conversation[i + 1]\n              if (convoStep.optional && nextConvoStep && nextConvoStep.sender === 'bot') {\n                waitForBotSays = false\n                skipTranscriptStep = true\n                continue\n              }\n              const failErr = botiumErrorFromErr(`${this.header.name}/${convoStep.stepTag}: assertion error - ${err.message || err}`, err)\n              debug(failErr)\n              try {\n                this.scriptingEvents.fail && this.scriptingEvents.fail(failErr, lastMeConvoStep)\n              } catch (failErr) {\n              }\n              if (container.caps[Capabilities.SCRIPTING_ENABLE_MULTIPLE_ASSERT_ERRORS] && err instanceof BotiumError) {\n                assertErrors.push(err)\n              } else {\n                throw failErr\n              }\n            }\n            if (container.caps[Capabilities.SCRIPTING_ENABLE_MULTIPLE_ASSERT_ERRORS]) {\n              if (assertErrors.length > 0) {\n                throw botiumErrorFromList(assertErrors, {})\n              }\n            } else {\n              if (!transcriptStep.stepEnd) {\n                continue\n              }\n            }\n          } else {\n            const failErr = new BotiumError(`${this.header.name}/${convoStep.stepTag}: invalid sender - ${util.inspect(convoStep.sender)}`)\n            debug(failErr)\n            try {\n              this.scriptingEvents.fail && this.scriptingEvents.fail(failErr)\n            } catch (failErr) {\n            }\n            throw failErr\n          }\n        } catch (err) {\n          if (lastMeConvoStep) {\n            if (err instanceof BotiumError && err.context) {\n              err.context.input = new ConvoStep(lastMeConvoStep)\n              err.context.transcript = [...transcriptSteps, { ...transcriptStep }]\n            } else {\n              err.input = new ConvoStep(lastMeConvoStep)\n              err.transcript = [...transcriptSteps, { ...transcriptStep }]\n            }\n          }\n          transcriptStep.err = err\n          throw err\n        } finally {\n          if (convoStep.sender !== 'begin' && convoStep.sender !== 'end' && !skipTranscriptStep) {\n            transcriptStep.scriptingMemory = Object.assign({}, scriptingMemory)\n            transcriptStep.stepEnd = new Date()\n            transcriptSteps.push(transcriptStep)\n          }\n        }\n      }\n    } catch (err) {\n      transcript.err = err\n    } finally {\n      transcript.steps = transcriptSteps.filter(s => s)\n      transcript.scriptingMemory = scriptingMemory\n      transcript.convoEnd = new Date()\n    }\n  }\n\n  _compareObject (container, scriptingMemory, convoStep, result, expected, botMsg) {\n    if (expected === null || expected === undefined) return\n\n    if (_.isArray(expected)) {\n      if (!_.isArray(result)) {\n        throw new BotiumError(`${this.header.name}/${convoStep.stepTag}: bot response expected array, got \"${result}\"`)\n      }\n      if (expected.length !== result.length) {\n        throw new BotiumError(`${this.header.name}/${convoStep.stepTag}: bot response expected array length ${expected.length}, got ${result.length}`)\n      }\n      for (let i = 0; i < expected.length; i++) {\n        this._compareObject(container, scriptingMemory, convoStep, result[i], expected[i])\n      }\n    } else if (_.isObject(expected)) {\n      _.forOwn(expected, (value, key) => {\n        if (Object.prototype.hasOwnProperty.call(result, key)) {\n          this._compareObject(container, scriptingMemory, convoStep, result[key], expected[key])\n        } else {\n          throw new BotiumError(`${this.header.name}/${convoStep.stepTag}: bot response \"${result}\" missing expected property: ${key}`)\n        }\n      })\n    } else {\n      ScriptingMemory.fill(container, scriptingMemory, result, expected, this.scriptingEvents)\n      const response = this._checkNormalizeText(container, result)\n      const tomatch = this._resolveUtterancesToMatch(container, scriptingMemory, expected, botMsg)\n      this.scriptingEvents.assertBotResponse(response, tomatch, `${this.header.name}/${convoStep.stepTag}`)\n    }\n  }\n\n  GetScriptingMemoryAllVariables (container) {\n    const resultOuter = this.conversation.reduce((acc, convoStep) => {\n      let result = acc\n      result = result.concat(this.GetScriptingMemoryVariables(container, convoStep.messageText))\n      const extractFromArgs = (convoStepItems) => {\n        let resultInner = []\n        for (const item of (convoStepItems || [])) {\n          for (const arg of (item.args || [])) {\n            resultInner = resultInner.concat(this.GetScriptingMemoryVariables(container, arg))\n          }\n        }\n        return resultInner\n      }\n      result = result.concat(extractFromArgs(convoStep.asserters))\n      result = result.concat(extractFromArgs(convoStep.logicHooks))\n      result = result.concat(extractFromArgs(convoStep.userInputs))\n\n      return result\n    }, [])\n\n    return [...new Set(resultOuter)]\n  }\n\n  GetScriptingMemoryVariables (container, utterance) {\n    if (!utterance || !container.caps[Capabilities.SCRIPTING_ENABLE_MEMORY]) {\n      return []\n    }\n\n    const utterances = this.scriptingEvents.resolveUtterance({ utterance })\n\n    return utterances.reduce((acc, expected) => {\n      if (_.isUndefined(expected)) return acc\n      else return acc.concat(ScriptingMemory.extractVarNames(toString(expected)) || [])\n    }, [])\n  }\n\n  _checkBotRepliesConsumed (container) {\n    if (container.caps.SCRIPTING_FORCE_BOT_CONSUMED) {\n      const queueLength = container._QueueLength()\n      if (queueLength === 1) {\n        throw new Error('There is an unread bot reply in queue')\n      } else if (queueLength > 1) {\n        throw new Error(`There are still ${queueLength} unread bot replies in queue`)\n      }\n    }\n  }\n\n  _resolveUtterancesToMatch (container, scriptingMemory, utterance, botMsg) {\n    const utterances = this.scriptingEvents.resolveUtterance({ utterance })\n    const normalizedUtterances = utterances.map(str => this._checkNormalizeText(container, str))\n    const tomatch = normalizedUtterances.map(str => ScriptingMemory.apply(container, scriptingMemory, str, botMsg))\n    return tomatch\n  }\n\n  _checkNormalizeText (container, str) {\n    return normalizeText(str, !!container.caps[Capabilities.SCRIPTING_NORMALIZE_TEXT])\n  }\n\n  expandPartialConvos () {\n    const _getIncludeLogicHookNames = (convoStep) => {\n      if (!convoStep.logicHooks) {\n        return []\n      }\n\n      const result = []\n      convoStep.logicHooks.forEach((logicHook) => {\n        if (logicHook.name === LOGIC_HOOK_INCLUDE) {\n          if (logicHook.args.length !== 1) {\n            throw Error('Wrong argument for include logic hook!')\n          }\n          result.push(logicHook)\n        }\n      })\n\n      return result.map((hook) => hook.args[0])\n    }\n\n    const partialConvos = this.context.GetPartialConvos()\n\n    const _getEffectiveConversationRecursive = (conversation, parentPConvos = [], result = [], ignoreBeginEnd = true) => {\n      conversation.forEach((convoStep) => {\n        let includeLogicHooks = []\n        if (convoStep.sender === 'include') {\n          if (convoStep.channel) {\n            includeLogicHooks.push(convoStep.channel)\n          }\n          if (convoStep.messageText) {\n            includeLogicHooks = includeLogicHooks.concat(splitStringInNonEmptyLines(convoStep.messageText))\n          }\n        } else {\n          includeLogicHooks = _getIncludeLogicHookNames(convoStep)\n          if (includeLogicHooks.length === 0 || convoStep.hasInteraction()) {\n            if (!ignoreBeginEnd || (convoStep.sender !== 'begin' && convoStep.sender !== 'end')) {\n              // dont put convo name for ConvoSteps on the root.\n              const steptagPath = parentPConvos.length === 0 ? '' : parentPConvos.join('/') + '/'\n              result.push(Object.assign(new ConvoStep(), convoStep, { stepTag: `${steptagPath}${convoStep.stepTag}` }))\n            }\n          }\n        }\n\n        includeLogicHooks.forEach((includeLogicHook) => {\n          const alreadyThereAt = parentPConvos.indexOf(includeLogicHook)\n          if (alreadyThereAt >= 0) {\n            throw new BotiumError(`Partial convos are included circular. \"${includeLogicHook}\" is referenced by \"/${parentPConvos.slice(0, alreadyThereAt).join('/')}\" and by \"/${parentPConvos.join('/')}\" `)\n          }\n          if (!partialConvos || Object.keys(partialConvos).length === 0) {\n            throw new BotiumError(`Cant find partial convo with name ${includeLogicHook} (There are no partial convos)`)\n          }\n          const partialConvo = partialConvos[includeLogicHook]\n          if (!partialConvo) {\n            throw new BotiumError(`Cant find partial convo with name ${includeLogicHook} (available partial convos: ${Object.keys(partialConvos).join(',')})`)\n          }\n          _getEffectiveConversationRecursive(partialConvo.conversation, [...parentPConvos, includeLogicHook], result, true)\n          debug(`Partial convo ${includeLogicHook} included`)\n        })\n      })\n\n      return result\n    }\n\n    this.conversation = _getEffectiveConversationRecursive(this.conversation, [], [], false)\n  }\n}\n\nmodule\n  .exports = {\n    ConvoHeader,\n    Convo,\n    ConvoStep\n  }\n","const util = require('util')\nconst _ = require('lodash')\n\nmodule.exports = class RetryHelper {\n  constructor (caps, section) {\n    this.retrySettings = {\n      retries: caps[`RETRY_${section.toUpperCase()}_NUMRETRIES`] || 1,\n      factor: caps[`RETRY_${section.toUpperCase()}_FACTOR`] || 1,\n      minTimeout: caps[`RETRY_${section.toUpperCase()}_MINTIMEOUT`] || 1000\n    }\n    this.retryErrorPatterns = []\n    const onErrorRegexp = caps[`RETRY_${section.toUpperCase()}_ONERROR_REGEXP`] || []\n    if (onErrorRegexp) {\n      if (_.isArray(onErrorRegexp)) {\n        onErrorRegexp.forEach(r => {\n          if (_.isString(r)) this.retryErrorPatterns.push(new RegExp(r, 'i'))\n          else this.retryErrorPatterns.push(r)\n        })\n      } else if (_.isString(onErrorRegexp)) {\n        this.retryErrorPatterns.push(new RegExp(onErrorRegexp, 'i'))\n      } else {\n        this.retryErrorPatterns.push(onErrorRegexp)\n      }\n    }\n  }\n\n  shouldRetry (err) {\n    if (!err || this.retryErrorPatterns.length === 0) return false\n    const errString = util.inspect(err)\n    for (const re of this.retryErrorPatterns) {\n      if (errString.match(re)) return true\n    }\n    return false\n  }\n}\n","const _ = require('lodash')\n\nconst { toString, quoteRegexpString } = require('./helper')\n\nconst _normalize = (botresponse) => {\n  if (_.isUndefined(botresponse)) return ''\n  if (_.isObject(botresponse) && _.has(botresponse, 'messageText')) {\n    return toString(botresponse.messageText) || ''\n  }\n  return toString(botresponse)\n}\n\nconst regexp = (ignoreCase) => (botresponse, utterance) => {\n  if (_.isUndefined(botresponse)) return false\n  utterance = toString(utterance)\n  botresponse = _normalize(botresponse)\n\n  const regexp = ignoreCase ? (new RegExp(utterance, 'i')) : (new RegExp(utterance, ''))\n  return regexp.test(botresponse)\n}\n\nconst wildcard = (ignoreCase) => (botresponse, utterance) => {\n  if (_.isUndefined(botresponse)) {\n    if (utterance.trim() === '*') return true\n    else return false\n  }\n  utterance = toString(utterance)\n  botresponse = _normalize(botresponse)\n\n  const numWildcards = utterance.split('*').length - 1\n  if (numWildcards > 10) {\n    throw new Error('Maximum number of 10 wildcards supported.')\n  }\n  const utteranceRe = quoteRegexpString(utterance).replace(/\\\\\\*/g, '(.*)')\n\n  const regexp = ignoreCase ? (new RegExp(utteranceRe, 'i')) : (new RegExp(utteranceRe, ''))\n  return regexp.test(botresponse)\n}\n\nconst wildcardExact = (ignoreCase) => (botresponse, utterance) => {\n  if (_.isUndefined(botresponse)) {\n    if (utterance.trim() === '*') return true\n    else return false\n  }\n  utterance = toString(utterance)\n  botresponse = _normalize(botresponse)\n\n  const numWildcards = utterance.split('*').length - 1\n  if (numWildcards > 10) {\n    throw new Error('Maximum number of 10 wildcards supported.')\n  }\n  const utteranceRe = '^' + quoteRegexpString(utterance).replace(/\\\\\\*/g, '(.*)') + '$'\n\n  const regexp = ignoreCase ? (new RegExp(utteranceRe, 'i')) : (new RegExp(utteranceRe, ''))\n  return regexp.test(botresponse)\n}\n\nconst include = (ignoreCase) => (botresponse, utterance) => {\n  if (_.isUndefined(botresponse)) return false\n  utterance = toString(utterance)\n  botresponse = _normalize(botresponse)\n\n  if (ignoreCase) {\n    utterance = utterance.toLowerCase()\n    botresponse = botresponse.toLowerCase()\n  }\n  return botresponse.indexOf(utterance) >= 0\n}\n\nconst equals = (ignoreCase) => (botresponse, utterance) => {\n  if (_.isUndefined(botresponse)) return false\n  utterance = toString(utterance)\n  botresponse = _normalize(botresponse)\n\n  if (ignoreCase) {\n    utterance = utterance.toLowerCase()\n    botresponse = botresponse.toLowerCase()\n  }\n  return botresponse === utterance\n}\n\nconst getMatchFunction = (matchingMode) => {\n  if (matchingMode === 'regexp' || matchingMode === 'regexpIgnoreCase') {\n    return regexp(matchingMode === 'regexpIgnoreCase')\n  } else if (matchingMode === 'wildcard' || matchingMode === 'wildcardIgnoreCase' || matchingMode === 'wildcardLowerCase') {\n    return wildcard(matchingMode === 'wildcardIgnoreCase' || matchingMode === 'wildcardLowerCase')\n  } else if (matchingMode === 'wildcardExact' || matchingMode === 'wildcardExactIgnoreCase') {\n    return wildcardExact(matchingMode === 'wildcardExactIgnoreCase')\n  } else if (matchingMode === 'include' || matchingMode === 'includeIgnoreCase' || matchingMode === 'includeLowerCase') {\n    return include(matchingMode === 'includeIgnoreCase' || matchingMode === 'includeLowerCase')\n  } else if (matchingMode === 'equals' || matchingMode === 'equalsIgnoreCase') {\n    return equals(matchingMode === 'equalsIgnoreCase')\n  } else {\n    return equals(false)\n  }\n}\n\nmodule.exports = {\n  regexp,\n  wildcard,\n  wildcardExact,\n  include,\n  equals,\n  getMatchFunction\n}\n","const _ = require('lodash')\n\nconst isStringJson = (string) => {\n  try {\n    JSON.parse(string)\n  } catch (e) {\n    return false\n  }\n  return true\n}\n/**\n *\n * @param json\n * @param stringIsJson It is possible to stringify a string, so we can say its a json object,\n * but usually thats not what we expect. Default is true because backward compatibility\n * @returns {boolean}\n */\nconst isJsonObject = (json, stringIsJson = true) => {\n  if (!stringIsJson && _.isString(json)) {\n    return false\n  }\n  try {\n    JSON.stringify(json)\n  } catch (e) {\n    return false\n  }\n  return true\n}\n\nconst isJson = (json) => {\n  if (isStringJson(json)) {\n    return json\n  } else if (isJsonObject(json)) {\n    return JSON.stringify(json)\n  }\n  return null\n}\n\nconst toJsonWeak = (stringOrNot) => {\n  try {\n    return JSON.parse(stringOrNot)\n  } catch (e) {\n    return stringOrNot\n  }\n}\n\nconst optionalJson = (json) => {\n  const body = isJson(json)\n  return body ? { 'content-type': 'application/json', body: body } : { 'content-type': 'text/plain', body: json }\n}\n\nconst shortenJsonString = (obj) => {\n  let str = _.isString(obj) ? obj : JSON.stringify(obj, null, 2)\n  const length = str.length\n  if (length > 1000) {\n    str = `${str.substr(0, 1000)} ... (${length - 1000} chars more)`\n  }\n  return str\n}\n\nconst escapeJSONString = (string) => {\n  if (string) {\n    return ('' + string).replace(/[\"\\\\\\n\\r\\u2028\\u2029]/g, function (character) {\n      // Escape all characters not included in SingleStringCharacters and\n      // DoubleStringCharacters on\n      // http://www.ecma-international.org/ecma-262/5.1/#sec-7.8.4\n      switch (character) {\n        case '\"':\n        case '\\\\':\n          return '\\\\' + character\n        // Four possible LineTerminator characters need to be escaped:\n        case '\\n':\n          return '\\\\n'\n        case '\\r':\n          return '\\\\r'\n        case '\\u2028':\n          return '\\\\u2028'\n        case '\\u2029':\n          return '\\\\u2029'\n      }\n    })\n  }\n}\n\nconst formatTimeout = (ms) => {\n  if (ms >= 1000) {\n    if (ms % 1000 !== 0) {\n      return `${Math.floor(ms / 1000)}s ${ms % 1000}ms`\n    } else {\n      return `${Math.floor(ms / 1000)}s`\n    }\n  } else {\n    return `${ms}ms`\n  }\n}\n\nmodule.exports = { optionalJson, isJson, isJsonObject, isStringJson, shortenJsonString, escapeJSONString, toJsonWeak, formatTimeout }\n","const _ = require('lodash')\nconst jp = require('jsonpath')\n\nconst _ensureList = (queryResult) => {\n  if (_.isArray(queryResult)) {\n    return queryResult\n  }\n  return [queryResult]\n}\n\nmodule.exports.precompile = (caps, scriptBuffer, options, filename) => {\n  if (!filename.endsWith('.json')) {\n    return\n  }\n\n  const checkerJsonpath = options.CHECKER_JSONPATH\n  const rootJsonpath = options.ROOT_JSONPATH\n  const utteranceRefsJsonpath = options.UTTERANCE_REF_JSONPATH\n  const utterancesJsonpath = options.UTTERANCES_JSONPATH\n  let scriptData = scriptBuffer\n  if (_.isString(scriptData)) {\n    try {\n      scriptData = JSON.parse(scriptData)\n    } catch (err) {\n      throw new Error(`Cant convert to JSON ${filename}`)\n    }\n  }\n  if (checkerJsonpath) {\n    const scouldExist = jp.query(scriptData, checkerJsonpath)\n    if (!scouldExist || scouldExist.length === 0) {\n      return\n    }\n  }\n\n  if (!rootJsonpath) {\n    scriptData = [scriptData]\n  } else {\n    let rootObjects\n    try {\n      rootObjects = _ensureList(jp.query(scriptData, rootJsonpath))\n    } catch (err) {\n      throw new Error(`Root jsonpath ${rootJsonpath} invalid: ${err.message}`)\n    }\n\n    scriptData = rootObjects\n  }\n\n  const result = {}\n  for (const json of scriptData) {\n    let intent\n    try {\n      intent = _ensureList(jp.query(json, utteranceRefsJsonpath))\n    } catch (err) {\n      throw new Error(`Intents jsonpath ${utteranceRefsJsonpath} invalid: ${err.message}`)\n    }\n\n    if (intent.length !== 1) {\n      throw new Error(`There should be exact one intent but found \"${JSON.stringify(intent)}\" on path \"${utteranceRefsJsonpath}\" in JSON \"${JSON.stringify(json)}\"`)\n    }\n\n    if (!result[intent]) {\n      result[intent] = []\n    }\n\n    try {\n      result[intent] = result[intent].concat(jp.query(json, utterancesJsonpath))\n    } catch (err) {\n      throw new Error(`Utterances jsonpath ${utteranceRefsJsonpath} invalid: ${err.message}`)\n    }\n  }\n\n  return { scriptBuffer: JSON.stringify({ utterances: result }) }\n}\n","const util = require('util')\nconst path = require('path')\nconst fs = require('fs')\nconst { NodeVM } = require('vm2')\nconst esprima = require('esprima')\nconst _ = require('lodash')\nconst debug = require('debug')('botium-core-HookUtils')\n\nconst Capabilities = require('../Capabilities')\nconst { BotiumError } = require('../scripting/BotiumError')\n\nconst executeHook = async (caps, hook, args) => {\n  return executeHookSync(caps, hook, args)\n}\n\nconst executeHookSync = (caps, hook, args) => {\n  if (!hook) {\n    return\n  }\n\n  if (_.isFunction(hook)) {\n    try {\n      return hook(args)\n    } catch (err) {\n      throw new Error(`Calling Hook function failed: ${err.message}`)\n    }\n  }\n\n  if (_.isString(hook)) {\n    try {\n      const vm = new NodeVM({\n        eval: false,\n        require: false,\n        sandbox: args\n      })\n      const r = vm.run(hook)\n      if (_.isFunction(r)) {\n        return r(args)\n      } else {\n        return r\n      }\n    } catch (err) {\n      throw new Error(`Calling Hook Javascript code failed: ${err.message}`)\n    }\n  }\n  throw new Error(`Unknown hook ${typeof hook}`)\n}\n\nconst getHook = (caps, data) => {\n  if (!data) {\n    return null\n  }\n  const allowUnsafe = !!caps[Capabilities.SECURITY_ALLOW_UNSAFE]\n\n  if (_.isFunction(data)) {\n    debug('found hook, type: function definition')\n    return data\n  }\n\n  if (_.isString(data)) {\n    let resultWithRequire\n    let tryLoadFile = path.resolve(process.cwd(), data)\n    if (fs.existsSync(tryLoadFile)) {\n      try {\n        resultWithRequire = require(tryLoadFile)\n      } catch (err) {\n      }\n    } else {\n      tryLoadFile = data\n      try {\n        resultWithRequire = require(data)\n      } catch (err) {\n      }\n    }\n\n    if (resultWithRequire) {\n      if (!allowUnsafe) {\n        throw new BotiumError(\n          'Security Error. Using unsafe custom hook with require is not allowed',\n          {\n            type: 'security',\n            subtype: 'allow unsafe',\n            source: path.basename(__filename),\n            cause: {\n              SECURITY_ALLOW_UNSAFE: caps[Capabilities.SECURITY_ALLOW_UNSAFE],\n              hookData: data\n            }\n          }\n        )\n      }\n\n      if (_.isFunction(resultWithRequire)) {\n        debug(`found hook, type: require, in ${tryLoadFile}`)\n        return resultWithRequire\n      } else {\n        throw new Error(`Cant load hook ${tryLoadFile} because it is not a function`)\n      }\n    }\n\n    try {\n      esprima.parseScript(data)\n    } catch (err) {\n      throw new Error(`Cant load hook, syntax is not valid - ${util.inspect(err)}`)\n    }\n\n    debug('Found hook, type: JavaScript as String')\n    return data\n  }\n\n  throw new Error(`Not valid hook ${util.inspect(data)}`)\n}\n\nmodule.exports = {\n  getHook,\n  executeHook,\n  executeHookSync\n}\n","const _ = require('lodash')\nconst { executeHookSync, getHook } = require('../../helpers/HookUtils')\n\nmodule.exports.precompile = (caps, scriptBuffer, options, filename) => {\n  if (!(options.script || options.SCRIPT)) {\n    throw new Error('Script is not defined')\n  }\n\n  if (_.isString(scriptBuffer)) {\n    try {\n      scriptBuffer = JSON.parse(scriptBuffer)\n    } catch (err) {\n    }\n  }\n\n  const hook = getHook(caps, options.SCRIPT)\n  const response = executeHookSync(caps, hook, { scriptData: scriptBuffer, filename })\n\n  if (!response) {\n    return\n  }\n\n  return response.scriptBuffer ? response : { scriptBuffer: response }\n}\n","const MarkdownIt = require('markdown-it')\nconst debug = require('debug')('botium-core-PrecompilerMarkdownRasa')\nconst util = require('util')\nconst _ = require('lodash')\n\nconst htmlCommentRegexp = /(<!--.*?-->)/g\n\nmodule.exports.precompile = (caps, scriptBuffer, options, filename) => {\n  if (!filename.endsWith('.md')) {\n    return\n  }\n\n  const md = new MarkdownIt()\n  const parsed = md.parse(scriptBuffer, {})\n\n  const _extractFromRasaIntent = (content) => {\n    return content.replace(htmlCommentRegexp, '').substring('intent:'.length).trim()\n  }\n\n  const _extractFromRasaSentence = (rasaSentence) => {\n    rasaSentence = rasaSentence.replace(htmlCommentRegexp, '')\n\n    const regex = /\\[([^\\]]+)\\]\\(([a-zA-Z][_:\\-a-zA-Z0-9]+)\\)/\n    let matched = rasaSentence.match(regex)\n    while (matched) {\n      const value = matched[1]\n      const splitted = matched[2].split(':')\n      // const [name] = splitted\n      if (splitted.length > 1) {\n        debug(`Entity synonim ${splitted[1]} ignored in sentence ${rasaSentence} `)\n      }\n      rasaSentence = rasaSentence.replace(matched[0], value)\n      matched = rasaSentence.match(regex)\n    }\n    return { meText: rasaSentence.trim() }\n  }\n\n  const utterances = {}\n\n  let meTexts = []\n  let intent = null\n  // state got every possible value, but just few are used. Could be simplified.\n  let state = 'START'\n  let processLeafs = null\n  for (const entry of parsed) {\n    if (entry.type === 'heading_open') {\n      state = 'heading_open'\n    } else if (entry.type === 'inline' && entry.content.startsWith('intent:')) {\n      intent = _extractFromRasaIntent(entry.content)\n      processLeafs = true\n      state = 'inline_intent'\n    } else if (entry.type === 'inline' && entry.content.startsWith('synonym:')) {\n      processLeafs = false\n      debug(`Synonym \"${entry.content}\" ignored`)\n      state = 'inline_synonym'\n    } else if (entry.type === 'inline' && entry.content.startsWith('regex:')) {\n      processLeafs = false\n      debug(`Regex \"${entry.content}\" ignored`)\n      state = 'inline_regex'\n    } else if (entry.type === 'inline' && entry.content.startsWith('lookup:')) {\n      processLeafs = false\n      debug(`Lookup \"${entry.content}\" ignored`)\n      state = 'inline_lookup'\n    } else if (entry.type === 'heading_close') {\n      state = 'heading_close'\n    } else if (entry.type === 'bullet_list_open') {\n      state = 'bullet_list_open'\n    } else if (entry.type === 'list_item_open') {\n      state = 'list_item_open'\n    } else if (entry.type === 'paragraph_open') {\n      state = 'paragraph_open'\n    } else if (entry.type === 'inline' && state === 'paragraph_open') {\n      if (processLeafs) {\n        const { meText } = _extractFromRasaSentence(entry.content)\n        meTexts.push(meText)\n      }\n      state = 'inline_leaf'\n    } else if (entry.type === 'paragraph_close') {\n      state = 'paragraph_close'\n    } else if (entry.type === 'list_item_close') {\n      state = 'list_item_close'\n    } else if (entry.type === 'bullet_list_close') {\n      state = 'bullet_list_close'\n      if (meTexts.length) {\n        if (!intent) {\n          debug(`Intent not found, dropping me texts ${JSON.stringify(meTexts)}`)\n        } else {\n          meTexts = _.uniq(meTexts)\n          utterances[intent] = meTexts\n        }\n      }\n      intent = null\n      meTexts = []\n    } else {\n      debug(`Markdown entry ignored ${util.inspect(entry)}`)\n    }\n  }\n\n  return {\n    scriptBuffer: { utterances },\n    filename: `${filename}.json`\n  }\n}\n","const _ = require('lodash')\nconst debug = require('debug')('botium-core-CapabilitiesUtils')\nconst { toJsonWeak } = require('./Utils')\n\nmodule.exports.getAllCapValues = (capNamePrefix, caps) => {\n  const allCapValues = []\n  const jsonPathCaps = _.pickBy(caps, (v, k) => k.startsWith(capNamePrefix))\n  _(jsonPathCaps).keys().sort().each((key) => {\n    const val = _.isFunction(caps[key]) ? (caps[key])() : caps[key]\n\n    if (_.isArray(val)) {\n      val.forEach(p => {\n        allCapValues.push(`${p}`.trim())\n      })\n    } else if (_.isString(val)) {\n      val.split(',').forEach(p => {\n        allCapValues.push(p.trim())\n      })\n    }\n  })\n  return allCapValues\n}\n\n/**\n * Extract repetitive capabilities into list.\n * Key is checked, but the value is free\n * @param caps\n * @param prefix\n * @returns {Array}\n */\nmodule.exports.flatCababilities = (caps, prefix) => {\n  const result = []\n  let capNames = []\n  for (const name of Object.keys(caps)) {\n    if (name.startsWith(prefix)) {\n      capNames.push(name)\n    }\n  }\n  capNames = capNames.sort()\n\n  if (capNames.length === 1 && capNames[0] === prefix) {\n    const val = toJsonWeak(caps[capNames[0]])\n    if (_.isArray(val)) {\n      val.forEach(entry => result.push(entry))\n    } else {\n      result.push(val)\n    }\n  } else {\n    const regexpPrefixAndGroup = new RegExp(`^${prefix}\\\\.\\\\d+`)\n    let currentGroup\n    let currentObject = {}\n    for (const capName of capNames) {\n      if (capName === prefix) {\n        throw new Error(`Incorrect structure. Global definition must be unique. See Capability ${capName}`)\n      }\n      if (capName.charAt(prefix.length) !== '.') {\n        debug(`From flatten result skipped capability ${capName} using prefix ${prefix}`)\n        continue\n      }\n      let capPrefixAndGroup = capName.match(regexpPrefixAndGroup)\n      capPrefixAndGroup = (capPrefixAndGroup && capPrefixAndGroup.length) ? capPrefixAndGroup[0] : prefix\n\n      if (capPrefixAndGroup === capName) {\n        const val = toJsonWeak(caps[capName])\n        result.push(val)\n      } else {\n        if (capPrefixAndGroup && capName.charAt(capPrefixAndGroup.length) !== '.') {\n          throw new Error(`Capability name invalid. No valid grouping found in capability ${capName} using prefix ${prefix}`)\n        }\n\n        const key = capName.substr(capPrefixAndGroup.length + 1)\n\n        if (!key.length) {\n          throw new Error(`Capability name invalid. No key after grouping in capability ${capName} using prefix ${prefix}`)\n        }\n\n        if (currentGroup && currentGroup !== capPrefixAndGroup) {\n          result.push(currentObject)\n          currentObject = {}\n        }\n\n        currentObject[key] = toJsonWeak(caps[capName])\n        currentGroup = capPrefixAndGroup\n      }\n    }\n    if (currentObject && currentGroup) {\n      result.push(currentObject)\n      currentObject = null\n      currentGroup = null\n    }\n  }\n\n  return result\n}\n","const util = require('util')\nconst debug = require('debug')('botium-core-Precompilers')\n\nconst { isJsonObject } = require('../../helpers/Utils')\n\nconst PROVIDERS = {\n  JSON_TO_JSON_JSONPATH: require('./JsonToJson'),\n  SCRIPT: require('./Script'),\n  MARKDOWN_RASA: require('./MarkdownRasa')\n}\nconst CAPABILITY_PREFIX = 'PRECOMPILERS'\nconst { flatCababilities } = require('../../helpers/CapabilitiesUtils')\n\nmodule.exports.execute = (scriptBuffer, options) => {\n  const { caps, filename } = options\n  const ownCaps = flatCababilities(caps, CAPABILITY_PREFIX)\n  if (Buffer.isBuffer(scriptBuffer)) {\n    scriptBuffer = scriptBuffer.toString()\n  }\n\n  for (const capSuffixAndVal of ownCaps) {\n    if (!(capSuffixAndVal.NAME)) {\n      debug(`Precompiler name not defined in ${util.inspect(capSuffixAndVal)}`)\n      return null\n    }\n    const provider = PROVIDERS[capSuffixAndVal.NAME]\n\n    if (!provider) {\n      throw new Error(`Precompiler ${util.inspect(capSuffixAndVal.NAME)} not found using caps ${util.inspect(capSuffixAndVal)}`)\n    }\n\n    const result = provider.precompile(caps, scriptBuffer, capSuffixAndVal, filename)\n    if (result) {\n      if (!result.scriptBuffer) {\n        return null\n      }\n      if (isJsonObject(result.scriptBuffer, false)) {\n        result.scriptBuffer = JSON.stringify(result.scriptBuffer)\n      }\n\n      result.precompiler = capSuffixAndVal.NAME\n      // dont let chain the precompilers. It looks more robust\n      return result\n    }\n  }\n}\n","const _ = require('lodash')\n\nmodule.exports = class CompilerBase {\n  constructor ({ AddConvos, AddPartialConvos, AddUtterances, AddScriptingMemories, GetPartialConvos, IsAsserterValid, IsLogicHookValid, IsUserInputValid, scriptingEvents }, caps = {}) {\n    this.context = {\n      AddConvos,\n      AddPartialConvos,\n      AddUtterances,\n      AddScriptingMemories,\n      GetPartialConvos,\n      IsAsserterValid,\n      IsLogicHookValid,\n      IsUserInputValid,\n      scriptingEvents\n    }\n    this.caps = caps\n  }\n\n  Validate () {\n  }\n\n  GetHeaders (scriptBuffer) {\n    const convos = this.Compile(scriptBuffer)\n    if (convos) {\n      return convos.map((convo) => convo.header)\n    } else {\n      return []\n    }\n  }\n\n  Compile (scriptBuffer, scriptType) {\n    throw new Error('not implemented')\n  }\n\n  Decompile (convos) {\n    throw new Error('not implemented')\n  }\n\n  _AssertCapabilityExists (cap) {\n    if (!this.caps[cap]) {\n      throw new Error(`Capability property ${cap} not set`)\n    }\n  }\n\n  _GetOptionalCapability (cap, def = null) {\n    if (_.isUndefined(this.caps[cap])) {\n      return def\n    }\n\n    return this.caps[cap]\n  }\n\n  _GetCapabilitiesByPrefix (prefix) {\n    const result = {}\n    Object.keys(this.caps).forEach((key) => {\n      if (key.startsWith(prefix)) {\n        result[key] = this.caps[key]\n      }\n    })\n    return result\n  }\n}\n","const util = require('util')\nconst _ = require('lodash')\n\nmodule.exports = class Utterance {\n  constructor (fromJson = {}) {\n    this.name = fromJson.name\n    this.sourceTag = fromJson.sourceTag\n    this.utterances = []\n    if (fromJson.utterances && _.isArray(fromJson.utterances)) {\n      this.utterances = fromJson.utterances\n    } else if (fromJson.utterances) {\n      this.utterances.push(fromJson.utterances)\n    }\n  }\n\n  toString () { return this.name + (this.sourceTag ? ` (${util.inspect(this.sourceTag)})` : '') + ': ' + this.utterances.join('|') }\n}\n","const util = require('util')\nconst XLSX = require('xlsx')\nconst _ = require('lodash')\nconst debug = require('debug')('botium-core-CompilerXlsx')\n\nconst Capabilities = require('../Capabilities')\nconst CompilerBase = require('./CompilerBase')\nconst Constants = require('./Constants')\nconst Utterance = require('./Utterance')\nconst { Convo } = require('./Convo')\nconst { linesToConvoStep, convoStepToLines, validateConvo } = require('./helper')\n\nmodule.exports = class CompilerXlsx extends CompilerBase {\n  constructor (context, caps = {}) {\n    super(context, caps)\n\n    this.colnames = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']\n  }\n\n  _splitSheetnames (sheetnames) {\n    if (sheetnames) return sheetnames.split(/\\s*[;,|]\\s*/)\n  }\n\n  _filterSheetnames (sheetnames, selectors) {\n    const filteredSheetnames = sheetnames.filter(sheetname => !!selectors.find(selector => selector === '*' || sheetname === selector))\n    debug(`_filterSheetnames(sheetnames: ${JSON.stringify(sheetnames)}, selectors: ${JSON.stringify(selectors)}, filteredSheetnames: ${JSON.stringify(filteredSheetnames)})`)\n    return filteredSheetnames\n  }\n\n  Validate () {\n    super.Validate()\n\n    if (this.caps[Capabilities.SCRIPTING_XLSX_STARTCOL] !== undefined) {\n      if (_.isString(this.caps[Capabilities.SCRIPTING_XLSX_STARTCOL]) && this.colnames.findIndex((c) => c === this.caps[Capabilities.SCRIPTING_XLSX_STARTCOL]) < 0) {\n        throw new Error(`SCRIPTING_XLSX_STARTCOL ${this.caps[Capabilities.SCRIPTING_XLSX_STARTCOL]} invalid (A-Z)`)\n      } else if (this.caps[Capabilities.SCRIPTING_XLSX_STARTCOL] < 1 || this.caps[Capabilities.SCRIPTING_XLSX_STARTCOL] > this.colnames.length) {\n        throw new Error(`SCRIPTING_XLSX_STARTCOL ${this.caps[Capabilities.SCRIPTING_XLSX_STARTCOL]} invalid (1-${this.colnames.length})`)\n      }\n    }\n  }\n\n  Compile (scriptBuffer, scriptType = Constants.SCRIPTING_TYPE_CONVO) {\n    const workbook = XLSX.read(scriptBuffer, { type: 'buffer' })\n    if (!workbook) throw new Error('Workbook not readable')\n\n    debug(`Loaded XLSX with Props: ${workbook.Props ? JSON.stringify(workbook.Props) : '<none>'}`)\n    const eol = this.caps[Capabilities.SCRIPTING_XLSX_EOL_WRITE]\n    const maxEmptyRowCount = 10\n\n    let sheetnames = []\n    if (scriptType === Constants.SCRIPTING_TYPE_CONVO) {\n      if (this.caps[Capabilities.SCRIPTING_XLSX_SHEETNAMES]) {\n        sheetnames = this._filterSheetnames(workbook.SheetNames, this._splitSheetnames(this.caps[Capabilities.SCRIPTING_XLSX_SHEETNAMES]))\n      } else {\n        sheetnames = workbook.SheetNames.filter(s => (s.toLowerCase().indexOf('convo') >= 0 || s.toLowerCase().indexOf('dialog') >= 0) && s.toLowerCase().indexOf('partial') < 0) || []\n      }\n    } else if (scriptType === Constants.SCRIPTING_TYPE_PCONVO) {\n      if (this.caps[Capabilities.SCRIPTING_XLSX_SHEETNAMES_PCONVOS]) {\n        sheetnames = this._filterSheetnames(workbook.SheetNames, this._splitSheetnames(this.caps[Capabilities.SCRIPTING_XLSX_SHEETNAMES_PCONVOS]))\n      } else {\n        sheetnames = workbook.SheetNames.filter(s => s.toLowerCase().indexOf('partial') >= 0) || []\n      }\n    } else if (scriptType === Constants.SCRIPTING_TYPE_UTTERANCES) {\n      if (this.caps[Capabilities.SCRIPTING_XLSX_SHEETNAMES_UTTERANCES]) {\n        sheetnames = this._filterSheetnames(workbook.SheetNames, this._splitSheetnames(this.caps[Capabilities.SCRIPTING_XLSX_SHEETNAMES_UTTERANCES]))\n      } else {\n        sheetnames = workbook.SheetNames.filter(s => s.toLowerCase().indexOf('utter') >= 0) || []\n      }\n    } else if (scriptType === Constants.SCRIPTING_TYPE_SCRIPTING_MEMORY) {\n      if (this.caps[Capabilities.SCRIPTING_XLSX_SHEETNAMES_SCRIPTING_MEMORY]) {\n        sheetnames = this._filterSheetnames(workbook.SheetNames, this._splitSheetnames(this.caps[Capabilities.SCRIPTING_XLSX_SHEETNAMES_SCRIPTING_MEMORY]))\n      } else {\n        sheetnames = workbook.SheetNames.filter(s => s.toLowerCase().indexOf('memory') >= 0 || s.toLowerCase().indexOf('scripting') >= 0) || []\n      }\n    } else {\n      throw Error(`Invalid script type ${scriptType}`)\n    }\n\n    debug(`sheet names for ${scriptType}: ${util.inspect(sheetnames)}`)\n\n    const scriptResults = []\n\n    sheetnames.forEach((sheetname) => {\n      const sheet = workbook.Sheets[sheetname]\n      if (!sheet) return\n\n      let { rowindex, colindex, hasNameCol } = this._findOrigin(sheet, scriptType)\n      debug(`evaluating sheet name for ${scriptType}: ${util.inspect(sheetname)}, rowindex ${rowindex}, colindex ${colindex}`)\n\n      if (scriptType === Constants.SCRIPTING_TYPE_CONVO || scriptType === Constants.SCRIPTING_TYPE_PCONVO) {\n        const parseCell = (sender, content) => {\n          if (!content) return { messageText: '' }\n\n          if (!_.isString(content)) content = '' + content\n\n          let eolSplit = null\n          let lines = []\n          if (content.indexOf('\\n') >= 0) {\n            eolSplit = '\\n'\n          } else if (content.indexOf('\\r') >= 0) {\n            eolSplit = '\\r'\n          }\n\n          if (eolSplit) {\n            lines = content.split(eolSplit).map(l => l.trim()).filter(l => l)\n          } else {\n            lines = [content.trim()]\n          }\n\n          return linesToConvoStep(lines, sender, this.context, eol)\n        }\n\n        const _extractRow = (rowindex) => {\n          const cell1 = this.colnames[colindex] + rowindex\n          const cell1Value = (sheet[cell1] && sheet[cell1].v) || null\n          const cell2 = this.colnames[colindex + 1] + rowindex\n          const cell2Value = (sheet[cell2] && sheet[cell2].v) || null\n          const cell3 = this.colnames[colindex + 2] + rowindex\n          const cell3Value = (sheet[cell3] && sheet[cell3].v) || null\n\n          if (hasNameCol) {\n            return {\n              nameCell: cell1,\n              nameCellValue: cell1Value,\n              meCell: cell2,\n              meCellValue: cell2Value,\n              botCell: cell3,\n              botCellValue: cell3Value\n            }\n          } else {\n            return {\n              nameCell: null,\n              nameCellValue: null,\n              meCell: cell1,\n              meCellValue: cell1Value,\n              botCell: cell2,\n              botCellValue: cell2Value\n            }\n          }\n        }\n\n        let questionAnswerMode = this._GetOptionalCapability(Capabilities.SCRIPTING_XLSX_MODE)\n        if (questionAnswerMode !== null) {\n          questionAnswerMode = questionAnswerMode === 'QUESTION_ANSWER'\n          debug(`questionAnswerMode to ${questionAnswerMode} (capability)`)\n        } else {\n          let emptyRowCount = 0\n          let index = 0\n          const foundQARows = []\n          const foundConvoRows = []\n\n          while (emptyRowCount <= maxEmptyRowCount) {\n            const { meCell, meCellValue, botCell, botCellValue } = _extractRow(rowindex + index)\n            if (!meCellValue && !botCellValue) {\n              emptyRowCount++\n            } else if (meCellValue && botCellValue) {\n              foundQARows.push(meCell)\n            } else if (meCellValue && !botCellValue) {\n              foundConvoRows.push(meCell)\n            } else if (!meCellValue && botCellValue) {\n              foundConvoRows.push(botCell)\n            }\n            index++\n          }\n          if (foundQARows.length > 0 && foundConvoRows.length > 0) {\n            throw new Error(`Excel sheet \"${sheetname}\" invalid. Detected intermixed Q&A sections (for instance ${foundQARows.slice(0, 3).join(',')}) and convo sections (for instance ${foundConvoRows.slice(0, 3).join(',')})`)\n          } else if (foundQARows.length > 0 && foundConvoRows.length === 0) {\n            questionAnswerMode = true\n            debug('questionAnswerMode to true (question-answer row found)')\n          } else {\n            questionAnswerMode = false\n            debug('questionAnswerMode to false (no question-answer row found)')\n          }\n        }\n\n        const convoResults = []\n        let currentConvo = []\n        let currentConvoName = null\n        let emptyRowCount = 0\n        let startrowindex = -1\n\n        while (true) {\n          const { nameCellValue, meCell, meCellValue, botCell, botCellValue } = _extractRow(rowindex)\n\n          if (questionAnswerMode) {\n            if (meCellValue || botCellValue) {\n              currentConvo = []\n              currentConvo.push(Object.assign(\n                { sender: 'me', stepTag: 'Cell ' + meCell },\n                parseCell('me', meCellValue)\n              ))\n              startrowindex = rowindex\n              currentConvo.push(Object.assign(\n                { sender: 'bot', stepTag: 'Cell ' + botCell },\n                parseCell('bot', botCellValue)\n              ))\n              convoResults.push(new Convo(this.context, {\n                header: {\n                  name: nameCellValue || null,\n                  sheetname,\n                  colindex,\n                  rowindex: startrowindex\n                },\n                conversation: currentConvo\n              }))\n            } else {\n              emptyRowCount++\n            }\n          } else {\n            if (currentConvo.length === 0) {\n              currentConvoName = nameCellValue || null\n            }\n            if (meCellValue) {\n              currentConvo.push(Object.assign(\n                { sender: 'me', stepTag: 'Cell ' + meCell },\n                parseCell('me', meCellValue)\n              ))\n              if (startrowindex < 0) startrowindex = rowindex\n              emptyRowCount = 0\n            } else if (botCellValue) {\n              currentConvo.push(Object.assign(\n                { sender: 'bot', stepTag: 'Cell ' + botCell },\n                parseCell('bot', botCellValue)\n              ))\n              if (startrowindex < 0) startrowindex = rowindex\n              emptyRowCount = 0\n            } else {\n              if (currentConvo.length > 0) {\n                convoResults.push(new Convo(this.context, {\n                  header: {\n                    name: currentConvoName,\n                    sheetname,\n                    colindex,\n                    rowindex: startrowindex\n                  },\n                  conversation: currentConvo\n                }))\n              }\n              currentConvo = []\n              currentConvoName = null\n              startrowindex = -1\n              emptyRowCount++\n            }\n          }\n          rowindex++\n\n          if (emptyRowCount > maxEmptyRowCount) break\n        }\n\n        if (convoResults.length > 0) {\n          const formatLength = Math.max(3, `${convoResults[convoResults.length - 1].header.rowindex}`.length)\n          const formatBase = '0'.repeat(formatLength)\n          const formatRowIndex = (rowindex) => (formatBase + `${rowindex}`).slice(-1 * formatLength)\n          convoResults.forEach(convo => {\n            if (!convo.header.name) {\n              convo.header.name = `${convo.header.sheetname}-${this.colnames[convo.header.colindex]}${formatRowIndex(convo.header.rowindex)}`\n            }\n            convo.header.sort = convo.header.name\n            scriptResults.push(convo)\n          })\n        }\n      }\n\n      if (scriptType === Constants.SCRIPTING_TYPE_UTTERANCES) {\n        let currentUtterance = null\n        let emptylines = 0\n        while (true) {\n          const nameCell = this.colnames[colindex] + rowindex\n          const uttCell = this.colnames[colindex + 1] + rowindex\n\n          if (sheet[nameCell] && sheet[nameCell].v && sheet[uttCell] && sheet[uttCell].v) {\n            currentUtterance = new Utterance({ name: sheet[nameCell].v, utterances: [`${sheet[uttCell].v}`] })\n            scriptResults.push(currentUtterance)\n            emptylines = 0\n          } else if (sheet[uttCell] && sheet[uttCell].v) {\n            if (currentUtterance) currentUtterance.utterances.push(`${sheet[uttCell].v}`)\n            emptylines = 0\n          } else {\n            currentUtterance = null\n            emptylines++\n          }\n          rowindex++\n\n          if (emptylines > maxEmptyRowCount) break\n        }\n      }\n\n      if (scriptType === Constants.SCRIPTING_TYPE_SCRIPTING_MEMORY) {\n        const variableNames = []\n        let colindexTemp = colindex + 1\n        while (true) {\n          const variableNameCell = this.colnames[colindexTemp] + rowindex\n          if (sheet[variableNameCell] && sheet[variableNameCell].v) {\n            variableNames.push(sheet[variableNameCell].v)\n          } else {\n            break\n          }\n\n          colindexTemp++\n        }\n\n        rowindex += 1\n        while (true) {\n          const caseNameCell = this.colnames[colindex] + rowindex\n          if (sheet[caseNameCell] && sheet[caseNameCell].v) {\n            const caseName = sheet[caseNameCell].v\n            const values = {}\n            for (let i = 0; i < variableNames.length; i++) {\n              const variableValueCell = this.colnames[colindex + 1 + i] + rowindex\n              if (sheet[variableValueCell] && sheet[variableValueCell].v) {\n                values[variableNames[i]] = sheet[variableValueCell].v.toString()\n              } else {\n                values[variableNames[i]] = null\n              }\n            }\n            rowindex += 1\n\n            scriptResults.push({ header: { name: caseName }, values: values })\n          } else {\n            break\n          }\n        }\n      }\n    })\n\n    if (scriptResults && scriptResults.length > 0) {\n      if (scriptType === Constants.SCRIPTING_TYPE_CONVO) {\n        this.context.AddConvos(scriptResults)\n      } else if (scriptType === Constants.SCRIPTING_TYPE_PCONVO) {\n        this.context.AddPartialConvos(scriptResults)\n      } else if (scriptType === Constants.SCRIPTING_TYPE_UTTERANCES) {\n        this.context.AddUtterances(scriptResults)\n      } else if (scriptType === Constants.SCRIPTING_TYPE_SCRIPTING_MEMORY) {\n        this.context.AddScriptingMemories(scriptResults)\n      }\n      return scriptResults\n    }\n  }\n\n  Decompile (convos) {\n    const eol = this.caps[Capabilities.SCRIPTING_XLSX_EOL_WRITE]\n\n    let sheetname = 'Botium'\n    if (this.caps[Capabilities.SCRIPTING_XLSX_SHEETNAMES]) {\n      sheetname = this._splitSheetnames(this.caps[Capabilities.SCRIPTING_XLSX_SHEETNAMES])[0]\n    }\n    const data = []\n    const errors = []\n    if (convos) {\n      for (let i = 0; i < convos.length; i++) {\n        const convo = convos[i]\n        if (!convo.conversation) return\n\n        const validationResult = validateConvo(convo)\n        if (validationResult.errors.length > 0) {\n          errors.push(...validationResult.errors.map(e => new Error(`Convo ${i + 1} ${e.message}`)))\n        }\n\n        convo.conversation.forEach((step) => {\n          let cellContent = ''\n\n          const stepLines = convoStepToLines(step)\n          if (stepLines && stepLines.length > 0) cellContent = stepLines.join(eol)\n\n          data.push({ [step.sender]: cellContent })\n        })\n        data.push({})\n      }\n    }\n    if (errors.length > 0) {\n      throw new Error(errors.map(e => e.message).join(' - '))\n    }\n\n    const wb = XLSX.utils.book_new()\n    const ws = XLSX.utils.json_to_sheet(data, { header: ['me', 'bot'] })\n    XLSX.utils.book_append_sheet(wb, ws, sheetname)\n    const xlsxOutput = XLSX.write(wb, { type: 'buffer' })\n    return xlsxOutput\n  }\n\n  _get (sheet, rowindex, colindex) {\n    const cell = this.colnames[colindex] + rowindex\n    const cellValue = sheet[cell] && sheet[cell].v\n    return cellValue\n  }\n\n  _findOrigin (sheet, scriptType) {\n    let rowindex = this.caps[Capabilities.SCRIPTING_XLSX_STARTROW]\n    let colindex = this.caps[Capabilities.SCRIPTING_XLSX_STARTCOL]\n    let hasNameCol = _.has(this.caps, Capabilities.SCRIPTING_XLSX_HASNAMECOL) ? !!this.caps[Capabilities.SCRIPTING_XLSX_HASNAMECOL] : null\n\n    if (_.isString(this.caps[Capabilities.SCRIPTING_XLSX_STARTCOL])) {\n      colindex = this.colnames.findIndex((c) => c === this.caps[Capabilities.SCRIPTING_XLSX_STARTCOL])\n    } else if (colindex !== undefined) {\n      colindex = colindex - 1\n    }\n\n    if (rowindex === undefined && colindex === undefined) {\n      // eslint-disable-next-line no-labels\n      NestedLoop:\n      for (let cr = 1; cr < 1000; cr++) {\n        for (let cc = 0; cc < this.colnames.length; cc++) {\n          if (this._get(sheet, cr, cc)) {\n            if (scriptType === Constants.SCRIPTING_TYPE_SCRIPTING_MEMORY) {\n              if (cc > 0 && this._get(sheet, cr + 1, cc - 1)) {\n                rowindex = cr\n                colindex = cc - 1\n                // eslint-disable-next-line no-labels\n                break NestedLoop\n              }\n            } else {\n              rowindex = cr\n              colindex = cc\n              // eslint-disable-next-line no-labels\n              break NestedLoop\n            }\n          }\n        }\n      }\n      if (scriptType !== Constants.SCRIPTING_TYPE_SCRIPTING_MEMORY) {\n        if (rowindex !== undefined && this.caps[Capabilities.SCRIPTING_XLSX_HASHEADERS]) {\n          rowindex++\n        }\n      }\n    } else if (rowindex === undefined && colindex !== undefined) {\n      for (let i = 1; i < 1000; i++) {\n        if (this._get(sheet, i, colindex)) {\n          rowindex = i\n          break\n        }\n      }\n      if (this.caps[Capabilities.SCRIPTING_XLSX_HASHEADERS]) {\n        rowindex++\n      }\n    } else if (rowindex !== undefined && colindex === undefined) {\n      for (let i = 0; i < this.colnames.length; i++) {\n        if (this._get(sheet, rowindex, i)) {\n          colindex = i\n          break\n        }\n      }\n    }\n\n    if (_.isNull(hasNameCol)) {\n      if (scriptType === Constants.SCRIPTING_TYPE_CONVO || scriptType === Constants.SCRIPTING_TYPE_PCONVO) {\n        if (this.caps[Capabilities.SCRIPTING_XLSX_HASHEADERS]) {\n          if (this._get(sheet, rowindex - 1, colindex) && this._get(sheet, rowindex - 1, colindex + 1) && this._get(sheet, rowindex - 1, colindex + 2)) {\n            hasNameCol = true\n          }\n        }\n      }\n    }\n    return { rowindex, colindex, hasNameCol }\n  }\n}\n","const _ = require('lodash')\n\nconst Capabilities = require('../Capabilities')\nconst Constants = require('./Constants')\nconst CompilerBase = require('./CompilerBase')\nconst Utterance = require('./Utterance')\nconst { ConvoHeader, Convo } = require('./Convo')\nconst { linesToConvoStep, convoStepToLines, validateConvo, validSenders } = require('./helper')\n\nmodule.exports = class CompilerTxt extends CompilerBase {\n  constructor (context, caps = {}) {\n    super(context, caps)\n\n    this.eol = caps[Capabilities.SCRIPTING_TXT_EOL]\n  }\n\n  Validate () {\n    super.Validate()\n    this._AssertCapabilityExists(Capabilities.SCRIPTING_TXT_EOL)\n  }\n\n  GetHeaders (scriptBuffer) {\n    let scriptData = scriptBuffer\n    if (Buffer.isBuffer(scriptBuffer)) scriptData = scriptData.toString()\n\n    const lines = scriptData.split(this.eol)\n\n    const header = { }\n\n    if (lines && !lines[0].startsWith('#')) {\n      header.name = lines[0]\n    }\n    return new ConvoHeader(header)\n  }\n\n  Compile (scriptBuffer, scriptType = Constants.SCRIPTING_TYPE_CONVO) {\n    let scriptData = scriptBuffer\n    if (Buffer.isBuffer(scriptBuffer)) scriptData = scriptData.toString()\n\n    const lines = _.map(scriptData.split(this.eol), (line) => line.trim())\n\n    if (scriptType === Constants.SCRIPTING_TYPE_CONVO) {\n      return this._compileConvo(lines, false)\n    } else if (scriptType === Constants.SCRIPTING_TYPE_PCONVO) {\n      return this._compileConvo(lines, true)\n    } else if (scriptType === Constants.SCRIPTING_TYPE_UTTERANCES) {\n      return this._compileUtterances(lines)\n    } else if (scriptType === Constants.SCRIPTING_TYPE_SCRIPTING_MEMORY) {\n      return this._compileScriptingMemory(lines)\n    } else {\n      throw Error(`Invalid script type ${scriptType}`)\n    }\n  }\n\n  _compileConvo (lines, isPartial = false) {\n    const convo = {\n      header: {},\n      conversation: []\n    }\n\n    let currentLineIndex = 0\n    let currentLines = []\n    let convoStepSender = null\n    let convoStepChannel = null\n    let convoStepLineIndex = null\n\n    const parseMsg = (lines) => {\n      lines = lines || []\n      return linesToConvoStep(lines, convoStepSender, this.context, this.eol)\n    }\n\n    const pushPrev = () => {\n      if (convoStepSender && currentLines) {\n        const convoStep = {\n          sender: convoStepSender,\n          channel: convoStepChannel,\n          stepTag: 'Line ' + convoStepLineIndex\n        }\n        Object.assign(convoStep, parseMsg(currentLines))\n        convo.conversation.push(convoStep)\n      } else if (!convoStepSender && currentLines) {\n        convo.header.name = currentLines[0]\n        if (currentLines.length > 1) {\n          convo.header.description = currentLines.slice(1).join(this.eol)\n        }\n      }\n    }\n\n    const isValidTagLine = (line) => {\n      if (!line || !line.startsWith('#')) return false\n      const sender = line.substr(1).split(' ')[0]\n      return validSenders.includes(sender)\n    }\n\n    lines.forEach((line) => {\n      currentLineIndex++\n      line = line.trim()\n      if (isValidTagLine(line)) {\n        pushPrev()\n\n        convoStepSender = line.substr(1).trim()\n        convoStepChannel = null\n        convoStepLineIndex = currentLineIndex\n        if (convoStepSender.indexOf(' ') > 0) {\n          convoStepChannel = convoStepSender.substr(convoStepSender.indexOf(' ') + 1).trim()\n          convoStepSender = convoStepSender.substr(0, convoStepSender.indexOf(' ')).trim()\n        }\n        currentLines = []\n      } else {\n        currentLines.push(line)\n      }\n    })\n    pushPrev()\n\n    const result = [new Convo(this.context, convo)]\n    if (isPartial) {\n      this.context.AddPartialConvos(result)\n    } else {\n      this.context.AddConvos(result)\n    }\n    return result\n  }\n\n  _compileUtterances (lines) {\n    if (lines && lines.length > 0) {\n      const result = [new Utterance({ name: lines[0], utterances: lines.length > 1 ? lines.slice(1) : [] })]\n      this.context.AddUtterances(result)\n      return result\n    }\n  }\n\n  _compileScriptingMemory (lines) {\n    if (lines && lines.length > 1) {\n      const names = lines[0].split('|').map((name) => name.trim()).slice(1)\n      const scriptingMemories = []\n      for (let row = 1; row < lines.length; row++) {\n        if (!lines[row] || lines[row].length === 0) continue\n        const rawRow = lines[row].split('|').map((name) => name.trim())\n        const caseName = rawRow[0]\n        const values = rawRow.slice(1)\n        const json = {}\n        for (let col = 0; col < names.length; col++) {\n          json[names[col]] = values[col]\n        }\n        const scriptingMemory = { header: { name: caseName }, values: json }\n        scriptingMemories.push(scriptingMemory)\n      }\n      this.context.AddScriptingMemories(scriptingMemories)\n      return scriptingMemories\n    }\n  }\n\n  Decompile (convos) {\n    if (convos.length > 1) {\n      throw new Error('only one convo per script')\n    }\n\n    const convo = convos[0]\n\n    const validationResult = validateConvo(convo)\n    if (validationResult.errors.length > 0) {\n      throw new Error(validationResult.errors.map(e => e.message).join(' - '))\n    }\n\n    let script = ''\n\n    if (convo.header.name) {\n      script += convo.header.name + this.eol\n    }\n    if (convo.header.description) {\n      script += convo.header.description + this.eol\n    }\n\n    convo.conversation.forEach((step) => {\n      script += this.eol\n\n      script += '#' + step.sender\n      if (step.channel && step.channel !== 'default') {\n        script += ' ' + step.channel\n      }\n      script += this.eol\n\n      const stepLines = convoStepToLines(step)\n      if (stepLines && stepLines.length > 0) script += stepLines.join(this.eol) + this.eol\n    })\n    return script\n  }\n}\n","const parse = require('csv-parse/lib/sync')\nconst _ = require('lodash')\nconst debug = require('debug')('botium-core-CompilerCsv')\n\nconst Capabilities = require('../Capabilities')\nconst CompilerBase = require('./CompilerBase')\nconst Constants = require('./Constants')\nconst { Convo } = require('./Convo')\nconst { linesToConvoStep } = require('./helper')\n\nconst DELIMITERS_CHECK = [',', ';', '|', '\\t']\nconst DEFAULT_DELIMITER = ','\n\nconst DEFAULT_QA_COLUMN_QUESTION = 0\nconst DEFAULT_QA_COLUMN_ANSWER = 1\n\nconst DEFAULT_MULTIROW_COLUMN_CONVERSATION = 0\nconst DEFAULT_MULTIROW_COLUMN_SENDER = 1\nconst DEFAULT_MULTIROW_COLUMN_TEXT = 2\n\nconst _findColIndex = (header, colName) => {\n  if (_.isString(colName)) {\n    const result = header.findIndex(h => h === colName)\n    if (result >= 0) return result\n    throw new Error(`Column name ${colName} not found.`)\n  }\n  if (_.isNumber(colName)) {\n    return colName\n  }\n  throw new Error(`Column ${colName} not found.`)\n}\n\nmodule.exports = class CompilerCsv extends CompilerBase {\n  constructor (context, caps = {}) {\n    super(context, caps)\n  }\n\n  Validate () {\n    this._AssertCapabilityExists(Capabilities.SCRIPTING_CSV_QUOTE)\n    this._AssertCapabilityExists(Capabilities.SCRIPTING_CSV_ESCAPE)\n\n    return super.Validate()\n  }\n\n  Compile (scriptBuffer, scriptType = Constants.SCRIPTING_TYPE_CONVO) {\n    const scriptData = Buffer.isBuffer(scriptBuffer) ? scriptBuffer.toString() : scriptBuffer\n    if (scriptData.length === 0) {\n      return []\n    }\n\n    let delimiter = this._GetOptionalCapability(Capabilities.SCRIPTING_CSV_DELIMITER)\n    if (!delimiter) {\n      const firstline = scriptData.split('\\n')[0].trim()\n      for (const d of DELIMITERS_CHECK) {\n        if (firstline.indexOf(d) >= 0) {\n          delimiter = d\n          break\n        }\n      }\n      if (!delimiter) {\n        delimiter = DEFAULT_DELIMITER\n        debug(`Couldn't detect column delimiter automatically, using \"${delimiter}\" by default. Please set the SCRIPTING_CSV_DELIMITER capability.`)\n      } else {\n        debug(`Detected column delimiter automatically, using \"${delimiter}\".`)\n      }\n    }\n\n    let rows\n    try {\n      rows = parse(scriptData, {\n        delimiter,\n        escape: this.caps[Capabilities.SCRIPTING_CSV_ESCAPE],\n        quote: this.caps[Capabilities.SCRIPTING_CSV_QUOTE],\n        columns: false\n      })\n    } catch (err) {\n      throw new Error(`Invalid CSV: ${err.message || err}`)\n    }\n    if (rows.length === 0) {\n      return []\n    }\n    if (rows[0].length === 1) {\n      debug('Found 1-column CSV file, treating it as utterance file')\n      if (scriptType === Constants.SCRIPTING_TYPE_UTTERANCES) {\n        const result = [{ name: rows[0][0], utterances: rows.slice(1).map(r => r[0]) }]\n        this.context.AddUtterances(result)\n        return result\n      } else {\n        return []\n      }\n    }\n\n    if (scriptType !== Constants.SCRIPTING_TYPE_CONVO && scriptType !== Constants.SCRIPTING_TYPE_PCONVO) {\n      return []\n    }\n    let header = null\n    if (rows.length > 0 && this.caps[Capabilities.SCRIPTING_CSV_SKIP_HEADER]) {\n      header = rows[0]\n      rows = rows.slice(1)\n    }\n    if (rows.length === 0) {\n      return []\n    }\n\n    const lineNumberBase = this.caps[Capabilities.SCRIPTING_CSV_SKIP_HEADER] ? 2 : 1\n    if (rows[0].length === 2) {\n      debug('Found 2-column CSV file, treating it as question/answer file')\n\n      let colQuestion = DEFAULT_QA_COLUMN_QUESTION\n      let colAnswer = DEFAULT_QA_COLUMN_ANSWER\n\n      if (header) {\n        if (this.caps[Capabilities.SCRIPTING_CSV_QA_COLUMN_QUESTION] !== undefined) {\n          colQuestion = _findColIndex(header, this.caps[Capabilities.SCRIPTING_CSV_QA_COLUMN_QUESTION])\n        }\n        if (this.caps[Capabilities.SCRIPTING_CSV_QA_COLUMN_ANSWER] !== undefined) {\n          colAnswer = _findColIndex(header, this.caps[Capabilities.SCRIPTING_CSV_QA_COLUMN_ANSWER])\n        }\n      }\n\n      const convos = rows.map((row, i) => new Convo(this.context, {\n        header: {\n          name: `L${i + lineNumberBase}`\n        },\n        conversation: [\n          Object.assign({},\n            linesToConvoStep(\n              [row[colQuestion]],\n              'me',\n              this.context,\n              undefined,\n              true\n            ), { stepTag: `L${i + lineNumberBase}-Question` }),\n          Object.assign({},\n            linesToConvoStep(\n              [row[colAnswer]],\n              'bot',\n              this.context,\n              undefined,\n              true\n            ), { stepTag: `L${i + lineNumberBase}-Answer` })\n        ]\n      }))\n      if (scriptType === Constants.SCRIPTING_TYPE_CONVO) {\n        this.context.AddConvos(convos)\n      } else if (scriptType === Constants.SCRIPTING_TYPE_PCONVO) {\n        this.context.AddPartialConvos(convos)\n      }\n      return convos\n    }\n\n    if (rows[0].length >= 3) {\n      debug('Found 3-column CSV file, treating it as multi-row conversation file')\n\n      let colConversationId = DEFAULT_MULTIROW_COLUMN_CONVERSATION\n      let colSender = DEFAULT_MULTIROW_COLUMN_SENDER\n      let colText = DEFAULT_MULTIROW_COLUMN_TEXT\n\n      if (header) {\n        if (this.caps[Capabilities.SCRIPTING_CSV_MULTIROW_COLUMN_CONVERSATION_ID] !== undefined) {\n          colConversationId = _findColIndex(header, this.caps[Capabilities.SCRIPTING_CSV_MULTIROW_COLUMN_CONVERSATION_ID])\n        }\n        if (this.caps[Capabilities.SCRIPTING_CSV_MULTIROW_COLUMN_SENDER] !== undefined) {\n          colSender = _findColIndex(header, this.caps[Capabilities.SCRIPTING_CSV_MULTIROW_COLUMN_SENDER])\n        }\n        if (this.caps[Capabilities.SCRIPTING_CSV_MULTIROW_COLUMN_TEXT] !== undefined) {\n          colText = _findColIndex(header, this.caps[Capabilities.SCRIPTING_CSV_MULTIROW_COLUMN_TEXT])\n        }\n      }\n\n      const conversationIds = _.uniq(rows.map(r => r[colConversationId]))\n      const convos = conversationIds.map(conversationId => {\n        const convoRows = rows.map((row, i) => {\n          if (row[colConversationId] === conversationId) {\n            return Object.assign({},\n              linesToConvoStep(\n                [row[colText]],\n                row[colSender],\n                this.context,\n                undefined,\n                true\n              ), { stepTag: `L${i + lineNumberBase}` })\n          }\n          return null\n        }).filter(c => c)\n        return new Convo(this.context, {\n          header: {\n            name: conversationId\n          },\n          conversation: convoRows\n        })\n      })\n      if (scriptType === Constants.SCRIPTING_TYPE_CONVO) {\n        this.context.AddConvos(convos)\n      } else if (scriptType === Constants.SCRIPTING_TYPE_PCONVO) {\n        this.context.AddPartialConvos(convos)\n      }\n      return convos\n    }\n  }\n}\n","const _ = require('lodash')\nconst debug = require('debug')('botium-core-CompilerObject')\n\nconst Capabilities = require('../Capabilities')\nconst CompilerBase = require('./CompilerBase')\nconst Constants = require('./Constants')\nconst Utterance = require('./Utterance')\nconst { Convo } = require('./Convo')\nconst { linesToConvoStep, validSenders } = require('./helper')\n\nmodule.exports = class CompilerObjectBase extends CompilerBase {\n  constructor (context, caps = {}) {\n    super(context, caps)\n\n    this.eol = caps[Capabilities.SCRIPTING_TXT_EOL]\n  }\n\n  Validate () {\n    super.Validate()\n    this._AssertCapabilityExists(Capabilities.SCRIPTING_TXT_EOL)\n  }\n\n  GetHeaders (scriptBuffer) {\n    debug('GetHeaders is not implemented!')\n  }\n\n  Deserialize (scriptData) {\n    throw new Error('not implemented')\n  }\n\n  Compile (scriptBuffer, scriptType = Constants.SCRIPTING_TYPE_CONVO) {\n    let scriptData = scriptBuffer\n    if (Buffer.isBuffer(scriptBuffer)) scriptData = scriptData.toString()\n    scriptData = this.Deserialize(scriptData)\n\n    const result = []\n    if (scriptType === Constants.SCRIPTING_TYPE_CONVO) {\n      result.push(...this._compileConvo(scriptData.convos, false))\n    } else if (scriptType === Constants.SCRIPTING_TYPE_PCONVO) {\n      result.push(...this._compileConvo(scriptData.partialConvos, true))\n    } else if (scriptType === Constants.SCRIPTING_TYPE_UTTERANCES) {\n      result.push(...this._compileUtterances(scriptData.utterances))\n    } else if (scriptType === Constants.SCRIPTING_TYPE_SCRIPTING_MEMORY) {\n      result.push(...this._compileScriptingMemory(scriptData.scriptingMemory))\n    }\n\n    return result\n  }\n\n  _compileConvo (convos, isPartial = false) {\n    const result = []\n    for (const convoRaw of (convos || [])) {\n      const conversation = []\n      for (const [convoStepLineIndex, convoStepRaw] of convoRaw.steps.entries()) {\n        const lineTag = `${convoStepLineIndex + 1}`.padStart(`${convoRaw.steps.length}`.length, '0')\n\n        if (Object.keys(convoStepRaw).length > 1) {\n          throw new Error(`Use just one from ${validSenders.join(',')} fields in step ${JSON.stringify(convoStepRaw)}`)\n        }\n        if (validSenders.findIndex(sender => convoStepRaw[sender]) < 0) {\n          throw new Error(`Use ${validSenders.map(s => `'${s}'`).join(' or ')} field in step ${JSON.stringify(convoStepRaw)}`)\n        }\n\n        const convoStepSender = Object.keys(convoStepRaw)[0]\n        const convoStepObject = convoStepRaw[convoStepSender]\n\n        conversation.push(Object.assign(\n          {\n            sender: convoStepSender,\n            stepTag: 'Line ' + lineTag\n          },\n          linesToConvoStep(convoStepObject, convoStepSender, this.context, this.eol)\n        ))\n      }\n\n      const convo = {\n        header: {\n          name: convoRaw.name,\n          description: convoRaw.description\n        },\n        conversation\n      }\n\n      const toAdd = new Convo(this.context, convo)\n      result.push(toAdd)\n      if (isPartial) {\n        this.context.AddPartialConvos([toAdd])\n      } else {\n        this.context.AddConvos([toAdd])\n      }\n    }\n    return result\n  }\n\n  _compileUtterances (utterancesRaw) {\n    const result = []\n    const names = Object.keys(utterancesRaw || {})\n    for (const name of names) {\n      if (!_.isArray(utterancesRaw[name])) {\n        throw new Error(`The '${name}' utterance has to be an array.`)\n      }\n      result.push(new Utterance({ name, utterances: (utterancesRaw[name]).map(u => `${u}`) }))\n    }\n    this.context.AddUtterances(result)\n    return result\n  }\n\n  _compileScriptingMemory (lines) {\n    if (lines && lines.length > 0) {\n      if (_.isString(lines[0])) {\n        if (lines.length > 1) {\n          const names = lines[0].split('|').map((name) => name.trim()).slice(1)\n          const scriptingMemories = []\n          for (let row = 1; row < lines.length; row++) {\n            const rawRow = lines[row].split('|').map((name) => name.trim())\n            const caseName = rawRow[0]\n            const values = rawRow.slice(1)\n            const json = {}\n            for (let col = 0; col < names.length; col++) {\n              json[names[col]] = values[col]\n            }\n            const scriptingMemory = { header: { name: caseName }, values: json }\n            scriptingMemories.push(scriptingMemory)\n          }\n          this.context.AddScriptingMemories(scriptingMemories)\n          return scriptingMemories\n        }\n      } else {\n        this.context.AddScriptingMemories(lines)\n        return lines\n      }\n    }\n    return []\n  }\n\n  Decompile (convos) {\n    throw new Error('not implemented')\n  }\n}\n","const YAML = require('yaml')\n\nconst CompilerObjectBase = require('./CompilerObjectBase')\nmodule.exports = class CompilerYaml extends CompilerObjectBase {\n  constructor (context, caps = {}) {\n    super(context, caps)\n  }\n\n  Deserialize (scriptData) {\n    return YAML.parse(scriptData)\n  }\n}\n","const CompilerObjectBase = require('./CompilerObjectBase')\nconst { convoStepToObject } = require('./helper')\n\nmodule.exports = class CompilerJson extends CompilerObjectBase {\n  constructor (context, caps = {}) {\n    super(context, caps)\n  }\n\n  Deserialize (scriptData) {\n    return JSON.parse(scriptData)\n  }\n\n  Decompile (convos) {\n    const result = convos.map(convo => ({\n      name: convo.header.name,\n      description: convo.header.description,\n      steps: convo.conversation.map(set => ({\n        [set.sender]: convoStepToObject(set)\n      }))\n    }))\n    return JSON.stringify({ convos: result }, null, 2)\n  }\n}\n","const debug = require('debug')('botium-core-CompilerMarkdown')\nconst MarkdownIt = require('markdown-it')\nconst util = require('util')\nconst md = new MarkdownIt()\n\nconst Capabilities = require('../Capabilities')\nconst CompilerBase = require('./CompilerBase')\nconst Constants = require('./Constants')\nconst { Convo } = require('./Convo')\nconst Utterance = require('./Utterance')\nconst { linesToConvoStep, validSenders, validateSender } = require('./helper')\n\nmodule.exports = class CompilerMarkdown extends CompilerBase {\n  constructor (context, caps = {}) {\n    super(context, caps)\n\n    this.eol = caps[Capabilities.SCRIPTING_TXT_EOL]\n  }\n\n  Validate () {\n    super.Validate()\n    this._AssertCapabilityExists(Capabilities.SCRIPTING_TXT_EOL)\n  }\n\n  Compile (scriptBuffer, scriptType = Constants.SCRIPTING_TYPE_CONVO) {\n    if (Buffer.isBuffer(scriptBuffer)) scriptBuffer = scriptBuffer.toString()\n\n    const parsed = md.parse(scriptBuffer, {})\n\n    const _toStructuredMarkdown = (parsed) => {\n      let depth = -1\n      const struct = [{ children: [] }, null, null, null, null, null]\n\n      const _add = (entry) => {\n        if (!struct[depth] || !struct[depth].children) throw new Error(`\"${entry.markup}\" not expected here (Line ${entry.map[0] + 1}): format invalid`)\n        struct[depth].children.push(entry)\n        entry.children = []\n        struct[depth + 1] = entry\n      }\n\n      for (const entry of parsed) {\n        if (entry.type === 'heading_open') {\n          if (entry.tag === 'h1') {\n            depth = 0\n          } else if (entry.tag === 'h2') {\n            if (depth < 0 || depth > 1) {\n              throw new Error(`\"${entry.markup}\" not expected here (Line ${entry.map[0] + 1}): expecting parent \"#\" for \"${entry.markup}\"`)\n            }\n            depth = 1\n          } else {\n            debug(`Markdown entry \"${util.inspect(entry)}\" ignored. Unknown heading`)\n          }\n        } else if (entry.type === 'bullet_list_open') {\n          if (depth < 1) {\n            throw new Error(`\"${entry.markup}\" not expected here (Line ${entry.map[0] + 1}): expecting parent \"##\" for \"${entry.markup}\"`)\n          }\n          if (depth > 3) {\n            throw new Error(`\"${entry.markup}\" not expected here (Line ${entry.map[0] + 1}): Bullet list depth 3 not supported`)\n          }\n          depth++\n        } else if (entry.type === 'bullet_list_close') {\n          depth--\n        } else if (entry.type === 'inline') {\n          _add(entry)\n        }\n      }\n      return struct[0]\n    }\n\n    const structured = _toStructuredMarkdown(parsed)\n    for (const convosOrUtterances of structured.children) {\n      if ((convosOrUtterances.content === 'Convos' && scriptType === Constants.SCRIPTING_TYPE_CONVO) ||\n        (convosOrUtterances.content === 'PartialConvos' && scriptType === Constants.SCRIPTING_TYPE_PCONVO)) {\n        const convosBotium = []\n        for (const convo of convosOrUtterances.children) {\n          const conversation = []\n          for (const step of convo.children) {\n            const sender = step.content.toLowerCase()\n            if (validateSender(sender)) {\n              // handle both:\n              //   - BUTTONS checkbutton|checkbutton2\n              // and\n              // - BUTTONS\n              //   - checkbutton\n              //   - checkbutton2\n              conversation.push(Object.assign(\n                {\n                  sender,\n                  stepTag: 'Line ' + (step.map[0] + 1)\n                },\n                linesToConvoStep(step.children.map(child => child.content +\n                  (child.children ? ' ' + child.children.map(child => child.content).join('|') : '')), sender, this.context, this.eol)\n              ))\n            } else {\n              debug(`Expected sender ${validSenders.map(s => `'${s}'`).join(' or ')} but found ${sender}`)\n            }\n          }\n          convosBotium.push(new Convo(this.context, {\n            header: {\n              name: convo.content\n            },\n            conversation\n          }))\n        }\n        if (scriptType === Constants.SCRIPTING_TYPE_CONVO) {\n          this.context.AddConvos(convosBotium)\n        } else if (scriptType === Constants.SCRIPTING_TYPE_PCONVO) {\n          this.context.AddPartialConvos(convosBotium)\n        }\n      } else if (convosOrUtterances.content === 'Utterances' && scriptType === Constants.SCRIPTING_TYPE_UTTERANCES) {\n        const utterancesBotium = []\n        for (const utteranceStruct of convosOrUtterances.children) {\n          utterancesBotium.push(new Utterance({ name: utteranceStruct.content, utterances: utteranceStruct.children.map(child => `${child.content}`) }))\n        }\n        this.context.AddUtterances(utterancesBotium)\n      }\n    }\n  }\n}\n","const LogicHookUtils = require('./logichook/LogicHookUtils')\nconst util = require('util')\nconst crypto = require('crypto')\nconst fs = require('fs')\nconst path = require('path')\nconst globby = require('globby')\nconst _ = require('lodash')\nconst randomize = require('randomatic')\nconst promiseRetry = require('promise-retry')\nrequire('promise.allsettled').shim()\nconst debug = require('debug')('botium-core-ScriptingProvider')\n\nconst Constants = require('./Constants')\nconst Capabilities = require('../Capabilities')\nconst Defaults = require('../Defaults')\nconst { Convo, ConvoStep } = require('./Convo')\nconst ScriptingMemory = require('./ScriptingMemory')\nconst { BotiumError, botiumErrorFromList, botiumErrorFromErr } = require('./BotiumError')\nconst RetryHelper = require('../helpers/RetryHelper')\nconst { getMatchFunction } = require('./MatchFunctions')\nconst precompilers = require('./precompilers')\n\nconst globPattern = '**/+(*.convo.txt|*.utterances.txt|*.pconvo.txt|*.scriptingmemory.txt|*.xlsx|*.xlsm|*.convo.csv|*.pconvo.csv|*.yaml|*.yml|*.json|*.md|*.markdown)'\nconst skipPattern = /^skip[.\\-_]/i\n\nconst p = (retryHelper, fn) => {\n  const promise = () => new Promise((resolve, reject) => {\n    try {\n      resolve(fn())\n    } catch (err) {\n      reject(err)\n    }\n  })\n\n  if (retryHelper) {\n    return promiseRetry((retry, number) => {\n      return promise().catch(err => {\n        if (retryHelper.shouldRetry(err)) {\n          debug(`Asserter trial #${number} failed, retry activated`)\n          retry(err)\n        } else {\n          throw err\n        }\n      })\n    }, retryHelper.retrySettings)\n  } else {\n    return promise()\n  }\n}\n\nconst pnot = (retryHelper, fn, errTemplate) => {\n  const promise = () => new Promise(async (resolve, reject) => { // eslint-disable-line no-async-promise-executor\n    try {\n      await fn()\n      reject(errTemplate)\n    } catch (err) {\n      resolve()\n    }\n  })\n\n  if (retryHelper) {\n    return promiseRetry((retry, number) => {\n      return promise().catch(() => {\n        if (retryHelper.shouldRetry(errTemplate)) {\n          debug(`Asserter trial #${number} failed, !retry activated`)\n          retry(errTemplate)\n        } else {\n          throw errTemplate\n        }\n      })\n    }, retryHelper.retrySettings)\n  } else {\n    return promise()\n  }\n}\n\nmodule.exports = class ScriptingProvider {\n  constructor (caps) {\n    this.caps = caps || _.cloneDeep(Defaults.Capabilities)\n    this.compilers = {}\n    this.convos = []\n    this.utterances = {}\n    this.matchFn = null\n    this.asserters = {}\n    this.globalAsserter = {}\n    this.logicHooks = {}\n    this.globalLogicHook = {}\n    this.userInputs = {}\n    this.partialConvos = {}\n    this.scriptingMemories = []\n\n    this.scriptingEvents = {\n      onConvoBegin: ({ convo, convoStep, scriptingMemory, ...rest }) => {\n        return this._createLogicHookPromises({ hookType: 'onConvoBegin', logicHooks: (convo.beginLogicHook || []), convo, convoStep, scriptingMemory, ...rest })\n      },\n      onConvoEnd: ({ convo, convoStep, scriptingMemory, ...rest }) => {\n        return this._createLogicHookPromises({ hookType: 'onConvoEnd', logicHooks: (convo.endLogicHook || []), convo, convoStep, scriptingMemory, ...rest })\n      },\n      onMeStart: ({ convo, convoStep, scriptingMemory, ...rest }) => {\n        return this._createLogicHookPromises({ hookType: 'onMeStart', logicHooks: (convoStep.logicHooks || []), convo, convoStep, scriptingMemory, ...rest })\n      },\n      onMePrepare: ({ convo, convoStep, scriptingMemory, ...rest }) => {\n        return this._createLogicHookPromises({ hookType: 'onMePrepare', logicHooks: (convoStep.logicHooks || []), convo, convoStep, scriptingMemory, ...rest })\n      },\n      onMeEnd: ({ convo, convoStep, scriptingMemory, ...rest }) => {\n        return this._createLogicHookPromises({ hookType: 'onMeEnd', logicHooks: (convoStep.logicHooks || []), convo, convoStep, scriptingMemory, ...rest })\n      },\n      onBotStart: ({ convo, convoStep, scriptingMemory, ...rest }) => {\n        return this._createLogicHookPromises({ hookType: 'onBotStart', logicHooks: (convoStep.logicHooks || []), convo, convoStep, scriptingMemory, ...rest })\n      },\n      onBotPrepare: ({ convo, convoStep, scriptingMemory, ...rest }) => {\n        return this._createLogicHookPromises({ hookType: 'onBotPrepare', logicHooks: (convoStep.logicHooks || []), convo, convoStep, scriptingMemory, ...rest })\n      },\n      onBotEnd: ({ convo, convoStep, scriptingMemory, ...rest }) => {\n        return this._createLogicHookPromises({ hookType: 'onBotEnd', logicHooks: (convoStep.logicHooks || []), convo, convoStep, scriptingMemory, ...rest })\n      },\n      assertConvoBegin: ({ convo, convoStep, scriptingMemory, ...rest }) => {\n        return this._createAsserterPromises({ asserterType: 'assertConvoBegin', asserters: (convo.beginAsserter || []), convo, convoStep, scriptingMemory, ...rest })\n      },\n      assertConvoStep: ({ convo, convoStep, scriptingMemory, ...rest }) => {\n        return this._createAsserterPromises({ asserterType: 'assertConvoStep', asserters: (convoStep.asserters || []), convo, convoStep, scriptingMemory, ...rest })\n      },\n      assertConvoEnd: ({ convo, convoStep, scriptingMemory, ...rest }) => {\n        return this._createAsserterPromises({ asserterType: 'assertConvoEnd', asserters: (convo.endAsserter || []), convo, convoStep, scriptingMemory, ...rest })\n      },\n      setUserInput: ({ convo, convoStep, scriptingMemory, ...rest }) => {\n        return this._createUserInputPromises({ convo, convoStep, scriptingMemory, ...rest })\n      },\n      resolveUtterance: ({ utterance, resolveEmptyIfUnknown }) => {\n        return this._resolveUtterance({ utterance, resolveEmptyIfUnknown })\n      },\n      assertBotResponse: (botresponse, tomatch, stepTag, meMsg) => {\n        if (!_.isArray(tomatch)) {\n          tomatch = [tomatch]\n        }\n        debug(`assertBotResponse ${stepTag} ${meMsg ? `(${meMsg}) ` : ''}BOT: ${botresponse} = ${tomatch} ...`)\n        const found = _.find(tomatch, (utt) => this.matchFn(botresponse, utt))\n        if (_.isNil(found)) {\n          let message = `${stepTag}: Bot response `\n          message += meMsg ? `(on ${meMsg}) ` : ''\n          message += botresponse ? ('\"' + botresponse + '\"') : '<no response>'\n          message += ' expected to match '\n          message += tomatch && tomatch.length > 1 ? 'one of ' : ''\n          message += `${tomatch.map(e => e ? '\"' + e + '\"' : '<any response>').join(', ')}`\n          throw new BotiumError(\n            message,\n            {\n              type: 'asserter',\n              source: 'TextMatchAsserter',\n              context: {\n                stepTag\n              },\n              cause: {\n                expected: tomatch,\n                actual: botresponse,\n                matchingMode: this.caps[Capabilities.SCRIPTING_MATCHING_MODE]\n              }\n            }\n          )\n        }\n      },\n      assertBotNotResponse: (botresponse, nottomatch, stepTag, meMsg) => {\n        if (!_.isArray(nottomatch)) {\n          nottomatch = [nottomatch]\n        }\n        debug(`assertBotNotResponse ${stepTag} ${meMsg ? `(${meMsg}) ` : ''}BOT: ${botresponse} != ${nottomatch} ...`)\n        const found = _.find(nottomatch, (utt) => this.matchFn(botresponse, utt))\n        if (!_.isNil(found)) {\n          let message = `${stepTag}: Bot response `\n          message += meMsg ? `(on ${meMsg}) ` : ''\n          message += botresponse ? ('\"' + botresponse + '\"') : '<no response>'\n          message += ' expected NOT to match '\n          message += nottomatch && nottomatch.length > 1 ? 'one of ' : ''\n          message += `${nottomatch.map(e => e ? '\"' + e + '\"' : '<any response>').join(', ')}`\n          throw new BotiumError(\n            message,\n            {\n              type: 'asserter',\n              source: 'TextMatchAsserter',\n              context: {\n                stepTag\n              },\n              cause: {\n                not: true,\n                expected: nottomatch,\n                actual: botresponse,\n                matchingMode: this.caps[Capabilities.SCRIPTING_MATCHING_MODE]\n              }\n            }\n          )\n        }\n      },\n      fail: null\n    }\n    this.retryHelperAsserter = new RetryHelper(this.caps, 'ASSERTER')\n    this.retryHelperLogicHook = new RetryHelper(this.caps, 'LOGICHOOK')\n    this.retryHelperUserInput = new RetryHelper(this.caps, 'USERINPUT')\n  }\n\n  _createAsserterPromises ({ asserterType, asserters, convo, convoStep, scriptingMemory, ...rest }) {\n    if (!this._isValidAsserterType(asserterType)) {\n      throw Error(`Unknown asserterType ${asserterType}`)\n    }\n\n    const mapNot = {\n      assertConvoBegin: 'assertNotConvoBegin',\n      assertConvoStep: 'assertNotConvoStep',\n      assertConvoEnd: 'assertNotConvoEnd'\n    }\n    const callAsserter = (asserterSpec, asserter, params) => {\n      if (asserterSpec.not) {\n        const notAsserterType = mapNot[asserterType]\n        if (asserter[notAsserterType]) {\n          return p(this.retryHelperAsserter, () => asserter[notAsserterType](params))\n        } else {\n          return pnot(this.retryHelperAsserter, () => asserter[asserterType](params),\n            new BotiumError(\n              `${convoStep.stepTag}: Expected asserter ${asserter.name || asserterSpec.name} with args \"${params.args}\" to fail`,\n              {\n                type: 'asserter',\n                source: asserter.name || asserterSpec.name,\n                params: {\n                  args: params.args\n                },\n                cause: {\n                  not: true,\n                  expected: 'failed',\n                  actual: 'not failed'\n                }\n              }\n            )\n          )\n        }\n      } else {\n        return p(this.retryHelperAsserter, () => asserter[asserterType](params))\n      }\n    }\n\n    const convoAsserter = asserters\n      .filter(a => this.asserters[a.name][asserterType])\n      .map(a => callAsserter(a, this.asserters[a.name], {\n        convo,\n        convoStep,\n        scriptingMemory,\n        args: ScriptingMemory.applyToArgs(a.args, scriptingMemory, this.caps, rest.botMsg),\n        isGlobal: false,\n        ...rest\n      }))\n    const globalAsserter = Object.values(this.globalAsserter)\n      .filter(a => a[asserterType])\n      .map(a => p(this.retryHelperAsserter, () => a[asserterType]({ convo, convoStep, scriptingMemory, args: [], isGlobal: true, ...rest })))\n\n    const allPromises = [...convoAsserter, ...globalAsserter]\n    if (this.caps[Capabilities.SCRIPTING_ENABLE_MULTIPLE_ASSERT_ERRORS]) {\n      return Promise.allSettled(allPromises).then((results) => {\n        const rejected = results.filter(result => result.status === 'rejected').map(result => result.reason)\n        if (rejected.length) {\n          throw botiumErrorFromList(rejected, {})\n        }\n        return results.filter(result => result.status === 'fulfilled').map(result => result.value)\n      })\n    }\n    if (allPromises.length > 0) return Promise.all(allPromises).then(() => true)\n    return Promise.resolve(false)\n  }\n\n  _createLogicHookPromises ({ hookType, logicHooks, convo, convoStep, scriptingMemory, ...rest }) {\n    if (hookType !== 'onMeStart' && hookType !== 'onMePrepare' && hookType !== 'onMeEnd' && hookType !== 'onBotStart' && hookType !== 'onBotPrepare' && hookType !== 'onBotEnd' &&\n      hookType !== 'onConvoBegin' && hookType !== 'onConvoEnd'\n    ) {\n      throw Error(`Unknown hookType ${hookType}`)\n    }\n\n    const convoStepPromises = (logicHooks || [])\n      .filter(l => this.logicHooks[l.name][hookType])\n      .map(l => p(this.retryHelperLogicHook, () => this.logicHooks[l.name][hookType]({\n        convo,\n        convoStep,\n        scriptingMemory,\n        args: ScriptingMemory.applyToArgs(l.args, scriptingMemory, this.caps, rest.botMsg),\n        isGlobal: false,\n        ...rest\n      })))\n\n    const globalPromises = Object.values(this.globalLogicHook)\n      .filter(l => l[hookType])\n      .map(l => p(this.retryHelperLogicHook, () => l[hookType]({ convo, convoStep, scriptingMemory, args: [], isGlobal: true, ...rest })))\n\n    const allPromises = [...convoStepPromises, ...globalPromises]\n    if (allPromises.length > 0) return Promise.all(allPromises).then(() => true)\n    return Promise.resolve(false)\n  }\n\n  _createUserInputPromises ({ convo, convoStep, scriptingMemory, ...rest }) {\n    const convoStepPromises = (convoStep.userInputs || [])\n      .filter(ui => this.userInputs[ui.name])\n      .map(ui => p(this.retryHelperUserInput, () => this.userInputs[ui.name].setUserInput({\n        convo,\n        convoStep,\n        scriptingMemory,\n        args: ScriptingMemory.applyToArgs(ui.args, scriptingMemory, this.caps, rest.meMsg),\n        ...rest\n      })))\n\n    if (convoStepPromises.length > 0) return Promise.all(convoStepPromises).then(() => true)\n    return Promise.resolve(false)\n  }\n\n  _isValidAsserterType (asserterType) {\n    return ['assertConvoBegin', 'assertConvoStep', 'assertConvoEnd'].some(t => asserterType === t)\n  }\n\n  _resolveUtterance ({ utterance, resolveEmptyIfUnknown = false }) {\n    if (_.isString(utterance)) {\n      if (this.utterances[utterance]) {\n        return this.utterances[utterance].utterances\n      } else {\n        const parts = utterance.split(' ')\n        if (this.utterances[parts[0]]) {\n          const uttArgs = parts.slice(1)\n          return this.utterances[parts[0]].utterances.map(utt => util.format(utt, ...uttArgs))\n        }\n      }\n    }\n    if (resolveEmptyIfUnknown) return null\n    else return [utterance]\n  }\n\n  _buildScriptContext () {\n    return {\n      AddConvos: this.AddConvos.bind(this),\n      AddUtterances: this.AddUtterances.bind(this),\n      AddPartialConvos: this.AddPartialConvos.bind(this),\n      AddScriptingMemories: this.AddScriptingMemories.bind(this),\n      Match: this.Match.bind(this),\n      IsAsserterValid: this.IsAsserterValid.bind(this),\n      IsLogicHookValid: this.IsLogicHookValid.bind(this),\n      IsUserInputValid: this.IsUserInputValid.bind(this),\n      GetPartialConvos: this.GetPartialConvos.bind(this),\n      scriptingEvents: {\n        assertConvoBegin: this.scriptingEvents.assertConvoBegin.bind(this),\n        assertConvoStep: this.scriptingEvents.assertConvoStep.bind(this),\n        assertConvoEnd: this.scriptingEvents.assertConvoEnd.bind(this),\n        resolveUtterance: this.scriptingEvents.resolveUtterance.bind(this),\n        assertBotResponse: this.scriptingEvents.assertBotResponse.bind(this),\n        assertBotNotResponse: this.scriptingEvents.assertBotNotResponse.bind(this),\n        onConvoBegin: this.scriptingEvents.onConvoBegin.bind(this),\n        onConvoEnd: this.scriptingEvents.onConvoEnd.bind(this),\n        onMeStart: this.scriptingEvents.onMeStart.bind(this),\n        onMePrepare: this.scriptingEvents.onMePrepare.bind(this),\n        onMeEnd: this.scriptingEvents.onMeEnd.bind(this),\n        onBotStart: this.scriptingEvents.onBotStart.bind(this),\n        onBotPrepare: this.scriptingEvents.onBotPrepare.bind(this),\n        onBotEnd: this.scriptingEvents.onBotEnd.bind(this),\n        setUserInput: this.scriptingEvents.setUserInput.bind(this),\n        fail: this.scriptingEvents.fail && this.scriptingEvents.fail.bind(this)\n      }\n    }\n  }\n\n  Build () {\n    const CompilerXlsx = require('./CompilerXlsx')\n    this.compilers[Constants.SCRIPTING_FORMAT_XSLX] = new CompilerXlsx(this._buildScriptContext(), this.caps)\n    this.compilers[Constants.SCRIPTING_FORMAT_XSLX].Validate()\n    const CompilerTxt = require('./CompilerTxt')\n    this.compilers[Constants.SCRIPTING_FORMAT_TXT] = new CompilerTxt(this._buildScriptContext(), this.caps)\n    this.compilers[Constants.SCRIPTING_FORMAT_TXT].Validate()\n    const CompilerCsv = require('./CompilerCsv')\n    this.compilers[Constants.SCRIPTING_FORMAT_CSV] = new CompilerCsv(this._buildScriptContext(), this.caps)\n    this.compilers[Constants.SCRIPTING_FORMAT_CSV].Validate()\n    const CompilerYaml = require('./CompilerYaml')\n    this.compilers[Constants.SCRIPTING_FORMAT_YAML] = new CompilerYaml(this._buildScriptContext(), this.caps)\n    this.compilers[Constants.SCRIPTING_FORMAT_YAML].Validate()\n    const CompilerJson = require('./CompilerJson')\n    this.compilers[Constants.SCRIPTING_FORMAT_JSON] = new CompilerJson(this._buildScriptContext(), this.caps)\n    this.compilers[Constants.SCRIPTING_FORMAT_JSON].Validate()\n    const CompilerMarkdown = require('./CompilerMarkdown')\n    this.compilers[Constants.SCRIPTING_FORMAT_MARKDOWN] = new CompilerMarkdown(this._buildScriptContext(), this.caps)\n    this.compilers[Constants.SCRIPTING_FORMAT_MARKDOWN].Validate()\n\n    this.matchFn = getMatchFunction(this.caps[Capabilities.SCRIPTING_MATCHING_MODE])\n\n    const logicHookUtils = new LogicHookUtils({ buildScriptContext: this._buildScriptContext(), caps: this.caps })\n    this.asserters = logicHookUtils.asserters\n    this.globalAsserter = logicHookUtils.getGlobalAsserter()\n    this.logicHooks = logicHookUtils.logicHooks\n    this.globalLogicHook = logicHookUtils.getGlobalLogicHook()\n    this.userInputs = logicHookUtils.userInputs\n  }\n\n  IsAsserterValid (name) {\n    return this.asserters[name] || false\n  }\n\n  IsLogicHookValid (name) {\n    return this.logicHooks[name] || false\n  }\n\n  IsUserInputValid (name) {\n    return this.userInputs[name] || false\n  }\n\n  Match (botresponse, utterance) {\n    return this.matchFn(botresponse, utterance)\n  }\n\n  Compile (scriptBuffer, scriptFormat, scriptType) {\n    const compiler = this.GetCompiler(scriptFormat)\n    return compiler.Compile(scriptBuffer, scriptType)\n  }\n\n  Decompile (convos, scriptFormat) {\n    const compiler = this.GetCompiler(scriptFormat)\n    return compiler.Decompile(convos)\n  }\n\n  GetCompiler (scriptFormat) {\n    const result = this.compilers[scriptFormat]\n    if (result) return result\n    throw new Error(`No compiler found for scriptFormat ${scriptFormat}`)\n  }\n\n  ReadBotiumFilesFromDirectory (convoDir, globFilter) {\n    const filelist = globby.sync(globPattern, { cwd: convoDir, gitignore: true })\n    if (globFilter) {\n      const filelistGlobbed = globby.sync(globFilter, { cwd: convoDir, gitignore: true })\n      _.remove(filelist, (file) => filelistGlobbed.indexOf(file) < 0)\n    }\n    _.remove(filelist, (file) => {\n      const isSkip = skipPattern.test(path.basename(file))\n      if (isSkip) debug(`ReadBotiumFilesFromDirectory - skipping file '${file}'`)\n      return isSkip\n    })\n    return filelist\n  }\n\n  ReadScriptsFromDirectory (convoDir, globFilter) {\n    let filelist = []\n\n    const convoDirStats = fs.statSync(convoDir)\n    if (convoDirStats.isFile()) {\n      filelist = [path.basename(convoDir)]\n      convoDir = path.dirname(convoDir)\n    } else {\n      filelist = this.ReadBotiumFilesFromDirectory(convoDir, globFilter)\n    }\n    debug(`ReadConvosFromDirectory(${convoDir}) found filenames: ${filelist}`)\n\n    const dirConvos = []\n    const dirUtterances = []\n    const dirPartialConvos = []\n    const dirScriptingMemories = []\n    filelist.forEach((filename) => {\n      const { convos, utterances, pconvos, scriptingMemories } = this.ReadScript(convoDir, filename)\n      if (convos) dirConvos.push(...convos)\n      if (utterances) dirUtterances.push(...utterances)\n      if (pconvos) dirPartialConvos.push(...pconvos)\n      if (scriptingMemories) dirScriptingMemories.push(...scriptingMemories)\n    })\n    debug(`ReadConvosFromDirectory(${convoDir}) found convos:\\n ${dirConvos.length ? dirConvos.join('\\n') : 'none'}`)\n    debug(`ReadConvosFromDirectory(${convoDir}) found utterances:\\n ${dirUtterances.length ? _.map(dirUtterances, (u) => u).join('\\n') : 'none'}`)\n    debug(`ReadConvosFromDirectory(${convoDir}) found partial convos:\\n ${dirPartialConvos.length ? dirPartialConvos.join('\\n') : 'none'}`)\n    debug(`ReadConvosFromDirectory(${convoDir}) scripting memories:\\n ${dirScriptingMemories.length ? dirScriptingMemories.map((dirScriptingMemory) => util.inspect(dirScriptingMemory)).join('\\n') : 'none'}`)\n    return { convos: dirConvos, utterances: dirUtterances, pconvos: dirPartialConvos, scriptingMemories: dirScriptingMemories }\n  }\n\n  ReadScriptFromBuffer (scriptBuffer, scriptingFormat, scriptingTypes = null) {\n    if (_.isString(scriptingTypes)) scriptingTypes = [scriptingTypes]\n    if (_.isArray(scriptingTypes) && scriptingTypes.length === 0) scriptingTypes = null\n\n    const result = {\n      convos: [],\n      utterances: [],\n      pconvos: [],\n      scriptingMemories: []\n    }\n    if (!scriptingTypes || scriptingTypes.includes(Constants.SCRIPTING_TYPE_UTTERANCES)) {\n      result.utterances = this.Compile(scriptBuffer, scriptingFormat, Constants.SCRIPTING_TYPE_UTTERANCES)\n    }\n    if (!scriptingTypes || scriptingTypes.includes(Constants.SCRIPTING_TYPE_PCONVO)) {\n      result.pconvos = this.Compile(scriptBuffer, scriptingFormat, Constants.SCRIPTING_TYPE_PCONVO)\n    }\n    if (!scriptingTypes || scriptingTypes.includes(Constants.SCRIPTING_TYPE_CONVO)) {\n      result.convos = this.Compile(scriptBuffer, scriptingFormat, Constants.SCRIPTING_TYPE_CONVO)\n    }\n    if (!scriptingTypes || scriptingTypes.includes(Constants.SCRIPTING_TYPE_SCRIPTING_MEMORY)) {\n      result.scriptingMemories = this.Compile(scriptBuffer, scriptingFormat, Constants.SCRIPTING_TYPE_SCRIPTING_MEMORY)\n    }\n    return result\n  }\n\n  ReadScript (convoDir, filename) {\n    let result = {}\n\n    try {\n      let scriptBuffer = fs.readFileSync(path.resolve(convoDir, filename))\n\n      const precompResponse = precompilers.execute(scriptBuffer, {\n        convoDir,\n        filename,\n        caps: this.caps\n      })\n      if (precompResponse) {\n        scriptBuffer = precompResponse.scriptBuffer\n        debug(`File ${filename} precompiled by ${precompResponse.precompiler}` +\n          (precompResponse.filename ? ` and filename changed to ${precompResponse.filename}` : '')\n        )\n        filename = precompResponse.filename || filename\n      }\n\n      if (filename.endsWith('.xlsx') || filename.endsWith('.xlsm')) {\n        result = this.ReadScriptFromBuffer(scriptBuffer, Constants.SCRIPTING_FORMAT_XSLX, [Constants.SCRIPTING_TYPE_UTTERANCES, Constants.SCRIPTING_TYPE_PCONVO, Constants.SCRIPTING_TYPE_CONVO, Constants.SCRIPTING_TYPE_SCRIPTING_MEMORY])\n      } else if (filename.endsWith('.convo.txt')) {\n        result = this.ReadScriptFromBuffer(scriptBuffer, Constants.SCRIPTING_FORMAT_TXT, Constants.SCRIPTING_TYPE_CONVO)\n      } else if (filename.endsWith('.pconvo.txt')) {\n        result = this.ReadScriptFromBuffer(scriptBuffer, Constants.SCRIPTING_FORMAT_TXT, Constants.SCRIPTING_TYPE_PCONVO)\n      } else if (filename.endsWith('.utterances.txt')) {\n        result = this.ReadScriptFromBuffer(scriptBuffer, Constants.SCRIPTING_FORMAT_TXT, Constants.SCRIPTING_TYPE_UTTERANCES)\n      } else if (filename.endsWith('.scriptingmemory.txt')) {\n        result = this.ReadScriptFromBuffer(scriptBuffer, Constants.SCRIPTING_FORMAT_TXT, Constants.SCRIPTING_TYPE_SCRIPTING_MEMORY)\n      } else if (filename.endsWith('.convo.csv')) {\n        result = this.ReadScriptFromBuffer(scriptBuffer, Constants.SCRIPTING_FORMAT_CSV, Constants.SCRIPTING_TYPE_CONVO)\n      } else if (filename.endsWith('.pconvo.csv')) {\n        result = this.ReadScriptFromBuffer(scriptBuffer, Constants.SCRIPTING_FORMAT_CSV, Constants.SCRIPTING_TYPE_PCONVO)\n      } else if (filename.endsWith('.yaml') || filename.endsWith('.yml')) {\n        result = this.ReadScriptFromBuffer(scriptBuffer, Constants.SCRIPTING_FORMAT_YAML, [Constants.SCRIPTING_TYPE_UTTERANCES, Constants.SCRIPTING_TYPE_PCONVO, Constants.SCRIPTING_TYPE_CONVO, Constants.SCRIPTING_TYPE_SCRIPTING_MEMORY])\n      } else if (filename.endsWith('.json')) {\n        result = this.ReadScriptFromBuffer(scriptBuffer, Constants.SCRIPTING_FORMAT_JSON, [Constants.SCRIPTING_TYPE_UTTERANCES, Constants.SCRIPTING_TYPE_PCONVO, Constants.SCRIPTING_TYPE_CONVO, Constants.SCRIPTING_TYPE_SCRIPTING_MEMORY])\n      } else if (filename.endsWith('.markdown') || filename.endsWith('.md')) {\n        result = this.ReadScriptFromBuffer(scriptBuffer, Constants.SCRIPTING_FORMAT_MARKDOWN, [Constants.SCRIPTING_TYPE_UTTERANCES, Constants.SCRIPTING_TYPE_PCONVO, Constants.SCRIPTING_TYPE_CONVO])\n      } else {\n        debug(`ReadScript - dropped file: ${filename}, filename not supported`)\n      }\n    } catch (err) {\n      debug(`ReadScript - an error occurred at '${filename}' file: ${err}`)\n      throw botiumErrorFromErr(`ReadScript - an error occurred at '${filename}' file: ${err.message}`, err)\n    }\n\n    // Compilers saved the convos, and we alter here the saved version too\n    if (result.convos && result.convos.length > 0) {\n      result.convos.forEach((fileConvo) => {\n        fileConvo.sourceTag = { convoDir, filename }\n        if (!fileConvo.header.name) {\n          fileConvo.header.name = filename\n        }\n      })\n      const isSkip = (c) => c.header.name && skipPattern.test(c.header.name.toLowerCase())\n      result.convos.filter(c => isSkip(c)).forEach(c => debug(`ReadScript - skipping convo '${c.header.name}'`))\n      result.convos = result.convos.filter(c => !isSkip(c))\n    }\n    if (result.pconvos && result.pconvos.length > 0) {\n      result.pconvos.forEach((filePartialConvo) => {\n        filePartialConvo.sourceTag = { convoDir, filename }\n        if (!filePartialConvo.header.name) {\n          filePartialConvo.header.name = filename\n        }\n      })\n    }\n    if (result.scriptingMemories && result.scriptingMemories.length > 0) {\n      result.scriptingMemories.forEach((scriptingMemory) => {\n        scriptingMemory.sourceTag = { filename }\n      })\n    }\n    if (result.utterances) {\n      result.utterances = this._tagAndCleanupUtterances(result.utterances, convoDir, filename)\n    }\n    return { convos: result.convos || [], utterances: result.utterances || [], pconvos: result.pconvos || [], scriptingMemories: result.scriptingMemories || [] }\n  }\n\n  _tagAndCleanupUtterances (utteranceFiles, convoDir, filename) {\n    return utteranceFiles.map((fileUtt) => {\n      fileUtt.sourceTag = { convoDir, filename }\n      fileUtt.utterances = fileUtt.utterances.filter(u => u)\n      return fileUtt\n    })\n  }\n\n  ExpandScriptingMemoryToConvos () {\n    if (!this.caps[Capabilities.SCRIPTING_ENABLE_MEMORY]) {\n      debug('ExpandScriptingMemoryToConvos - Scripting memory turned off, no convos expanded')\n      return\n    }\n\n    // validating scripting memory without name\n    const aggregatedNoNames = this.scriptingMemories.filter((entry) => {\n      return !entry.header.name\n    })\n    if (aggregatedNoNames.length) {\n      throw new BotiumError(\n        'Scripting Memory Definition(s) without name',\n        {\n          type: 'Scripting Memory',\n          subtype: 'Scripting Memory without name',\n          source: 'ScriptingProvider',\n          cause: {\n            aggregatedNoNames\n          }\n        }\n      )\n    }\n\n    // validating scripting memory without variable\n    const aggregatedNoVariables = this.scriptingMemories.filter((entry) => {\n      return !entry.values || !Object.keys(entry.values).length\n    })\n    if (aggregatedNoVariables.length) {\n      throw new BotiumError(\n        `Scripting Memory Definition(s) ${aggregatedNoVariables.map(e => e.header.name).join(', ')} without variable`,\n        {\n          type: 'Scripting Memory',\n          subtype: 'Scripting Memory without variable',\n          source: 'ScriptingProvider',\n          cause: {\n            aggregatedNoVariables\n          }\n        }\n      )\n    }\n\n    // validating scripting memory without variable name\n    const aggregatedNoVariableNames = this.scriptingMemories.filter((entry) => {\n      return !_.isUndefined(entry.values[''])\n    })\n    if (aggregatedNoVariableNames.length) {\n      throw new BotiumError(\n        `Scripting Memory Definition(s) ${aggregatedNoVariableNames.map(e => e.header.name).join(', ')} without variable name`,\n        {\n          type: 'Scripting Memory',\n          subtype: 'Scripting Memory without variable name',\n          source: 'ScriptingProvider',\n          cause: {\n            aggregatedNoVariableNames\n          }\n        }\n      )\n    }\n\n    // validating scripting memory name collision\n    const aggregatedDuplicates = []\n    for (let i = 0; i < (this.scriptingMemories || []).length; i++) {\n      const scriptingMemory = this.scriptingMemories[i]\n      const duplicate = this.scriptingMemories.filter((entry, j) => {\n        if (j === i || !(entry.values && scriptingMemory.values && entry.header && scriptingMemory.header)) {\n          return false\n        }\n        return (entry.header.name === scriptingMemory.header.name) && (JSON.stringify(Object.keys(entry.values)) === JSON.stringify(Object.keys(scriptingMemory.values)))\n      })\n      if (duplicate.length) {\n        aggregatedDuplicates.push({ scriptingMemory, duplicate })\n      }\n    }\n    if (aggregatedDuplicates.length) {\n      throw new BotiumError(\n        `Scripting Memory Definition name(s) \"${_.uniq(aggregatedDuplicates.map(d => d.scriptingMemory.header.name)).join(', ')}\" are not unique`,\n        {\n          type: 'Scripting Memory',\n          subtype: 'Scripting Memory name collision',\n          source: 'ScriptingProvider',\n          cause: {\n            aggregatedDuplicates\n          }\n        }\n      )\n    }\n\n    // validating scripting memory variable name collision\n    const aggregatedIntersections = []\n    for (let i = 0; i < (this.scriptingMemories || []).length; i++) {\n      const scriptingMemory = this.scriptingMemories[i]\n      const intersection = this.scriptingMemories.filter((entry, j) => {\n        if (j === i || !(entry.values && scriptingMemory.values && entry.header && scriptingMemory.header)) {\n          return false\n        }\n        const k1 = Object.keys(entry.values)\n        const k2 = Object.keys(scriptingMemory.values)\n        const kInt = _.intersection(k1, k2)\n        return kInt.length && (kInt.length !== k1.length || kInt.length !== k2.length)\n      })\n      if (intersection.length) {\n        aggregatedIntersections.push({ scriptingMemory, intersection })\n      }\n    }\n    if (aggregatedIntersections.length) {\n      throw new BotiumError(\n        `Scripting Memory Definitions \"${aggregatedIntersections.map(i => i.scriptingMemory.header.name).join(', ')}\" are invalid because variable name collision\"`,\n        {\n          type: 'Scripting Memory',\n          subtype: 'Scripting Memory variable name collision',\n          source: 'ScriptingProvider',\n          cause: {\n            aggregatedIntersections\n          }\n        }\n      )\n    }\n\n    const variablesToScriptingMemory = new Map()\n    this.scriptingMemories.forEach((scriptingMemory) => {\n      const key = JSON.stringify(Object.keys(scriptingMemory.values).sort())\n      if (variablesToScriptingMemory.has(key)) {\n        variablesToScriptingMemory.get(key).push(scriptingMemory)\n      } else {\n        variablesToScriptingMemory.set(key, [scriptingMemory])\n      }\n    })\n\n    let convosExpandedAll = []\n    const convosOriginalAll = []\n    this.convos.forEach((convo) => {\n      const convoVariables = convo.GetScriptingMemoryAllVariables(this)\n      debug(`ExpandScriptingMemoryToConvos - Convo \"${convo.header.name}\" - Variables to replace, all: \"${util.inspect(convoVariables)}\"`)\n      if (!convoVariables.length) {\n        debug(`ExpandScriptingMemoryToConvos - Convo \"${convo.header.name}\" - skipped, no variable found to replace`)\n      }\n\n      let convosToExpand = [convo]\n      let convosExpandedConvo = []\n      // just for debug output. If we got 6 expanded convo, then this array can be for example [2, 3]\n      const multipliers = []\n      for (const [key, scriptingMemories] of variablesToScriptingMemory.entries()) {\n        const variableNames = JSON.parse(key)\n        if (_.intersection(variableNames, convoVariables).length) {\n          const convosExpandedVariable = []\n          multipliers.push(scriptingMemories.length)\n          scriptingMemories.forEach((scriptingMemory) => {\n            // Appending the case name to name\n            for (const convoToExpand of convosToExpand) {\n              const convoExpanded = _.cloneDeep(convoToExpand)\n              convoExpanded.header.name = convoToExpand.header.name + '.' + scriptingMemory.header.name\n              variableNames.forEach((name) => {\n                const value = scriptingMemory.values[name]\n                if (value) {\n                  convoExpanded.beginLogicHook.push({ name: 'SET_SCRIPTING_MEMORY', args: [name.substring(1), scriptingMemory.values[name]] })\n                } else {\n                  convoExpanded.beginLogicHook.push({ name: 'CLEAR_SCRIPTING_MEMORY', args: [name.substring(1)] })\n                }\n              })\n              convosExpandedVariable.push(convoExpanded)\n            }\n          })\n          // This is a bit tricky. If the loop is done, then convosExpandedConvo will be used,\n          // otherwise convosToExpand. They could be one variable\n          convosToExpand = convosExpandedVariable\n          convosExpandedConvo = convosExpandedVariable\n        } else {\n          debug(`ExpandScriptingMemoryToConvos - Convo \"${convo.header.name}\" - Scripting memory ${key} ignored because there is no common variable with convo ${util.inspect(convoVariables)}`)\n        }\n      }\n      debug(`ExpandScriptingMemoryToConvos - Convo \"${convo.header.name}\" - Expanding convo \"${convo.header.name}\" Expanded ${convosExpandedConvo.length} convo. (Details: ${convosExpandedConvo.length} = ${multipliers ? multipliers.join('*') : 0})`)\n\n      if (convosExpandedConvo.length) {\n        convosExpandedAll = convosExpandedAll.concat(convosExpandedConvo)\n        convosOriginalAll.push(convo)\n      }\n    })\n\n    if (this.caps[Capabilities.SCRIPTING_MEMORYEXPANSION_KEEP_ORIG] !== true) {\n      debug(`ExpandScriptingMemoryToConvos - Deleting ${convosOriginalAll.length} original convo`)\n      this.convos = this.convos.filter((convo) => convosOriginalAll.indexOf(convo) === -1)\n    }\n\n    debug(`ExpandScriptingMemoryToConvos - ${convosExpandedAll.length} convo expanded, added to convos (${this.convos.length}). Result ${convosExpandedAll.length + this.convos.length} convo`)\n    this.convos = this.convos.concat(convosExpandedAll)\n  }\n\n  ExpandUtterancesToConvos ({ useNameAsIntent, incomprehensionUtt } = {}) {\n    const expandedConvos = []\n\n    if (_.isUndefined(useNameAsIntent)) {\n      useNameAsIntent = !!this.caps[Capabilities.SCRIPTING_UTTEXPANSION_USENAMEASINTENT]\n    }\n    if (_.isUndefined(incomprehensionUtt)) {\n      incomprehensionUtt = this.caps[Capabilities.SCRIPTING_UTTEXPANSION_INCOMPREHENSION]\n    }\n\n    if (useNameAsIntent && incomprehensionUtt) {\n      throw new Error('ExpandUtterancesToConvos - SCRIPTING_UTTEXPANSION_USENAMEASINTENT and SCRIPTING_UTTEXPANSION_INCOMPREHENSION are incompatible')\n    }\n    if (incomprehensionUtt && !this.utterances[incomprehensionUtt]) {\n      throw new Error(`ExpandUtterancesToConvos - incomprehension utterance '${incomprehensionUtt}' undefined`)\n    }\n\n    if (useNameAsIntent) {\n      debug('ExpandUtterancesToConvos - Using utterance name as NLU intent')\n    } else if (incomprehensionUtt) {\n      debug(`ExpandUtterancesToConvos - Using incomprehension utterance expansion mode: ${incomprehensionUtt}`)\n    }\n\n    _.keys(this.utterances).filter(u => u !== incomprehensionUtt).forEach(uttName => {\n      const utt = this.utterances[uttName]\n      expandedConvos.push(new Convo(this._buildScriptContext(), {\n        header: {\n          name: utt.name,\n          description: `Expanded Utterances - ${utt.name}`\n        },\n        conversation: [\n          {\n            sender: 'me',\n            messageText: utt.name,\n            stepTag: 'Step 1 - tell utterance'\n          },\n          useNameAsIntent\n            ? {\n                sender: 'bot',\n                asserters: [\n                  {\n                    name: 'INTENT',\n                    args: [utt.name]\n                  }\n                ],\n                stepTag: 'Step 2 - check intent',\n                not: false\n              }\n            : incomprehensionUtt\n              ? {\n                  sender: 'bot',\n                  messageText: incomprehensionUtt,\n                  stepTag: 'Step 2 - check incomprehension',\n                  not: true\n                }\n              : {\n                  sender: 'bot',\n                  messageText: '',\n                  stepTag: 'Step 2 - check bot response',\n                  not: false\n                }\n        ],\n        sourceTag: Object.assign({}, utt.sourceTag, { origUttName: utt.name })\n      }))\n    })\n    this.convos = this.convos.concat(expandedConvos)\n    this._sortConvos()\n  }\n\n  ExpandConvos () {\n    const expandedConvos = []\n    debug(`ExpandConvos - Using utterances expansion mode: ${this.caps[Capabilities.SCRIPTING_UTTEXPANSION_MODE]}`)\n    this.convos.forEach((convo) => {\n      convo.expandPartialConvos()\n      this._expandConvo(expandedConvos, convo)\n    })\n    this.convos = expandedConvos\n    this._sortConvos()\n  }\n\n  /**\n   *\n   * @param expandedConvos\n   * @param currentConvo\n   * @param convoStepIndex\n   * @param convoStepsStack list of ConvoSteps\n   * @private\n   */\n  _expandConvo (expandedConvos, currentConvo, convoStepIndex = 0, convoStepsStack = []) {\n    const utterancePostfix = (lineTag, uttOrUserInput) => {\n      const naming = this.caps[Capabilities.SCRIPTING_UTTEXPANSION_NAMING_MODE] || Defaults.capabilities[Capabilities.SCRIPTING_UTTEXPANSION_NAMING_MODE]\n      if (naming === 'justLineTag') {\n        return `L${lineTag}`\n      }\n      const utteranceMax = this.caps[Capabilities.SCRIPTING_UTTEXPANSION_NAMING_UTTERANCE_MAX] || 0\n      let postfix\n      if (utteranceMax > 3 && uttOrUserInput.length > utteranceMax) {\n        postfix = uttOrUserInput.substring(0, utteranceMax - 3) + '...'\n      } else {\n        postfix = uttOrUserInput\n      }\n      return `L${lineTag}-${postfix}`\n    }\n    if (convoStepIndex < currentConvo.conversation.length) {\n      const currentStep = currentConvo.conversation[convoStepIndex]\n      if (currentStep.sender === 'bot' || currentStep.sender === 'begin' || currentStep.sender === 'end') {\n        const currentStepsStack = convoStepsStack.slice()\n        currentStepsStack.push(_.cloneDeep(currentStep))\n        this._expandConvo(expandedConvos, currentConvo, convoStepIndex + 1, currentStepsStack)\n      } else if (currentStep.sender === 'me') {\n        let useUnexpanded = true\n        if (currentStep.messageText) {\n          let uttName = null\n          let uttArgs = null\n          if (this.utterances[currentStep.messageText]) {\n            uttName = currentStep.messageText\n          } else {\n            const parts = currentStep.messageText.split(' ')\n            if (this.utterances[parts[0]]) {\n              uttName = parts[0]\n              uttArgs = parts.slice(1)\n            }\n          }\n          if (this.utterances[uttName]) {\n            const allutterances = this.utterances[uttName].utterances\n            let sampleutterances = allutterances\n            if (this.caps[Capabilities.SCRIPTING_UTTEXPANSION_MODE] === 'first') {\n              sampleutterances = [allutterances[0]]\n            } else if (this.caps[Capabilities.SCRIPTING_UTTEXPANSION_MODE] === 'random') {\n              sampleutterances = allutterances\n                .map(x => ({ x, r: Math.random() }))\n                .sort((a, b) => a.r - b.r)\n                .map(a => a.x)\n                .slice(0, this.caps[Capabilities.SCRIPTING_UTTEXPANSION_RANDOM_COUNT])\n            }\n            sampleutterances.forEach((utt, index) => {\n              const lineTag = `${index + 1}`.padStart(`${sampleutterances.length}`.length, '0')\n              const currentStepsStack = convoStepsStack.slice()\n              if (uttArgs) {\n                utt = util.format(utt, ...uttArgs)\n              }\n              currentStepsStack.push(Object.assign(_.cloneDeep(currentStep), { messageText: utt }))\n              const currentConvoLabeled = _.cloneDeep(currentConvo)\n              Object.assign(currentConvoLabeled.header, { name: `${currentConvo.header.name}/${uttName}-${utterancePostfix(lineTag, utt)}` })\n              if (!currentConvoLabeled.sourceTag) currentConvoLabeled.sourceTag = {}\n              if (!currentConvoLabeled.sourceTag.origConvoName) currentConvoLabeled.sourceTag.origConvoName = currentConvo.header.name\n              this._expandConvo(expandedConvos, currentConvoLabeled, convoStepIndex + 1, currentStepsStack)\n            })\n            useUnexpanded = false\n          }\n        }\n        if (currentStep.userInputs && currentStep.userInputs.length > 0) {\n          currentStep.userInputs.forEach((ui, uiIndex) => {\n            const userInput = this.userInputs[ui.name]\n            if (userInput && userInput.expandConvo) {\n              const expandedUserInputs = userInput.expandConvo({ convo: currentConvo, convoStep: currentStep, args: ui.args })\n              if (expandedUserInputs && expandedUserInputs.length > 0) {\n                let sampleinputs = expandedUserInputs\n                if (this.caps[Capabilities.SCRIPTING_UTTEXPANSION_MODE] === 'first') {\n                  sampleinputs = [expandedUserInputs[0]]\n                } else if (this.caps[Capabilities.SCRIPTING_UTTEXPANSION_MODE] === 'random') {\n                  sampleinputs = expandedUserInputs\n                    .map(x => ({ x, r: Math.random() }))\n                    .sort((a, b) => a.r - b.r)\n                    .map(a => a.x)\n                    .slice(0, this.caps[Capabilities.SCRIPTING_UTTEXPANSION_RANDOM_COUNT])\n                }\n                sampleinputs.forEach((sampleinput, index) => {\n                  const lineTag = `${index + 1}`.padStart(`${sampleinputs.length}`.length, '0')\n                  const currentStepsStack = convoStepsStack.slice()\n                  const currentStepMod = _.cloneDeep(currentStep)\n                  currentStepMod.userInputs[uiIndex] = sampleinput\n\n                  currentStepsStack.push(currentStepMod)\n                  const currentConvoLabeled = _.cloneDeep(currentConvo)\n                  Object.assign(currentConvoLabeled.header, { name: `${currentConvo.header.name}/${ui.name}-${utterancePostfix(lineTag, (sampleinput.args && sampleinput.args.length) ? sampleinput.args.join(', ') : 'no-args')}` })\n                  this._expandConvo(expandedConvos, currentConvoLabeled, convoStepIndex + 1, currentStepsStack)\n                })\n                useUnexpanded = false\n              }\n            }\n          })\n        }\n        if (useUnexpanded) {\n          const currentStepsStack = convoStepsStack.slice()\n          currentStepsStack.push(_.cloneDeep(currentStep))\n          this._expandConvo(expandedConvos, currentConvo, convoStepIndex + 1, currentStepsStack)\n        }\n      }\n    } else {\n      expandedConvos.push(Object.assign(_.cloneDeep(currentConvo), { conversation: _.cloneDeep(convoStepsStack) }))\n    }\n  }\n\n  _sortConvos () {\n    this.convos = _.sortBy(this.convos, [(convo) => convo.header.sort || convo.header.name])\n    let i = 0\n    this.convos.forEach((convo) => {\n      convo.header.order = ++i\n      if (!convo.header.projectname) {\n        convo.header.projectname = this.caps[Capabilities.PROJECTNAME]\n      }\n      if (!convo.header.testsessionname) {\n        convo.header.testsessionname = this.caps[Capabilities.TESTSESSIONNAME]\n      }\n    })\n  }\n\n  AddConvos (convos) {\n    if (convos && _.isArray(convos)) {\n      this.convos = _.concat(this.convos, convos)\n    } else if (convos) {\n      this.convos.push(convos)\n    }\n    this._sortConvos()\n  }\n\n  AddUtterances (utterances) {\n    const findAmbiguous = (utterances) => {\n      const ambiguous = []\n      let expected = null\n      let base = null\n      if (utterances && utterances.length > 1) {\n        base = utterances[0]\n        expected = ScriptingMemory.extractVarNames(utterances[0]).sort()\n        const expectedString = JSON.stringify(expected)\n\n        for (let i = 1; i < utterances.length; i++) {\n          const actualString = JSON.stringify(ScriptingMemory.extractVarNames(utterances[i]).sort())\n\n          if (actualString !== expectedString) {\n            ambiguous.push(utterances[i])\n          }\n        }\n      }\n\n      return { expected, ambiguous, base }\n    }\n\n    if (utterances && !_.isArray(utterances)) {\n      utterances = [utterances]\n    }\n    if (utterances) {\n      _.forEach(utterances, (utt) => {\n        const eu = this.utterances[utt.name]\n        if (eu) {\n          eu.utterances = _.uniq(_.concat(eu.utterances, utt.utterances))\n        } else {\n          this.utterances[utt.name] = utt\n        }\n\n        const { ambiguous, expected } = findAmbiguous(this.utterances[utt.name].utterances)\n\n        if (ambiguous && ambiguous.length > 0) {\n          debug(`Ambigous utterance \"${utt.name}\", expecting exact ${expected.length ? ('\"' + expected.join(', ') + '\"') : '<none>'} scripting memory variables in following user examples: ${ambiguous.map(d => `\"${d}\"`).join(', ')}`)\n        }\n      })\n    }\n  }\n\n  AddPartialConvos (convos) {\n    if (convos && _.isArray(convos)) {\n      for (let i = 0; i < convos.length; i++) {\n        const convo = convos[i]\n        this.AddPartialConvos(convo)\n      }\n    } else if (convos) {\n      if (!convos.header || !convos.header.name) {\n        throw Error(`Header name is mandatory: ${JSON.stringify(convos.header)}`)\n      }\n      if (convos.header.name.indexOf('|') >= 0) {\n        throw Error(`Invalid partial convo name: ${convos.header.name}`)\n      }\n      const name = convos.header.name\n      if (this.partialConvos[name]) {\n        throw Error(`Duplicate partial convo: ${name}`)\n      }\n\n      this.partialConvos[name] = convos\n    }\n  }\n\n  GetPartialConvos () {\n    return this.partialConvos\n  }\n\n  AddScriptingMemories (scriptingMemories) {\n    if (scriptingMemories && _.isArray(scriptingMemories)) {\n      for (let i = 0; i < scriptingMemories.length; i++) {\n        const scriptingMemory = scriptingMemories[i]\n        this.AddScriptingMemories(scriptingMemory)\n      }\n    } else if (scriptingMemories) {\n      if (!scriptingMemories.header || !scriptingMemories.header.name) {\n        throw new BotiumError(\n          'Scripting Memory Definition has no name',\n          {\n            type: 'Compiler',\n            subtype: 'Scripting memory without name',\n            source: 'ScriptingProvider',\n            cause: {\n              scriptingMemory: scriptingMemories\n            }\n          }\n        )\n      }\n\n      if (!scriptingMemories.values || !Object.keys(scriptingMemories.values).length) {\n        throw new BotiumError(\n          'Scripting Memory Definition has no variables',\n          {\n            type: 'Compiler',\n            subtype: 'Scripting memory without variable',\n            source: 'ScriptingProvider',\n            cause: {\n              scriptingMemory: scriptingMemories\n            }\n          }\n        )\n      }\n\n      if (scriptingMemories.values && !_.isUndefined(scriptingMemories.values[''])) {\n        throw new BotiumError(\n          'Scripting Memory Definition variable has no name',\n          {\n            type: 'Compiler',\n            subtype: 'Scripting memory without variable name',\n            source: 'ScriptingProvider',\n            cause: {\n              scriptingMemory: scriptingMemories\n            }\n          }\n        )\n      }\n\n      this.scriptingMemories.push(scriptingMemories)\n    }\n  }\n\n  GetConversationFlowView ({\n    getConvoNodeHash = null, detectLoops = false, summarizeMultiSteps = true,\n    extPickMeNodeProps = [], extPickBotNodeProps = [], extPickMeHashProps = [], extPickBotHashProps = []\n  } = {}) {\n    const root = []\n    const botNodesByHash = {}\n    const pickMeNodeProps = ['index', 'sender', 'messageText', 'utteranceSamples', 'utteranceCount', 'logicHooks', 'userInputs', ...extPickMeNodeProps]\n    const pickBotNodeProps = ['index', 'sender', 'messageText', 'optional', 'not', 'utteranceSamples', 'utteranceCount', 'logicHooks', 'asserters', ...extPickBotNodeProps]\n    const pickMeHashProps = ['sender', 'messageText', 'logicHooks', 'userInputs', ...extPickMeHashProps]\n    const pickBotHashProps = ['sender', 'messageText', 'optional', 'not', 'logicHooks', 'asserters', ...extPickBotHashProps]\n\n    this.convos.forEach((convo) => {\n      const convoNodes = []\n      for (const [convoStepIndex, convoStep] of convo.conversation.entries()) {\n        if (convoStep.sender === 'begin' || convoStep.sender === 'end') continue\n        convoStep.index = convoStepIndex\n        if (convoStep.messageText) {\n          const utterances = this._resolveUtterance({ utterance: convoStep.messageText, resolveEmptyIfUnknown: true })\n          if (utterances) {\n            convoStep.utteranceSamples = utterances.slice(0, 3)\n            convoStep.utteranceCount = utterances.length\n          }\n        }\n\n        const lastConvoNode = convoNodes.length === 0 ? null : convoNodes[convoNodes.length - 1]\n        if (!lastConvoNode || !summarizeMultiSteps || convoNodes[convoNodes.length - 1].sender !== convoStep.sender) {\n          convoNodes.push({\n            sender: convoStep.sender,\n            convoSteps: [convoStep],\n            convoStepIndices: [convoStepIndex],\n            hash: null\n          })\n        } else {\n          lastConvoNode.convoSteps.push(convoStep)\n          lastConvoNode.convoStepIndices.push(convoStepIndex)\n        }\n      }\n\n      let currentChildren = root\n      for (const convoNode of convoNodes) {\n        const convoNodeValues = convoNode.sender === 'me'\n          ? convoNode.convoSteps.map(convoStep => _.pick(convoStep, pickMeNodeProps))\n          : convoNode.convoSteps.map(convoStep => _.pick(convoStep, pickBotNodeProps))\n        const convoNodeHeader = {\n          header: _.pick(convo.header, ['name', 'description']),\n          sourceTag: convo.sourceTag,\n          convoStepIndices: convoNode.convoStepIndices\n        }\n\n        let hash = getConvoNodeHash && getConvoNodeHash({ convo, convoNode })\n        if (!hash) {\n          if (convoNode.sender === 'bot') {\n            hash = crypto.createHash('md5').update(JSON.stringify(convoNode.convoSteps.map(convoStep => _.pick(convoStep, pickBotHashProps)))).digest('hex')\n          } else {\n            hash = crypto.createHash('md5').update(JSON.stringify(convoNode.convoSteps.map(convoStep => _.pick(convoStep, pickMeHashProps)))).digest('hex')\n          }\n        }\n\n        const existingChildNode = currentChildren.find(c => c.hash === hash)\n        if (existingChildNode) {\n          existingChildNode.convos.push(_.cloneDeep(convoNodeHeader))\n          currentChildren = existingChildNode.childNodes\n          continue\n        }\n\n        const existingBotNode = (detectLoops && convoNode.sender === 'bot' && botNodesByHash[hash])\n        if (existingBotNode) {\n          if (currentChildren.findIndex(c => c.ref === existingBotNode.key) < 0) {\n            currentChildren.push({\n              ref: existingBotNode.key\n            })\n          }\n          const existingConvo = existingBotNode.convos.find(c => c.header.name === convoNodeHeader.header.name)\n          if (existingConvo) {\n            existingConvo.convoStepIndices = [...existingConvo.convoStepIndices, ...convoNodeHeader.convoStepIndices]\n          } else {\n            existingBotNode.convos.push(_.cloneDeep(convoNodeHeader))\n          }\n          currentChildren = existingBotNode.childNodes\n          continue\n        }\n        const node = {\n          sender: convoNode.sender,\n          key: randomize('0', 20),\n          hash: hash,\n          convoNodes: convoNodeValues,\n          convos: [_.cloneDeep(convoNodeHeader)],\n          childNodes: []\n        }\n        if (node.sender === 'bot') {\n          botNodesByHash[hash] = node\n        }\n        currentChildren.push(node)\n        currentChildren = node.childNodes\n      }\n    })\n\n    return root\n  }\n\n  GetConversationFlowDot (args) {\n    const root = this.GetConversationFlowView(args)\n\n    const nodes = []\n    const lines = []\n\n    const walkTreeForNodes = (node) => {\n      nodes.push(`N_${node.hash} [label=\"${node.convoNodes.map(convoNode => (new ConvoStep(convoNode)).toString()).join('\\r\\n')}\"];`)\n      if (node.childNodes && node.childNodes.length > 0) {\n        node.childNodes.filter(c => !c.ref).forEach(c => walkTreeForNodes(c))\n      }\n    }\n    const walkTreeForLines = (node, path = []) => {\n      if (node.childNodes && node.childNodes.length > 0) {\n        node.childNodes.filter(c => !c.ref).forEach(c => walkTreeForLines(c, [...path, `N_${node.hash}`]))\n        node.childNodes.filter(c => c.ref).forEach(c => lines.push(`${[...path, `N_${node.hash}`, `N_${c.ref}`].join(' -> ')};`))\n      } else {\n        lines.push(`${[...path, `N_${node.hash}`].join(' -> ')};`)\n      }\n    }\n    root.forEach(r => walkTreeForNodes(r))\n    root.forEach(r => walkTreeForLines(r))\n\n    return [\n      'digraph {',\n      ...nodes,\n      ...lines,\n      '}'].join('\\r\\n')\n  }\n}\n","module.exports = class BaseRepo {\n  constructor (tempDirectory, sources) {\n    this.tempDirectory = tempDirectory\n    this.sources = Object.assign({}, sources)\n    this.workingDirectory = null\n  }\n\n  Validate () {\n    return Promise.resolve()\n  }\n\n  Prepare () {\n    return Promise.resolve()\n  }\n\n  _AssertSourceExists (source) {\n    if (!this.sources[source]) {\n      throw new Error(`Source property ${source} not set`)\n    }\n  }\n}\n","const BaseRepo = require('./BaseRepo')\n\nmodule.exports = class NoRepo extends BaseRepo {\n  Validate () {\n    return super.Validate()\n  }\n\n  Prepare () {\n    return super.Prepare()\n  }\n}\n","const util = require('util')\nconst childProcess = require('child_process')\nconst _ = require('lodash')\nconst debug = require('debug')('botium-core-ProcessUtils')\n\nmodule.exports = {\n  childCommandLineRun: (cmd, ignoreErrors = false, processOptions = {}) => {\n    const cmdOptions = cmd.split(' ')\n    const cmdPart = cmdOptions[0]\n    cmdOptions.splice(0, 1)\n    return module.exports.childProcessRun(cmdPart, cmdOptions, ignoreErrors, processOptions)\n  },\n\n  childProcessRun: (cmd, cmdOptions, ignoreErrors = false, processOptions = {}) => {\n    return new Promise((resolve, reject) => {\n      debug('Running Command: ' + cmd + ' ' + _.join(cmdOptions, ' '))\n\n      const runningProcess = childProcess.spawn(cmd, cmdOptions, processOptions)\n\n      const stdout = []\n      const stderr = []\n\n      runningProcess.stdout.on('data', (data) => {\n        if (data) {\n          debug(`${cmd} STDOUT: ${data}`)\n          stdout.push(data)\n        }\n      })\n      runningProcess.stderr.on('data', (data) => {\n        if (data) {\n          debug(`${cmd} STDERR: ${data}`)\n          stderr.push(data)\n        }\n      })\n      runningProcess.on('close', (code) => {\n        debug(cmd + ' exited with code ' + code)\n        if (code === 0 || ignoreErrors) {\n          resolve({ stdout, stderr })\n        } else {\n          reject(new Error(`${cmd} returned error code ${code}`))\n        }\n      })\n      runningProcess.on('error', (err) => {\n        if (ignoreErrors) {\n          resolve()\n        } else {\n          reject(new Error(`${cmd} failed: ${util.inspect(err)}`))\n        }\n      })\n    })\n  }\n}\n","const path = require('path')\nconst async = require('async')\nconst mkdirp = require('mkdirp')\nconst debug = require('debug')('botium-core-GitRepo')\n\nconst Source = require('../Source')\nconst BaseRepo = require('./BaseRepo')\nconst ProcessUtils = require('../helpers/ProcessUtils')\n\nmodule.exports = class GitRepo extends BaseRepo {\n  Validate () {\n    return super.Validate().then(() => {\n      this._AssertSourceExists(Source.GITPATH)\n      this._AssertSourceExists(Source.GITURL)\n      this._AssertSourceExists(Source.GITBRANCH)\n      this._AssertSourceExists(Source.GITDIR)\n    })\n  }\n\n  Prepare () {\n    return new Promise((resolve, reject) => {\n      async.series([\n\n        (cloneDirectoryCreated) => {\n          this.workingDirectory = path.resolve(this.tempDirectory, 'git')\n\n          mkdirp(this.workingDirectory, (err) => {\n            if (err) {\n              return cloneDirectoryCreated(new Error(`Unable to create clone directory ${this.workingDirectory}: ${err}`))\n            }\n            cloneDirectoryCreated()\n          })\n        },\n\n        (cloneReady) => {\n          const gitCmdOptions = [\n            'clone',\n            '-b',\n            this.sources[Source.GITBRANCH],\n            '--single-branch',\n            '--depth',\n            '1',\n            this.sources[Source.GITURL],\n            this.workingDirectory\n          ]\n          ProcessUtils.childProcessRun(this.sources[Source.GITPATH], gitCmdOptions, false, { cwd: this.workingDirectory })\n            .then(() => cloneReady())\n            .catch(cloneReady)\n        },\n\n        (workingDirectoryChanged) => {\n          this.workingDirectory = path.resolve(this.workingDirectory, this.sources[Source.GITDIR])\n          workingDirectoryChanged()\n        },\n\n        (prepareReady) => {\n          if (this.sources[Source.GITPREPARECMD]) {\n            ProcessUtils.childCommandLineRun(this.sources[Source.GITPREPARECMD], false, { cwd: this.workingDirectory })\n              .then(() => prepareReady())\n              .catch(prepareReady)\n          } else {\n            prepareReady()\n          }\n        }\n\n      ], (err) => {\n        if (err) {\n          return reject(err)\n        }\n        debug(`git checkout out to ${this.workingDirectory}`)\n        resolve()\n      })\n    })\n  }\n}\n","const fs = require('fs')\nconst path = require('path')\nconst Source = require('../Source')\nconst BaseRepo = require('./BaseRepo')\n\nmodule.exports = class LocalRepo extends BaseRepo {\n  Validate () {\n    return super.Validate().then(() => {\n      this._AssertSourceExists(Source.LOCALPATH)\n\n      const checkPath = this.sources[Source.LOCALPATH]\n      fs.stat(checkPath, (err, stats) => {\n        if (err) {\n          throw new Error(`${checkPath} not available: ${err}`)\n        }\n        if (stats.isDirectory() && !stats.isSymbolicLink()) {\n          fs.access(checkPath, fs.constants.W_OK, (err1) => {\n            if (err) {\n              throw new Error(`${checkPath} not writeable: ${err}`)\n            }\n          })\n        } else {\n          throw new Error(`${checkPath} not a regular directory`)\n        }\n      })\n    })\n  }\n\n  Prepare () {\n    // No need to prepare anything\n    this.workingDirectory = path.resolve(this.sources[Source.LOCALPATH])\n    return Promise.resolve()\n  }\n}\n","module.exports = {\n  BUILD_CONTAINER: 'BUILD_CONTAINER',\n  START_CONTAINER: 'START_CONTAINER',\n  SENDTOBOT: 'SENDTOBOT',\n  STOP_CONTAINER: 'STOP_CONTAINER',\n  CLEAN_CONTAINER: 'CLEAN_CONTAINER'\n}\n","const { formatTimeout } = require('./Utils')\r\n\r\nmodule.exports = class QueueTimeoutError extends Error {\r\n  constructor (timeoutMillis) {\r\n    super(`Bot did not respond within ${formatTimeout(timeoutMillis)}`)\r\n    this.timeoutMillis = timeoutMillis\r\n  }\r\n}\r\n","const async = require('async')\r\nconst util = require('util')\r\n\r\nconst QueueTimeoutError = require('./QueueTimeoutError')\r\n\r\nmodule.exports = class Queue {\r\n  constructor () {\r\n    this.queue = []\r\n    this.listeners = []\r\n    this.pushListener = null\r\n  }\r\n\r\n  length () {\r\n    return this.queue.length\r\n  }\r\n\r\n  empty () {\r\n    this.queue = []\r\n  }\r\n\r\n  clear () {\r\n    this.queue = []\r\n    this.listeners = []\r\n  }\r\n\r\n  push (msg) {\r\n    if (this.pushListener) {\r\n      this.pushListener(msg)\r\n    }\r\n\r\n    if (this.listeners.length > 0) {\r\n      this.listeners.shift()(msg)\r\n    } else {\r\n      this.queue.push(msg)\r\n    }\r\n  }\r\n\r\n  pop (timeoutMillis) {\r\n    if (this.queue.length > 0) {\r\n      return Promise.resolve(this.queue.shift())\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n      let listener = null\r\n      const timeoutRequest = async.timeout((timeoutCallback) => {\r\n        listener = (msg) => {\r\n          timeoutCallback(null, msg)\r\n        }\r\n        this.listeners.push(listener)\r\n      }, timeoutMillis)\r\n\r\n      timeoutRequest((err, msg) => {\r\n        if (err && err.code === 'ETIMEDOUT') {\r\n          this.listeners.splice(this.listeners.indexOf(listener), 1)\r\n          reject(new QueueTimeoutError(timeoutMillis))\r\n        } else if (err) {\r\n          this.listeners.splice(this.listeners.indexOf(listener), 1)\r\n          reject(new Error(`Queue pop error ${util.inspect(err)}`))\r\n        } else {\r\n          resolve(msg)\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  registerPushListener (callback) {\r\n    this.pushListener = callback\r\n  }\r\n}\r\n","const util = require('util')\nconst async = require('async')\nconst rimraf = require('rimraf')\nconst Bottleneck = require('bottleneck')\nconst _ = require('lodash')\nconst request = require('request')\nconst debug = require('debug')('botium-connector-BaseContainer')\n\nconst Events = require('../Events')\nconst Capabilities = require('../Capabilities')\nconst Queue = require('../helpers/Queue')\nconst { executeHook, getHook } = require('../helpers/HookUtils')\nconst BotiumMockMessage = require('../mocks/BotiumMockMessage')\n\nmodule.exports = class BaseContainer {\n  constructor (eventEmitter, tempDirectory, repo, caps, envs) {\n    this.eventEmitter = eventEmitter\n    this.repo = repo\n    this.caps = Object.assign({}, caps)\n    this.envs = Object.assign({}, envs)\n    this.tempDirectory = tempDirectory\n    this.cleanupTasks = []\n    this.queues = {}\n    this.userSaysLimiter = null\n  }\n\n  Validate () {\n    this.onBuildHook = getHook(this.caps, this.caps[Capabilities.CUSTOMHOOK_ONBUILD])\n    this.onStartHook = getHook(this.caps, this.caps[Capabilities.CUSTOMHOOK_ONSTART])\n    this.onUserSaysHook = getHook(this.caps, this.caps[Capabilities.CUSTOMHOOK_ONUSERSAYS])\n    this.onBotResponseHook = getHook(this.caps, this.caps[Capabilities.CUSTOMHOOK_ONBOTRESPONSE])\n    this.onStopHook = getHook(this.caps, this.caps[Capabilities.CUSTOMHOOK_ONSTOP])\n    this.onCleanHook = getHook(this.caps, this.caps[Capabilities.CUSTOMHOOK_ONCLEAN])\n\n    return Promise.resolve()\n  }\n\n  Build () {\n    if (this.caps[Capabilities.RATELIMIT_USERSAYS_MAXCONCURRENT] || this.caps[Capabilities.RATELIMIT_USERSAYS_MINTIME]) {\n      const opts = {}\n      if (this.caps[Capabilities.RATELIMIT_USERSAYS_MAXCONCURRENT]) opts.maxConcurrent = this.caps[Capabilities.RATELIMIT_USERSAYS_MAXCONCURRENT]\n      if (this.caps[Capabilities.RATELIMIT_USERSAYS_MINTIME]) opts.minTime = this.caps[Capabilities.RATELIMIT_USERSAYS_MINTIME]\n      this.userSaysLimiter = new Bottleneck(opts)\n      debug(`Build: Applying userSays rate limits ${util.inspect(opts)}`)\n    }\n\n    return new Promise((resolve, reject) => {\n      this._RunCustomHook('onBuild', this.onBuildHook)\n        .then(() => resolve(this))\n        .catch((err) => reject(err))\n    })\n  }\n\n  Start () {\n    this.queues = {}\n    return new Promise((resolve, reject) => {\n      this._RunCustomHook('onStart', this.onStartHook)\n        .then(() => resolve(this))\n        .catch((err) => reject(err))\n    })\n  }\n\n  UserSaysText (text) {\n    const meMsg = new BotiumMockMessage({ sender: 'me', messageText: text })\n    return this.UserSays(meMsg)\n  }\n\n  UserSays (meMsg) {\n    const run = () => this._RunCustomHook('onUserSays', this.onUserSaysHook, { meMsg })\n      .then(() => this.UserSaysImpl(meMsg))\n\n    if (this.userSaysLimiter) {\n      return this.userSaysLimiter.schedule(run)\n    } else {\n      return run()\n    }\n  }\n\n  UserSaysImpl (meMsg) {\n    return Promise.resolve(this)\n  }\n\n  WaitBotSays (channel = null, timeoutMillis = null) {\n    if (!channel) channel = 'default'\n    if (!timeoutMillis) timeoutMillis = this.caps[Capabilities.WAITFORBOTTIMEOUT]\n\n    if (!this.queues[channel]) {\n      this.queues[channel] = new Queue()\n    }\n\n    return new Promise((resolve, reject) => {\n      this.queues[channel].pop(timeoutMillis)\n        .then((botMsg) => {\n          if (_.isError(botMsg)) {\n            reject(botMsg)\n          } else {\n            resolve(botMsg)\n          }\n        })\n        .catch((err) => {\n          debug(`WaitBotSays error ${err.message || err}`)\n          reject(err)\n        })\n    })\n  }\n\n  WaitBotSaysText (channel = null, timeoutMillis = null) {\n    return this.WaitBotSays(channel, timeoutMillis)\n      .then((botMsg) => {\n        if (botMsg) {\n          return botMsg.messageText\n        }\n      })\n  }\n\n  Restart () {\n    return new Promise((resolve, reject) => {\n      this.Stop()\n        .then(() => this.Start())\n        .then(() => resolve())\n        .catch((err) => reject(err))\n    })\n  }\n\n  Stop () {\n    return new Promise((resolve, reject) => {\n      this._RunCustomHook('onStop', this.onStopHook)\n        .then(() => resolve(this))\n        .catch((err) => reject(err))\n    })\n  }\n\n  Clean () {\n    this.userSaysLimiter = null\n    return new Promise((resolve, reject) => {\n      async.series([\n        (hookExecuted) => {\n          this._RunCustomHook('onClean', this.onCleanHook)\n            .then(() => hookExecuted())\n            .catch(() => hookExecuted())\n        },\n\n        (cleanupTasksDone) => {\n          if (this.cleanupTasks) {\n            async.series(\n              this.cleanupTasks.map((task) => {\n                return (cb) => {\n                  task((err) => {\n                    if (err) debug(`Cleanup failed: ${util.inspect(err)}`)\n                    cb()\n                  })\n                }\n              }),\n              () => {\n                cleanupTasksDone()\n              }\n            )\n          } else {\n            cleanupTasksDone()\n          }\n        },\n\n        (rimraffed) => {\n          if (this.caps[Capabilities.CLEANUPTEMPDIR]) {\n            debug(`Cleanup rimrafing temp dir ${this.tempDirectory}`)\n            rimraf(this.tempDirectory, (err) => {\n              if (err) debug(`Cleanup temp dir ${this.tempDirectory} failed: ${util.inspect(err)}`)\n              rimraffed()\n            })\n          } else {\n            rimraffed()\n          }\n        }\n      ], (err) => {\n        if (err) {\n          return reject(new Error(`Cleanup failed ${util.inspect(err)}`))\n        }\n        resolve()\n      })\n    })\n  }\n\n  _AssertCapabilityExists (cap) {\n    if (!Object.prototype.hasOwnProperty.call(this.caps, cap)) {\n      throw new Error(`Capability property ${cap} not set`)\n    }\n  }\n\n  _AssertOneCapabilityExists () {\n    const checkCaps = [...arguments]\n    const found = checkCaps.find((cap) => this.caps[cap])\n    if (!found) {\n      throw new Error(`Capability property of ${checkCaps.join()} not set`)\n    }\n  }\n\n  _QueueLength (channel = 'default') {\n    return (this.queues[channel] && this.queues[channel].length()) || 0\n  }\n\n  _EmptyQueue (channel = 'default') {\n    if (this.queues[channel]) {\n      this.queues[channel].empty()\n    }\n  }\n\n  async _QueueBotSays (botMsg) {\n    if (_.isError(botMsg)) {\n      if (!this.queues.default) {\n        this.queues.default = new Queue()\n      }\n      this.queues.default.push(botMsg)\n      this.eventEmitter.emit(Events.MESSAGE_RECEIVEFROMBOT_ERROR, this, botMsg)\n    } else {\n      if (!botMsg.channel) botMsg.channel = 'default'\n      if (!botMsg.sender) botMsg.sender = 'bot'\n\n      if (!this.queues[botMsg.channel]) {\n        this.queues[botMsg.channel] = new Queue()\n      }\n\n      await this._RunCustomHook('onBotResponse', this.onBotResponseHook, { botMsg })\n      this.queues[botMsg.channel].push(botMsg)\n      this.eventEmitter.emit(Events.MESSAGE_RECEIVEDFROMBOT, this, botMsg)\n    }\n  }\n\n  async _RunCustomHook (name, hook, args) {\n    try {\n      await executeHook(this.caps, hook, Object.assign({ container: this, request }, args))\n    } catch (err) {\n      debug(`_RunCustomHook ${name} finished with error: ${err.message || util.inspect(err)}`)\n    }\n  }\n}\n","const util = require('util')\nconst async = require('async')\nconst _ = require('lodash')\nconst io = require('socket.io-client')\nconst debug = require('debug')('botium-connector-GridContainer')\n\nconst Commands = require('../Commands')\nconst Events = require('../Events')\nconst Capabilities = require('../Capabilities')\nconst BaseContainer = require('./BaseContainer')\nconst BotiumMockMessage = require('../mocks/BotiumMockMessage')\n\nmodule.exports = class GridContainer extends BaseContainer {\n  Validate () {\n    return super.Validate().then(() => {\n      this._AssertCapabilityExists(Capabilities.BOTIUMGRIDURL)\n    })\n  }\n\n  Build () {\n    this.buildPromise = this._defer()\n\n    async.series([\n      (baseComplete) => {\n        super.Build().then(() => baseComplete()).catch(baseComplete)\n      },\n\n      (socketComplete) => {\n        this.socket = io(this.caps[Capabilities.BOTIUMGRIDURL])\n\n        this.socket.on('connect', () => {\n          debug('connected')\n          this.socket.emit('authentication', { apiToken: this.caps[Capabilities.BOTIUMAPITOKEN] })\n        })\n        this.socket.on('connect_error', (err) => {\n          debug(`connect_error ${err.message}`)\n        })\n        this.socket.on('connect_timeout', (timeout) => {\n          debug(`connect_timeout ${util.inspect(timeout)}`)\n        })\n        this.socket.on('error', (err) => {\n          debug(`error ${err.message}`)\n        })\n        this.socket.on('authenticated', () => {\n          debug('authenticated')\n          this.socket.emit(Commands.BUILD_CONTAINER, this.caps, this.repo.sources, this.envs)\n        })\n        this.socket.on('unauthorized', (err) => {\n          debug(`unauthorized ${err.message}`)\n          socketComplete(`Grid Access not authorized: ${err.message}`)\n        })\n        this.socket.on(Events.TOOMUCHWORKERS_ERROR, (err) => {\n          debug(`TOOMUCHWORKERS_ERROR ${err.message}`)\n          socketComplete(`Grid Access not possible: ${err.message}`)\n        })\n        this.socket.on(Events.CONTAINER_BUILT, () => {\n          debug(Events.CONTAINER_BUILT)\n          socketComplete()\n        })\n        this.socket.on(Events.CONTAINER_BUILD_ERROR, (err) => {\n          debug(`CONTAINER_BUILD_ERROR ${err.message}`)\n          socketComplete(`Grid Build failed: ${err.message}`)\n        })\n\n        this.socket.on(Events.CONTAINER_STARTED, () => {\n          debug(Events.CONTAINER_STARTED)\n          this.eventEmitter.emit(Events.CONTAINER_STARTED, this)\n          if (this.startPromise) {\n            this.startPromise.resolve(this)\n            this.startPromise = null\n          }\n        })\n        this.socket.on(Events.CONTAINER_START_ERROR, (err) => {\n          debug(`CONTAINER_START_ERROR ${err.message}`)\n          this.eventEmitter.emit(Events.CONTAINER_START_ERROR, this, err)\n          if (this.startPromise) {\n            this.startPromise.reject(`Grid Start failed: ${err.message}`)\n            this.startPromise = null\n          }\n        })\n\n        this.socket.on(Events.MESSAGE_RECEIVEDFROMBOT, (botMsg) => {\n          debug(`MESSAGE_RECEIVEDFROMBOT ${util.inspect(botMsg)}`)\n          this._QueueBotSays(new BotiumMockMessage(botMsg))\n        })\n\n        this.socket.on(Events.CONTAINER_STOPPED, () => {\n          debug(Events.CONTAINER_STOPPED)\n          this.eventEmitter.emit(Events.CONTAINER_STOPPED, this)\n          if (this.stopPromise) {\n            this.stopPromise.resolve(this)\n            this.stopPromise = null\n          }\n        })\n        this.socket.on(Events.CONTAINER_STOP_ERROR, (err) => {\n          debug(`CONTAINER_STOP_ERROR ${err.message}`)\n          this.eventEmitter.emit(Events.CONTAINER_STOP_ERROR, this, err)\n          if (this.stopPromise) {\n            this.stopPromise.reject(`Grid Stop failed: ${err.message}`)\n            this.stopPromise = null\n          }\n        })\n\n        this.socket.on(Events.CONTAINER_CLEANED, () => {\n          debug(Events.CONTAINER_CLEANED)\n          this.eventEmitter.emit(Events.CONTAINER_CLEANED, this)\n          if (this.cleanPromise) {\n            this.cleanPromise.resolve(this)\n            this.cleanPromise = null\n          }\n          this.socket.disconnect()\n          this.socket = null\n        })\n        this.socket.on(Events.CONTAINER_CLEAN_ERROR, (err) => {\n          debug(`CONTAINER_CLEAN_ERROR ${err.message}`)\n          this.eventEmitter.emit(Events.CONTAINER_CLEAN_ERROR, this, err)\n          if (this.cleanPromise) {\n            this.cleanPromise.reject(`Grid Clean failed: ${err.message}`)\n            this.cleanPromise = null\n          }\n          this.socket.disconnect()\n          this.socket = null\n        })\n      }\n    ], (err) => {\n      if (err) {\n        this.buildPromise.reject(new Error(`Cannot build grid containers: ${err.message}`))\n      } else {\n        this.buildPromise.resolve(this)\n      }\n      this.buildPromise = null\n    })\n    return this.buildPromise.promise\n  }\n\n  Start () {\n    this.eventEmitter.emit(Events.CONTAINER_STARTING, this)\n\n    return super.Start().then(() => {\n      if (this.startPromise) return Promise.reject(new Error('already starting'))\n      if (this.socket) {\n        this.startPromise = this._defer()\n        this.socket.emit(Commands.START_CONTAINER)\n\n        return this.startPromise.promise\n      } else {\n        this.eventEmitter.emit(Events.CONTAINER_START_ERROR, this, 'Remote Agent not online')\n        return Promise.reject(new Error('Remote Agent not online'))\n      }\n    })\n  }\n\n  UserSaysImpl (mockMsg) {\n    return new Promise((resolve, reject) => {\n      if (this.socket) {\n        this.socket.emit(Commands.SENDTOBOT, mockMsg)\n        this.eventEmitter.emit(Events.MESSAGE_SENTTOBOT, this, mockMsg)\n        resolve(this)\n      } else {\n        this.eventEmitter.emit(Events.MESSAGE_SENDTOBOT_ERROR, this, 'Remote Agent not online')\n        reject(new Error('Remote Agent not online'))\n      }\n    })\n  }\n\n  Stop () {\n    this.eventEmitter.emit(Events.CONTAINER_STOPPING, this)\n\n    return super.Stop().then(() => {\n      if (this.stopPromise) return Promise.reject(new Error('already stopping'))\n      if (this.socket) {\n        this.stopPromise = this._defer()\n        this.socket.emit(Commands.STOP_CONTAINER)\n\n        return this.stopPromise.promise\n      } else {\n        return Promise.resolve(this)\n      }\n    })\n  }\n\n  Clean () {\n    this.eventEmitter.emit(Events.CONTAINER_CLEANING, this)\n\n    return super.Clean().then(() => {\n      if (this.cleanPromise) return Promise.reject(new Error('already cleaning'))\n      if (this.socket) {\n        this.cleanPromise = this._defer()\n        this.socket.emit(Commands.CLEAN_CONTAINER)\n\n        return this.cleanPromise.promise\n      } else {\n        return Promise.resolve(this)\n      }\n    })\n  }\n\n  _ValidateCustomHook (capKey) {\n    if (this.caps[capKey]) {\n      if (!_.isString(this.caps[capKey])) {\n        throw new Error(`Custom Hook ${capKey} has to be a command line string`)\n      }\n    }\n  }\n\n  _RunCustomHook (capKey) {\n    return Promise.resolve()\n  }\n\n  _defer () {\n    const deferred = {\n      promise: null,\n      resolve: null,\n      reject: null\n    }\n    deferred.promise = new Promise((resolve, reject) => {\n      deferred.resolve = resolve\n      deferred.reject = reject\n    })\n    return deferred\n  }\n}\n","const Events = require('../Events')\nconst BaseContainer = require('./BaseContainer')\nconst BotiumMockMessage = require('../mocks/BotiumMockMessage')\n\nmodule.exports = class InProcessContainer extends BaseContainer {\n  UserSaysImpl (mockMsg) {\n    this.eventEmitter.emit(Events.MESSAGE_SENTTOBOT, this, mockMsg)\n    return Promise.resolve(this)\n  }\n\n  InjectBotSays (botMsg) {\n    this._QueueBotSays(new BotiumMockMessage(botMsg))\n  }\n}\n","const express = require('express')\nconst Redis = require('ioredis')\nconst bodyParser = require('body-parser')\nconst debug = require('debug')('botium-core-inbound-proxy')\n\nconst buildRedisHandler = (redisurl, topic) => {\n  const redis = new Redis(redisurl)\n  redis.on('connect', () => {\n    debug(`Redis connected to ${JSON.stringify(redisurl || 'default')}`)\n  })\n  return (event) => {\n    try {\n      debug('Got Message Event:')\n      debug(JSON.stringify(event, null, 2))\n\n      redis.publish(topic, JSON.stringify(event))\n    } catch (err) {\n      debug('Error while publishing to redis')\n      debug(err)\n    }\n  }\n}\n\nconst setupEndpoints = ({ app, endpoint, middleware, processEvent }) => {\n  if (endpoint && !endpoint.endsWith('/')) endpoint = endpoint + '/'\n\n  const handler = (req, res) => {\n    if (req.body) {\n      processEvent({\n        originalUrl: req.originalUrl,\n        originalMethod: req.method,\n        body: req.body\n      })\n      res.status(200).json({}).end()\n    } else {\n      res.status(500).sendResponse('No body detected')\n    }\n  }\n  if (endpoint) {\n    app.all(endpoint, ...(middleware || []), handler)\n    app.all(endpoint.endsWith('/') ? endpoint + '*' : endpoint + '/*', ...(middleware || []), handler)\n  } else {\n    app.all(...(middleware || []), handler)\n  }\n}\n\nconst startProxy = async ({ port, endpoint, processEvent }) => {\n  return new Promise((resolve, reject) => {\n    const app = express()\n\n    setupEndpoints({\n      app,\n      middleware: [\n        bodyParser.json(),\n        bodyParser.urlencoded({ extended: true })\n      ],\n      endpoint: endpoint || '/',\n      processEvent\n    })\n\n    const proxy = app.listen(port, () => {\n      console.log(`Botium Inbound Messages proxy is listening on port ${port}`)\n      console.log(`Botium Inbound Messages endpoint available at http://127.0.0.1:${port}${endpoint}`)\n      resolve(proxy)\n    })\n  })\n}\n\nmodule.exports = {\n  buildRedisHandler,\n  setupEndpoints,\n  startProxy\n}\n","const util = require('util')\nconst async = require('async')\nconst request = require('request')\nconst Mustache = require('mustache')\nconst jp = require('jsonpath')\nconst mime = require('mime-types')\nconst { v4: uuidv4 } = require('uuid')\nconst Redis = require('ioredis')\nconst _ = require('lodash')\nconst debug = require('debug')('botium-connector-simplerest')\n\nconst { startProxy } = require('../../grid/inbound/proxy')\nconst botiumUtils = require('../../helpers/Utils')\nconst { getAllCapValues } = require('../../helpers/CapabilitiesUtils')\nconst Capabilities = require('../../Capabilities')\nconst Defaults = require('../../Defaults').Capabilities\nconst { SCRIPTING_FUNCTIONS } = require('../../scripting/ScriptingMemory')\nconst { getHook, executeHook } = require('../../helpers/HookUtils')\nconst { escapeJSONString } = require('../../helpers/Utils')\n\nMustache.escape = s => s\n\nmodule.exports = class SimpleRestContainer {\n  constructor ({ queueBotSays, caps }) {\n    this.queueBotSays = queueBotSays\n    this.caps = Object.assign({}, Defaults, caps)\n    this.processInbound = false\n    this.redisTopic = this.caps[Capabilities.SIMPLEREST_REDIS_TOPIC] || 'SIMPLEREST_INBOUND_SUBSCRIPTION'\n\n    if (this.caps[Capabilities.SIMPLEREST_INBOUND_ORDER_UNSETTLED_EVENTS_JSONPATH]) {\n      const debounceTimeout = this.caps[Capabilities.SIMPLEREST_INBOUND_DEBOUNCE_TIMEOUT] || 500\n      this.inboundEvents = []\n      this._processOrderedInboundEventsArrayAsync = _.debounce(() => {\n        const events = [...this.inboundEvents]\n        this.inboundEvents = []\n        const jsonPath = this._getMustachedVal(this.caps[Capabilities.SIMPLEREST_INBOUND_ORDER_UNSETTLED_EVENTS_JSONPATH], false)\n        const sortedEvents = _.sortBy(events, (event) => {\n          const qr = jp.query(event, jsonPath)\n          return qr[0]\n        })\n        for (const event of sortedEvents) {\n          setTimeout(() => this._processBodyAsync(event.body, true, !!this.caps[Capabilities.SIMPLEREST_INBOUND_UPDATE_CONTEXT]), 0)\n        }\n      }, debounceTimeout)\n    }\n  }\n\n  Validate () {\n    if (!this.caps[Capabilities.SIMPLEREST_URL]) throw new Error('SIMPLEREST_URL capability required')\n    if (!this.caps[Capabilities.SIMPLEREST_METHOD] && !this.caps[Capabilities.SIMPLEREST_VERB]) throw new Error('SIMPLEREST_METHOD/SIMPLEREST_VERB capability required')\n    if (_.keys(this.caps).findIndex(k => k.startsWith(Capabilities.SIMPLEREST_RESPONSE_JSONPATH)) < 0 && !this.caps[Capabilities.SIMPLEREST_RESPONSE_HOOK]) throw new Error('SIMPLEREST_RESPONSE_JSONPATH or SIMPLEREST_RESPONSE_HOOK capability required')\n    if (this.caps[Capabilities.SIMPLEREST_INIT_CONTEXT]) {\n      _.isObject(this.caps[Capabilities.SIMPLEREST_INIT_CONTEXT]) || JSON.parse(this.caps[Capabilities.SIMPLEREST_INIT_CONTEXT])\n    }\n    if (this.caps[Capabilities.SIMPLEREST_CONTEXT_MERGE_OR_REPLACE] !== 'MERGE' && this.caps[Capabilities.SIMPLEREST_CONTEXT_MERGE_OR_REPLACE] !== 'REPLACE') throw new Error('SIMPLEREST_CONTEXT_MERGE_OR_REPLACE capability only MERGE or REPLACE allowed')\n\n    this.startHook = getHook(this.caps, this.caps[Capabilities.SIMPLEREST_START_HOOK])\n    this.stopHook = getHook(this.caps, this.caps[Capabilities.SIMPLEREST_STOP_HOOK])\n    this.requestHook = getHook(this.caps, this.caps[Capabilities.SIMPLEREST_REQUEST_HOOK])\n    this.parserHook = getHook(this.caps, this.caps[Capabilities.SIMPLEREST_PARSER_HOOK])\n    this.responseHook = getHook(this.caps, this.caps[Capabilities.SIMPLEREST_RESPONSE_HOOK])\n    this.pollRequestHook = getHook(this.caps, this.caps[Capabilities.SIMPLEREST_POLL_REQUEST_HOOK])\n\n    this.requestHooks = {}\n    if (this.caps[Capabilities.SIMPLEREST_PING_REQUEST_HOOK]) {\n      this.requestHooks.SIMPLEREST_PING = getHook(this.caps, this.caps[Capabilities.SIMPLEREST_PING_REQUEST_HOOK])\n    }\n    if (this.caps[Capabilities.SIMPLEREST_START_REQUEST_HOOK]) {\n      this.requestHooks.SIMPLEREST_START = getHook(this.caps, this.caps[Capabilities.SIMPLEREST_START_REQUEST_HOOK])\n    }\n    if (this.caps[Capabilities.SIMPLEREST_STOP_REQUEST_HOOK]) {\n      this.requestHooks.SIMPLEREST_STOP = getHook(this.caps, this.caps[Capabilities.SIMPLEREST_STOP_REQUEST_HOOK])\n    }\n  }\n\n  Build () {\n    return this._buildInbound()\n  }\n\n  Start () {\n    return new Promise((resolve, reject) => {\n      async.series([\n        (contextInitComplete) => {\n          this.view = {\n            container: this,\n            context: {},\n            msg: {},\n            botium: {\n              conversationId: null,\n              stepId: null\n            },\n            // Mustache deals with fuctions with, or without parameters differently.\n            // -> we have to add our functions differently, if they have param or not.\n            // -> optional parameters are not working here!\n            // (render(text) is required for forcing mustache to replace valiables in the text first,\n            // then send it to the function.)\n            // (mapKeys: remove starting $)\n            fnc: _.mapValues(_.mapKeys(SCRIPTING_FUNCTIONS, (value, key) => key.substring(1)), (descriptor) => {\n              const safeCaps = Object.assign({}, this.caps, { [Capabilities.SECURITY_ALLOW_UNSAFE]: true })\n              return descriptor.numberOfArguments ? () => { return (text, render) => descriptor.handler(safeCaps, render(text)) } : () => descriptor.handler(safeCaps)\n            })\n          }\n          this.view.fnc.jsonify = () => (val, render) => {\n            return escapeJSONString(render(val))\n          }\n\n          if (this.caps[Capabilities.SIMPLEREST_CONVERSATION_ID_TEMPLATE]) {\n            this.view.botium.conversationId = this._getMustachedCap(Capabilities.SIMPLEREST_CONVERSATION_ID_TEMPLATE, false)\n          } else {\n            this.view.botium.conversationId = uuidv4()\n          }\n\n          if (this.caps[Capabilities.SIMPLEREST_INIT_CONTEXT]) {\n            try {\n              this.view.context = _.isObject(this.caps[Capabilities.SIMPLEREST_INIT_CONTEXT]) ? _.cloneDeep(this.caps[Capabilities.SIMPLEREST_INIT_CONTEXT]) : JSON.parse(this.caps[Capabilities.SIMPLEREST_INIT_CONTEXT])\n            } catch (err) {\n              contextInitComplete(`parsing SIMPLEREST_INIT_CONTEXT failed, no JSON detected (${err.message})`)\n            }\n          }\n          contextInitComplete()\n        },\n\n        (startHookComplete) => {\n          executeHook(this.caps, this.startHook, this.view).then(() => startHookComplete()).catch(startHookComplete)\n        },\n\n        (inboundListenerComplete) => {\n          this._subscribeInbound()\n            .then(() => inboundListenerComplete())\n            .catch(inboundListenerComplete)\n        },\n\n        (startPollingComplete) => {\n          this._startPolling()\n            .then(() => startPollingComplete())\n            .catch(startPollingComplete)\n        },\n\n        (pingComplete) => {\n          if (this.caps[Capabilities.SIMPLEREST_PING_URL]) {\n            this._makeCall('SIMPLEREST_PING')\n              .then(body => {\n                if (this.caps[Capabilities.SIMPLEREST_PING_UPDATE_CONTEXT] || this.caps[Capabilities.SIMPLEREST_PING_PROCESS_RESPONSE]) {\n                  return this._parseResponseBody(body)\n                    .then(body => {\n                      if (body) {\n                        debug(`Ping Uri ${this.caps[Capabilities.SIMPLEREST_PING_URL]} returned JSON response: ${botiumUtils.shortenJsonString(body)}`)\n                        return this._processBodyAsync(body, !!this.caps[Capabilities.SIMPLEREST_PING_PROCESS_RESPONSE], !!this.caps[Capabilities.SIMPLEREST_PING_UPDATE_CONTEXT])\n                      } else {\n                        debug(`Ping Uri ${this.caps[Capabilities.SIMPLEREST_PING_URL]} didn't return JSON response, ignoring it.`)\n                      }\n                    }).catch(err => {\n                      debug(`Ping Uri ${this.caps[Capabilities.SIMPLEREST_PING_URL]} didn't return JSON response, ignoring it (${err.message})`)\n                    })\n                }\n              }).then(() => {\n                pingComplete()\n              }).catch(err => {\n                pingComplete(err.message)\n              })\n          } else {\n            pingComplete()\n          }\n        },\n\n        (initComplete) => {\n          if (_.isString(this.caps[Capabilities.SIMPLEREST_INIT_TEXT])) {\n            this._doRequest({ messageText: this.caps[Capabilities.SIMPLEREST_INIT_TEXT] }, !!this.caps[Capabilities.SIMPLEREST_INIT_PROCESS_RESPONSE], true).then(() => initComplete()).catch(initComplete)\n          } else {\n            initComplete()\n          }\n        },\n\n        (startCallComplete) => {\n          this.processInbound = true\n          if (this.caps[Capabilities.SIMPLEREST_START_URL]) {\n            this._makeCall('SIMPLEREST_START')\n              .then(body => {\n                if (this.caps[Capabilities.SIMPLEREST_START_UPDATE_CONTEXT] || this.caps[Capabilities.SIMPLEREST_START_PROCESS_RESPONSE]) {\n                  return this._parseResponseBody(body)\n                    .then(body => {\n                      if (body) {\n                        debug(`Start Uri ${this.caps[Capabilities.SIMPLEREST_START_URL]} returned JSON response: ${botiumUtils.shortenJsonString(body)}`)\n                        return this._processBodyAsync(body, !!this.caps[Capabilities.SIMPLEREST_START_PROCESS_RESPONSE], !!this.caps[Capabilities.SIMPLEREST_START_UPDATE_CONTEXT])\n                      } else {\n                        debug(`Start Uri ${this.caps[Capabilities.SIMPLEREST_START_URL]} didn't return JSON response, ignoring it.`)\n                      }\n                    }).catch(err => {\n                      debug(`Start Uri ${this.caps[Capabilities.SIMPLEREST_START_URL]} didn't return JSON response, ignoring it (${err.message})`)\n                    })\n                }\n              }).then(() => {\n                startCallComplete()\n              }).catch(err => {\n                startCallComplete(new Error(`Failed to call url ${this.caps[Capabilities.SIMPLEREST_START_URL]} to start session: ${err.message}`))\n              })\n          } else {\n            startCallComplete()\n          }\n        }\n\n      ], (err) => {\n        if (err) {\n          return reject(new Error(`Start failed: ${err.message}`))\n        }\n        resolve()\n      })\n    })\n  }\n\n  UserSays (mockMsg) {\n    return this._doRequest(mockMsg, true, true)\n  }\n\n  async Stop () {\n    this.processInbound = false\n    if (this.caps[Capabilities.SIMPLEREST_STOP_URL]) {\n      try {\n        await this._makeCall('SIMPLEREST_STOP')\n      } catch (err) {\n        throw new Error(`Failed to call url ${this.caps[Capabilities.SIMPLEREST_STOP_URL]} to stop session: ${err.message}`)\n      }\n    }\n    await executeHook(this.caps, this.stopHook, this.view)\n    await this._unsubscribeInbound()\n    await this._stopPolling()\n    this.view = {}\n  }\n\n  Clean () {\n    return this._cleanInbound()\n  }\n\n  // Separated just for better module testing\n  async _processBodyAsync (body, isFromUser, updateContext) {\n    const p = async () => {\n      try {\n        const results = await this._processBodyAsyncImpl(body, isFromUser, updateContext)\n        if (results) {\n          for (const result of results) {\n            setTimeout(() => this.queueBotSays(result), 0)\n          }\n        }\n      } catch (err) {\n        setTimeout(() => this.queueBotSays(err), 0)\n      }\n    }\n    if (this.waitProcessQueue) {\n      this.waitProcessQueue.push(p)\n      debug('Async body is queued for processing.')\n    } else {\n      await p()\n    }\n  }\n\n  async _emptyWaitProcessQueue () {\n    if (this.waitProcessQueue && this.waitProcessQueue.length > 0) {\n      for (const p of this.waitProcessQueue) {\n        await p()\n      }\n    }\n    this.waitProcessQueue = null\n  }\n\n  // Separated just for better module testing\n  async _processBodyAsyncImpl (body, isFromUser, updateContext) {\n    if (updateContext) {\n      const mergeMode = this.caps[Capabilities.SIMPLEREST_CONTEXT_MERGE_OR_REPLACE]\n      const jsonPathsContext = getAllCapValues(Capabilities.SIMPLEREST_CONTEXT_JSONPATH, this.caps)\n      if (jsonPathsContext.length > 0) {\n        for (const jsonPathContext of jsonPathsContext) {\n          const contextNodes = jp.query(body, jsonPathContext)\n          if (_.isArray(contextNodes) && contextNodes.length > 0) {\n            if (mergeMode === 'MERGE') {\n              Object.assign(this.view.context, contextNodes[0])\n            } else if (mergeMode === 'REPLACE') {\n              this.view.context = contextNodes[0]\n            }\n          }\n        }\n      } else {\n        if (mergeMode === 'MERGE') {\n          Object.assign(this.view.context, body)\n        } else if (mergeMode === 'REPLACE') {\n          this.view.context = body\n        }\n      }\n      debug(`current session context: ${util.inspect(this.view.context)}`)\n    }\n\n    const result = []\n    if (isFromUser) {\n      const jsonPathRoots = []\n\n      const jsonPathsBody = getAllCapValues(Capabilities.SIMPLEREST_BODY_JSONPATH, this.caps)\n      if (jsonPathsBody.length > 0) {\n        for (const jsonPathBody of jsonPathsBody) {\n          const rb = jp.query(body, jsonPathBody)\n          if (_.isArray(rb)) {\n            rb.forEach(r => jsonPathRoots.push(r))\n          } else if (rb) {\n            jsonPathRoots.push(rb)\n          }\n        }\n      } else {\n        jsonPathRoots.push(body)\n      }\n\n      for (const jsonPathRoot of jsonPathRoots) {\n        const media = []\n        const buttons = []\n\n        const jsonPathsMedia = getAllCapValues(Capabilities.SIMPLEREST_MEDIA_JSONPATH, this.caps)\n        jsonPathsMedia.forEach(jsonPath => {\n          const responseMedia = jp.query(jsonPathRoot, jsonPath)\n          if (responseMedia) {\n            (_.isArray(responseMedia) ? _.flattenDeep(responseMedia) : [responseMedia]).forEach(m =>\n              media.push({\n                mediaUri: m,\n                mimeType: mime.lookup(m) || 'application/unknown'\n              })\n            )\n            debug(`found response media: ${util.inspect(media)}`)\n          }\n        })\n        const jsonPathsButtons = getAllCapValues(Capabilities.SIMPLEREST_BUTTONS_JSONPATH, this.caps)\n        jsonPathsButtons.forEach(jsonPath => {\n          const responseButtons = jp.query(jsonPathRoot, jsonPath)\n          if (responseButtons) {\n            (_.isArray(responseButtons) ? _.flattenDeep(responseButtons) : [responseButtons]).forEach(b =>\n              buttons.push({\n                text: b\n              })\n            )\n            debug(`found response buttons: ${util.inspect(buttons)}`)\n          }\n        })\n\n        let hasMessageText = false\n        const jsonPathsTexts = getAllCapValues(Capabilities.SIMPLEREST_RESPONSE_JSONPATH, this.caps)\n        for (const jsonPath of jsonPathsTexts) {\n          debug(`eval json path ${jsonPath}`)\n\n          const responseTexts = jp.query(jsonPathRoot, jsonPath)\n          debug(`found response texts: ${util.inspect(responseTexts)}`)\n\n          const messageTexts = (_.isArray(responseTexts) ? _.flattenDeep(responseTexts) : [responseTexts])\n          for (const [messageTextIndex, messageText] of messageTexts.entries()) {\n            if (!messageText) continue\n\n            hasMessageText = true\n            const botMsg = { sourceData: body, messageText, media, buttons }\n            await executeHook(this.caps, this.responseHook, Object.assign({ botMsg, botMsgRoot: jsonPathRoot, messageTextIndex }, this.view))\n            result.push(botMsg)\n          }\n        }\n\n        if (!hasMessageText) {\n          const botMsg = { messageText: '', sourceData: body, media, buttons }\n          const beforeHookKeys = Object.keys(botMsg)\n          await executeHook(this.caps, this.responseHook, Object.assign({ botMsg, botMsgRoot: jsonPathRoot }, this.view))\n          const afterHookKeys = Object.keys(botMsg)\n          if (beforeHookKeys.length !== afterHookKeys.length || !!(botMsg.messageText && botMsg.messageText.length > 0) || botMsg.media.length > 0 || botMsg.buttons.length > 0 || !this.caps[Capabilities.SIMPLEREST_IGNORE_EMPTY]) {\n            result.push(botMsg)\n          }\n        }\n      }\n    }\n    return result\n  }\n\n  _doRequest (msg, isFromUser, updateContext) {\n    return this._buildRequest(msg)\n      .then((requestOptions) => new Promise((resolve, reject) => {\n        debug(`constructed requestOptions ${JSON.stringify(requestOptions, null, 2)}`)\n        msg.sourceData = msg.sourceData || {}\n        msg.sourceData.requestOptions = requestOptions\n\n        this.waitProcessQueue = []\n\n        request(requestOptions, async (err, response, body) => {\n          if (err) {\n            return reject(new Error(`rest request failed: ${err.message}`))\n          } else {\n            if (response.statusCode >= 400) {\n              debug(`got error response: ${response.statusCode}/${response.statusMessage}`)\n              return reject(new Error(`got error response: ${response.statusCode}/${response.statusMessage}`))\n            }\n\n            if (body) {\n              debug(`got response code: ${response.statusCode}, body: ${botiumUtils.shortenJsonString(body)}`)\n\n              try {\n                body = await this._parseResponseBody(body)\n              } catch (err) {\n                debug(`ignoring not JSON formatted response body: ${err.message}`)\n                resolve(this)\n                this._emptyWaitProcessQueue()\n                return\n              }\n\n              if (body) {\n                this._processBodyAsync(body, isFromUser, updateContext).then(() => resolve(this)).then(() => this._emptyWaitProcessQueue())\n              } else {\n                debug('ignoring response body (no string and no JSON object)')\n                resolve(this)\n                this._emptyWaitProcessQueue()\n              }\n            } else {\n              debug(`got response code: ${response.statusCode}, empty body`)\n              resolve(this)\n              this._emptyWaitProcessQueue()\n            }\n          }\n        })\n      }))\n  }\n\n  async _buildRequest (msg) {\n    this.view.msg = Object.assign({}, msg)\n\n    const nonEncodedMessage = this.view.msg.messageText\n\n    this.view.msg.messageText = nonEncodedMessage && encodeURIComponent(nonEncodedMessage)\n\n    if (this.caps[Capabilities.SIMPLEREST_STEP_ID_TEMPLATE]) {\n      this.view.botium.stepId = this._getMustachedCap(Capabilities.SIMPLEREST_STEP_ID_TEMPLATE, false)\n    } else {\n      this.view.botium.stepId = uuidv4()\n    }\n\n    const uri = this._getMustachedCap(Capabilities.SIMPLEREST_URL, false)\n    const timeout = this._getCapValue(Capabilities.SIMPLEREST_TIMEOUT)\n\n    const requestOptions = {\n      uri,\n      method: this._getCapValue(Capabilities.SIMPLEREST_VERB) || this._getCapValue(Capabilities.SIMPLEREST_METHOD),\n      followAllRedirects: true,\n      timeout\n    }\n\n    if (this.caps[Capabilities.SIMPLEREST_HEADERS_TEMPLATE]) {\n      this.view.msg.messageText = nonEncodedMessage\n      try {\n        requestOptions.headers = this._getMustachedCap(Capabilities.SIMPLEREST_HEADERS_TEMPLATE, true)\n      } catch (err) {\n        throw new Error(`composing headers from SIMPLEREST_HEADERS_TEMPLATE failed (${err.message})`)\n      }\n    }\n    if (this.caps[Capabilities.SIMPLEREST_BODY_TEMPLATE]) {\n      const bodyRaw = this._getCapValue(Capabilities.SIMPLEREST_BODY_RAW)\n      if (bodyRaw) {\n        this.view.msg.messageText = nonEncodedMessage\n      } else {\n        this.view.msg.messageText = nonEncodedMessage && escapeJSONString(nonEncodedMessage)\n      }\n      try {\n        requestOptions.body = this._getMustachedCap(Capabilities.SIMPLEREST_BODY_TEMPLATE, !bodyRaw)\n        requestOptions.json = !bodyRaw\n      } catch (err) {\n        throw new Error(`composing body from SIMPLEREST_BODY_TEMPLATE failed (${err.message})`)\n      }\n    }\n    this.view.msg.messageText = nonEncodedMessage\n\n    if (msg.ADD_QUERY_PARAM && Object.keys(msg.ADD_QUERY_PARAM).length > 0) {\n      const appendToUri = Object.keys(msg.ADD_QUERY_PARAM).map(key =>\n        `${encodeURIComponent(key)}=${encodeURIComponent(this._getMustachedVal(\n          _.isString(msg.ADD_QUERY_PARAM[key]) ? msg.ADD_QUERY_PARAM[key] : JSON.stringify(msg.ADD_QUERY_PARAM[key]),\n          false))}`)\n        .join('&')\n      if (requestOptions.uri.indexOf('?') > 0) {\n        requestOptions.uri = `${requestOptions.uri}&${appendToUri}`\n      } else {\n        requestOptions.uri = `${requestOptions.uri}?${appendToUri}`\n      }\n    }\n    if (msg.ADD_HEADER && Object.keys(msg.ADD_HEADER).length > 0) {\n      requestOptions.headers = requestOptions.headers || {}\n\n      for (const headerKey of Object.keys(msg.ADD_HEADER)) {\n        let headerValue\n        if (_.isString(msg.ADD_HEADER[headerKey])) {\n          headerValue = this._getMustachedVal(msg.ADD_HEADER[headerKey], false)\n        } else {\n          headerValue = this._getMustachedVal(JSON.stringify(msg.ADD_HEADER[headerKey]), true)\n        }\n        requestOptions.headers[headerKey] = headerValue\n      }\n    }\n    this._addRequestOptions(requestOptions)\n\n    await executeHook(this.caps, this.requestHook, Object.assign({ requestOptions }, this.view))\n\n    return requestOptions\n  }\n\n  async _waitForUrlResponse (pingConfig, retries) {\n    const timeout = ms => new Promise(resolve => setTimeout(resolve, ms))\n\n    let tries = 0\n\n    while (true) {\n      debug(`_waitForUrlResponse checking url ${pingConfig.uri} before proceed`)\n      if (tries > retries) {\n        throw new Error(`Failed to ping bot after ${retries} retries`)\n      }\n      tries++\n      const { err, response, body } = await new Promise((resolve) => {\n        request(pingConfig, (err, response, body) => {\n          resolve({ err, response, body })\n        })\n      })\n      if (err) {\n        debug(`_waitForUrlResponse error on url check ${pingConfig.uri}: ${err}`)\n        await timeout(pingConfig.timeout)\n      } else if (response.statusCode >= 400) {\n        debug(`_waitForUrlResponse on url check ${pingConfig.uri} got error response: ${response.statusCode}/${response.statusMessage}`)\n        await timeout(pingConfig.timeout)\n      } else {\n        debug(`_waitForUrlResponse success on url check ${pingConfig.uri}`)\n        return body\n      }\n    }\n  }\n\n  async _parseResponseBody (body) {\n    if (!_.isObject(body) && _.isString(body)) {\n      try {\n        body = JSON.parse(body)\n      } catch (err) {\n        if (!this.parserHook) throw err\n      }\n    }\n    if (this.parserHook) {\n      await executeHook(this.caps, this.parserHook, Object.assign({ body, changeBody: (b) => { body = b } }, this.view))\n    }\n    if (_.isObject(body)) return body\n    else if (_.isString(body)) return JSON.parse(body)\n    else return null\n  }\n\n  _getCapValue (capName) {\n    return _.isFunction(this.caps[capName]) ? (this.caps[capName])() : this.caps[capName]\n  }\n\n  _getMustachedCap (capName, json) {\n    const capValue = this._getCapValue(capName)\n    const template = _.isString(capValue) ? capValue : JSON.stringify(capValue)\n    return this._getMustachedVal(template, json)\n  }\n\n  _getMustachedVal (template, json) {\n    const raw = Mustache.render(template, this.view)\n    if (json) {\n      try {\n        return JSON.parse(raw)\n      } catch (err) {\n        return new Error(`JSON parsing failed - try to use {{#fnc.jsonify}}{{xxx}}{{/fnc.jsonify}} to escape JSON special characters (ERR: ${err.message})`)\n      }\n    } else {\n      return raw\n    }\n  }\n\n  _processInboundEvent (event) {\n    if (!this.processInbound) return\n\n    const jsonPathValue = this.caps[Capabilities.SIMPLEREST_INBOUND_SELECTOR_VALUE]\n    const jsonPathsSelector = getAllCapValues(Capabilities.SIMPLEREST_INBOUND_SELECTOR_JSONPATH, this.caps)\n    if (jsonPathsSelector && jsonPathsSelector.length > 0) {\n      let isSelected = false\n      for (const jsonPathTemplate of jsonPathsSelector) {\n        const jsonPath = this._getMustachedVal(jsonPathTemplate, false)\n        const hasResult = jp.query(event, jsonPath)\n        if (hasResult && hasResult.length > 0) {\n          const check = jsonPathValue && this._getMustachedVal(jsonPathValue, false)\n          if (check) {\n            if (`${hasResult[0]}` === `${check}`) {\n              isSelected = true\n              break\n            }\n          } else {\n            isSelected = true\n            break\n          }\n        }\n      }\n      if (!isSelected) return\n    }\n\n    debug(`Received an inbound message: ${JSON.stringify(event)}`)\n    if (this.caps[Capabilities.SIMPLEREST_INBOUND_ORDER_UNSETTLED_EVENTS_JSONPATH]) {\n      this.inboundEvents.push(event)\n      this._processOrderedInboundEventsArrayAsync()\n    } else {\n      setTimeout(() => this._processBodyAsync(event.body, true, !!this.caps[Capabilities.SIMPLEREST_INBOUND_UPDATE_CONTEXT]), 0)\n    }\n  }\n\n  async _buildInbound () {\n    if (this.caps[Capabilities.SIMPLEREST_INBOUND_REDISURL] && this.caps[Capabilities.SIMPLEREST_INBOUND_SELECTOR_JSONPATH] && this.caps[Capabilities.SIMPLEREST_INBOUND_SELECTOR_VALUE]) {\n      this.redis = new Redis(this.caps[Capabilities.SIMPLEREST_INBOUND_REDISURL])\n      this.redis.on('connect', () => {\n        debug(`Redis connected to ${JSON.stringify(this.caps[Capabilities.SIMPLEREST_INBOUND_REDISURL] || 'default')}`)\n      })\n      this.redis.on('message', (channel, event) => {\n        if (!_.isString(event)) {\n          return debug(`WARNING: received non-string message from ${channel}, ignoring: ${event}`)\n        }\n        try {\n          event = JSON.parse(event)\n        } catch (err) {\n          return debug(`WARNING: received non-json message from ${channel}, ignoring: ${event}`)\n        }\n        this._processInboundEvent(event)\n      })\n    } else if (this.caps[Capabilities.SIMPLEREST_INBOUND_PORT]) {\n      this.proxy = await startProxy({\n        port: this.caps[Capabilities.SIMPLEREST_INBOUND_PORT],\n        endpoint: this.caps[Capabilities.SIMPLEREST_INBOUND_ENDPOINT],\n        processEvent: (event) => {\n          if (this.processingEvents) {\n            debug('Got Inbound Event:')\n            debug(JSON.stringify(event, null, 2))\n            this._processInboundEvent(event)\n          }\n        }\n      })\n    }\n  }\n\n  async _subscribeInbound () {\n    this.processingEvents = true\n    if (this.redis) {\n      try {\n        const count = await this.redis.subscribe(this.redisTopic)\n        debug(`Redis subscribed to ${count} channels. Listening for inbound messages on the ${this.redisTopic} channel.`)\n      } catch (err) {\n        debug(err)\n        throw new Error(`Redis failed to subscribe channel ${this.redisTopic}: ${err.message || err}`)\n      }\n    }\n  }\n\n  async _unsubscribeInbound () {\n    this.processingEvents = false\n    if (this.redis) {\n      try {\n        await this.redis.unsubscribe(this.redisTopic)\n        debug(`Redis unsubscribed from ${this.redisTopic} channel.`)\n      } catch (err) {\n        debug(err)\n        throw new Error(`Redis failed to unsubscribe channel ${this.redisTopic}: ${err.message || err}`)\n      }\n    }\n  }\n\n  async _cleanInbound () {\n    if (this.redis) {\n      this.redis.disconnect()\n      this.redis = null\n    }\n    if (this.proxy) {\n      this.proxy.close()\n      this.proxy = null\n    }\n  }\n\n  async _runPolling () {\n    if (!this.processInbound) return\n\n    if (this.caps[Capabilities.SIMPLEREST_POLL_URL]) {\n      const uri = this._getMustachedCap(Capabilities.SIMPLEREST_POLL_URL, false)\n      const verb = this._getCapValue(Capabilities.SIMPLEREST_POLL_VERB)\n      const timeout = this._getCapValue(Capabilities.SIMPLEREST_POLL_TIMEOUT)\n      const pollConfig = {\n        method: verb,\n        uri: uri,\n        followAllRedirects: true,\n        timeout: timeout\n      }\n      if (this.caps[Capabilities.SIMPLEREST_POLL_HEADERS]) {\n        try {\n          pollConfig.headers = this._getMustachedCap(Capabilities.SIMPLEREST_POLL_HEADERS, true)\n        } catch (err) {\n          debug(`_runPolling: composing headers from SIMPLEREST_POLL_HEADERS failed (${err.message})`)\n          return\n        }\n      }\n      if (this.caps[Capabilities.SIMPLEREST_POLL_BODY]) {\n        const bodyRaw = this._getCapValue(Capabilities.SIMPLEREST_POLL_BODY_RAW)\n        try {\n          pollConfig.body = this._getMustachedCap(Capabilities.SIMPLEREST_POLL_BODY, !bodyRaw)\n          pollConfig.json = !bodyRaw\n        } catch (err) {\n          debug(`_runPolling: composing body from SIMPLEREST_POLL_BODY failed (${err.message})`)\n          return\n        }\n      }\n      this._addRequestOptions(pollConfig)\n\n      try {\n        await executeHook(this.caps, this.pollRequestHook, Object.assign({ requestOptions: pollConfig }, this.view))\n      } catch (err) {\n        debug(`_runPolling: exeucting request hook failed - (${err.message})`)\n        return\n      }\n      request(pollConfig, async (err, response, body) => {\n        if (err) {\n          debug(`_runPolling: rest request failed: ${err.message}, request: ${JSON.stringify(pollConfig)}`)\n        } else {\n          if (response.statusCode >= 400) {\n            debug(`_runPolling: got error response: ${response.statusCode}/${response.statusMessage}, request: ${JSON.stringify(pollConfig)}`)\n          } else if (body) {\n            debug(`_runPolling: got response code: ${response.statusCode}, body: ${botiumUtils.shortenJsonString(body)}`)\n\n            try {\n              body = await this._parseResponseBody(body)\n            } catch (err) {\n              debug(`_runPolling: ignoring not JSON formatted response body: ${err.message}`)\n              return\n            }\n            if (body) {\n              setTimeout(() => this._processBodyAsync(body, true, !!this.caps[Capabilities.SIMPLEREST_POLL_UPDATE_CONTEXT]), 0)\n            } else {\n              debug('_runPolling: ignoring response body (no string and no JSON object)')\n            }\n          } else {\n            debug(`_runPolling: got response code: ${response.statusCode}, empty body`)\n          }\n        }\n      })\n    }\n  }\n\n  async _startPolling () {\n    if (this.caps[Capabilities.SIMPLEREST_POLL_URL]) {\n      this.pollInterval = setInterval(this._runPolling.bind(this), this.caps[Capabilities.SIMPLEREST_POLL_INTERVAL])\n      debug(`Started HTTP polling for inbound messages on ${this.caps[Capabilities.SIMPLEREST_POLL_URL]}, interval: ${this.caps[Capabilities.SIMPLEREST_POLL_INTERVAL]}.`)\n    }\n  }\n\n  async _stopPolling () {\n    if (this.pollInterval) {\n      clearInterval(this.pollInterval)\n      this.pollInterval = null\n      debug(`Stopped HTTP polling for inbound messages on ${this.caps[Capabilities.SIMPLEREST_POLL_URL]}.`)\n    }\n  }\n\n  async _makeCall (capPrefix) {\n    const uri = this._getMustachedCap(`${capPrefix}_URL`, false)\n    const verb = this._getCapValue(`${capPrefix}_VERB`)\n    const timeout = this._getCapValue(`${capPrefix}_TIMEOUT`) || this._getCapValue(Capabilities.SIMPLEREST_TIMEOUT)\n    const httpConfig = {\n      method: verb,\n      uri: uri,\n      followAllRedirects: true,\n      timeout: timeout\n    }\n    if (this.caps[`${capPrefix}_HEADERS`]) {\n      try {\n        httpConfig.headers = this._getMustachedCap(`${capPrefix}_HEADERS`, true)\n      } catch (err) {\n        throw new Error(`composing headers from ${capPrefix}_HEADERS failed (${err.message})`)\n      }\n    }\n    if (this.caps[`${capPrefix}_BODY`]) {\n      const bodyRaw = this._getCapValue(`${capPrefix}_BODY_RAW`)\n      try {\n        httpConfig.body = this._getMustachedCap(`${capPrefix}_BODY`, !bodyRaw)\n        httpConfig.json = !bodyRaw\n      } catch (err) {\n        throw new Error(`composing body from ${capPrefix}_BODY failed (${err.message})`)\n      }\n    }\n    this._addRequestOptions(httpConfig)\n\n    await executeHook(this.caps, this.requestHooks[capPrefix], Object.assign({ requestOptions: httpConfig }, this.view))\n\n    const retries = this._getCapValue(`${capPrefix}_RETRIES`)\n    debug(`_makeCall(${capPrefix}): rest request: ${JSON.stringify(httpConfig)}`)\n    const response = await this._waitForUrlResponse(httpConfig, retries)\n    return response\n  }\n\n  _addRequestOptions (httpConfig) {\n    httpConfig.strictSSL = !!this.caps[Capabilities.SIMPLEREST_STRICT_SSL]\n    if (this.caps[Capabilities.SIMPLEREST_PROXY_URL]) {\n      httpConfig.proxy = this.caps[Capabilities.SIMPLEREST_PROXY_URL]\n    }\n    if (this.caps[Capabilities.SIMPLEREST_EXTRA_OPTIONS]) {\n      _.merge(httpConfig, this.caps[Capabilities.SIMPLEREST_EXTRA_OPTIONS])\n    }\n  }\n}\n","const path = require('path')\nconst fs = require('fs')\nconst _ = require('lodash')\nconst debug = require('debug')('botium-connector-PluginConnectorContainer-helper')\n\nconst SimpleRestContainer = require('./SimpleRestContainer')\nconst Capabilities = require('../../Capabilities')\nconst { BotiumError } = require('../../scripting/BotiumError')\n\nconst pluginResolver = (containermode) => {\n  if (containermode === 'simplerest') {\n    return SimpleRestContainer\n  }\n}\n\nconst getModuleVersionSafe = (required) => {\n  try {\n    const pckg = require(required + '/package.json')\n    if (pckg.version === undefined) {\n      return 'Not set'\n    } else {\n      return pckg.version\n    }\n  } catch (e) {\n    if (e.code !== 'MODULE_NOT_FOUND') {\n      return 'Unknown error while determining version'\n    }\n    return 'Unknown version'\n  }\n}\n\nconst loadConnectorModule = (PluginClass, args) => {\n  try {\n    return new PluginClass(args)\n  } catch (err) {\n  }\n  if (_.isFunction(PluginClass)) {\n    const result = PluginClass(args)\n    if (result && result.UserSays) {\n      return result\n    } else {\n      return {\n        UserSays: (msg) => {\n          const response = PluginClass(msg, args)\n          if (response && args.queueBotSays) {\n            if (_.isString(response)) {\n              setTimeout(() => args.queueBotSays({ messageText: response }), 0)\n            } else {\n              setTimeout(() => args.queueBotSays(response), 0)\n            }\n          }\n        }\n      }\n    }\n  } else {\n    throw new Error('Botium Plugin is neither a class nor a function')\n  }\n}\n\nconst tryLoadPlugin = (containermode, modulepath, args) => {\n  const pluginLoaderSpec = modulepath || containermode\n  const _checkUnsafe = (caps, mode, cause) => {\n    if (!caps[Capabilities.SECURITY_ALLOW_UNSAFE]) {\n      throw new BotiumError(\n        `Security Error. Using unsafe connector mode \"${mode}\" is not allowed`,\n        {\n          type: 'security',\n          subtype: 'allow unsafe',\n          source: 'src/containers/plugins/index.js',\n          cause: {\n            SECURITY_ALLOW_UNSAFE: caps[Capabilities.SECURITY_ALLOW_UNSAFE],\n            mode: mode,\n            ...cause\n          }\n        }\n      )\n    }\n  }\n\n  if (pluginResolver(pluginLoaderSpec)) {\n    const pluginInstance = new (pluginResolver(pluginLoaderSpec))(args)\n    debug('Botium plugin loaded from internal plugin resolver')\n    return pluginInstance\n  }\n  if (_.isFunction(pluginLoaderSpec)) {\n    const pluginInstance = pluginLoaderSpec(args)\n    debug('Botium plugin loaded from function call')\n    return pluginInstance\n  }\n  const loadErr = []\n\n  if (_.isString(pluginLoaderSpec)) {\n    const tryLoadFile = path.resolve(process.cwd(), pluginLoaderSpec)\n    if (fs.existsSync(tryLoadFile)) {\n      _checkUnsafe(args.caps, 'Using work dir', { modulepath, containermode })\n      try {\n        let plugin = require(tryLoadFile)\n        if (plugin.default) {\n          plugin = plugin.default\n        }\n        if (!plugin.PluginVersion || !plugin.PluginClass) {\n          loadErr.push(`Invalid Botium plugin loaded from ${tryLoadFile}, expected PluginVersion, PluginClass fields`)\n        } else {\n          const pluginInstance = loadConnectorModule(plugin.PluginClass, args)\n          debug(`Botium plugin loaded from ${tryLoadFile}`)\n          return pluginInstance\n        }\n      } catch (err) {\n        loadErr.push(`Loading Botium plugin from ${tryLoadFile} failed - ${err.message}`)\n      }\n    }\n\n    try {\n      let plugin = require(pluginLoaderSpec)\n      if (plugin.default) {\n        plugin = plugin.default\n      }\n      if (!plugin.PluginVersion || !plugin.PluginClass) {\n        loadErr.push(`Invalid Botium plugin loaded from ${pluginLoaderSpec}, expected PluginVersion, PluginClass fields`)\n      } else {\n        const pluginInstance = loadConnectorModule(plugin.PluginClass, args)\n        debug(`Botium plugin loaded from ${pluginLoaderSpec}. Plugin version is ${getModuleVersionSafe(pluginLoaderSpec)}`)\n        return pluginInstance\n      }\n    } catch (err) {\n      loadErr.push(`Loading Botium plugin from ${pluginLoaderSpec} failed - ${err.message}`)\n    }\n\n    const tryLoadPackage = `botium-connector-${pluginLoaderSpec}`\n    try {\n      let plugin = require(tryLoadPackage)\n      if (plugin.default) {\n        plugin = plugin.default\n      }\n      if (!plugin.PluginVersion || !plugin.PluginClass) {\n        loadErr.push(`Invalid Botium plugin ${tryLoadPackage}, expected PluginVersion, PluginClass fields`)\n      } else {\n        const pluginInstance = loadConnectorModule(plugin.PluginClass, args)\n        debug(`Botium plugin ${tryLoadPackage} loaded. Plugin version is ${getModuleVersionSafe(tryLoadPackage)}`)\n        return pluginInstance\n      }\n    } catch (err) {\n      loadErr.push(`Loading Botium plugin ${tryLoadPackage} failed, try \"npm install ${tryLoadPackage}\" - ${err.message}`)\n    }\n  }\n  throw new Error(`Loading Botium Plugin failed.\\r\\n${loadErr.join('\\r\\n')}`)\n}\n\nmodule.exports = {\n  pluginResolver,\n  getModuleVersionSafe,\n  tryLoadPlugin\n}\n","const util = require('util')\nconst promiseRetry = require('promise-retry')\nconst debug = require('debug')('botium-connector-PluginConnectorContainer')\n\nconst Events = require('../Events')\nconst Capabilities = require('../Capabilities')\nconst BaseContainer = require('./BaseContainer')\nconst { tryLoadPlugin } = require('./plugins/index')\nconst RetryHelper = require('../helpers/RetryHelper')\n\nmodule.exports = class PluginConnectorContainer extends BaseContainer {\n  async Validate () {\n    await super.Validate()\n    this.pluginInstance = tryLoadPlugin(\n      this.caps[Capabilities.CONTAINERMODE],\n      this.caps[Capabilities.PLUGINMODULEPATH],\n      {\n        container: this,\n        queueBotSays: (msg) => this._QueueBotSays(msg),\n        eventEmitter: this.eventEmitter,\n        caps: this.caps,\n        sources: this.sources,\n        envs: this.envs\n      })\n    if (!this.pluginInstance) {\n      throw new Error('Loading Botium plugin failed')\n    }\n    if (!this.pluginInstance.UserSays) {\n      throw new Error('Invalid Botium plugin, expected UserSays function')\n    }\n    if (this.pluginInstance.Validate) {\n      await this.pluginInstance.Validate()\n    }\n    this.retryHelperBuild = new RetryHelper(this.caps, 'BUILD')\n    this.retryHelperStart = new RetryHelper(this.caps, 'START')\n    this.retryHelperUserSays = new RetryHelper(this.caps, 'USERSAYS')\n    this.retryHelperStop = new RetryHelper(this.caps, 'STOP')\n    this.retryHelperClean = new RetryHelper(this.caps, 'CLEAN')\n  }\n\n  Build () {\n    try {\n      return super.Build().then(() => promiseRetry((retry, number) => {\n        return (this.pluginInstance.Build ? (this.pluginInstance.Build() || Promise.resolve()) : Promise.resolve())\n          .catch((err) => {\n            if (this.retryHelperBuild.shouldRetry(err)) {\n              debug(`Build trial #${number} failed, retry activated`)\n              retry(err)\n            } else {\n              throw err\n            }\n          })\n      }, this.retryHelperBuild.retrySettings))\n        .then(() => this)\n    } catch (err) {\n      return Promise.reject(new Error(`Build - Botium plugin failed: ${util.inspect(err)}`))\n    }\n  }\n\n  Start () {\n    this.eventEmitter.emit(Events.CONTAINER_STARTING, this)\n\n    try {\n      return super.Start().then(() => promiseRetry((retry, number) => {\n        return (this.pluginInstance.Start ? (this.pluginInstance.Start() || Promise.resolve()) : Promise.resolve())\n          .catch((err) => {\n            if (this.retryHelperStart.shouldRetry(err)) {\n              debug(`Start trial #${number} failed, retry activated`)\n              retry(err)\n            } else {\n              throw err\n            }\n          })\n      }, this.retryHelperStart.retrySettings))\n        .then((context) => {\n          this.eventEmitter.emit(Events.CONTAINER_STARTED, this, context)\n          return this\n        }).catch((err) => {\n          this.eventEmitter.emit(Events.CONTAINER_START_ERROR, this, err)\n          throw err\n        })\n    } catch (err) {\n      this.eventEmitter.emit(Events.CONTAINER_START_ERROR, this, err)\n      return Promise.reject(new Error(`Start - Botium plugin failed: ${util.inspect(err)}`))\n    }\n  }\n\n  UserSaysImpl (mockMsg) {\n    try {\n      return promiseRetry((retry, number) => {\n        return (this.pluginInstance.UserSays(mockMsg) || Promise.resolve())\n          .catch((err) => {\n            if (this.retryHelperUserSays.shouldRetry(err)) {\n              debug(`UserSays trial #${number} failed, retry activated`)\n              retry(err)\n            } else {\n              throw err\n            }\n          })\n      }, this.retryHelperUserSays.retrySettings)\n        .then(() => {\n          this.eventEmitter.emit(Events.MESSAGE_SENTTOBOT, this, mockMsg)\n          return this\n        })\n    } catch (err) {\n      return Promise.reject(new Error(`UserSays - Botium plugin failed: ${util.inspect(err)}`))\n    }\n  }\n\n  Stop () {\n    this.eventEmitter.emit(Events.CONTAINER_STOPPING, this)\n\n    try {\n      return super.Stop().then(() => promiseRetry((retry, number) => {\n        return (this.pluginInstance.Stop ? (this.pluginInstance.Stop() || Promise.resolve()) : Promise.resolve())\n          .catch((err) => {\n            if (this.retryHelperStop.shouldRetry(err)) {\n              debug(`Stop trial #${number} failed, retry activated`)\n              retry(err)\n            } else {\n              throw err\n            }\n          })\n      }, this.retryHelperStop.retrySettings))\n        .then((context) => {\n          this.eventEmitter.emit(Events.CONTAINER_STOPPED, this, context)\n          return this\n        }).catch((err) => {\n          this.eventEmitter.emit(Events.CONTAINER_STOP_ERROR, this, err)\n          throw err\n        })\n    } catch (err) {\n      this.eventEmitter.emit(Events.CONTAINER_STOP_ERROR, this, err)\n      return Promise.reject(new Error(`Stop - Botium plugin failed: ${util.inspect(err)}`))\n    }\n  }\n\n  Clean () {\n    this.eventEmitter.emit(Events.CONTAINER_CLEANING, this)\n    try {\n      return promiseRetry((retry, number) => {\n        return (this.pluginInstance.Clean ? (this.pluginInstance.Clean() || Promise.resolve()) : Promise.resolve())\n          .catch((err) => {\n            if (this.retryHelperClean.shouldRetry(err)) {\n              debug(`Clean trial #${number} failed, retry activated`)\n              retry(err)\n            } else {\n              throw err\n            }\n          })\n      }, this.retryHelperClean.retrySettings)\n        .then(() => super.Clean()).then(() => {\n          this.eventEmitter.emit(Events.CONTAINER_CLEANED, this)\n          return this\n        }).catch((err) => {\n          this.eventEmitter.emit(Events.CONTAINER_CLEAN_ERROR, this, err)\n          throw err\n        })\n    } catch (err) {\n      this.eventEmitter.emit(Events.CONTAINER_CLEAN_ERROR, this, err)\n      return Promise.reject(new Error(`Clean - Botium plugin failed: ${util.inspect(err)}`))\n    }\n  }\n}\n","const util = require('util')\nconst fs = require('fs')\nconst path = require('path')\nconst async = require('async')\nconst rimraf = require('rimraf')\nconst mkdirp = require('mkdirp')\nconst sanitize = require('sanitize-filename')\nconst moment = require('moment')\nconst randomize = require('randomatic')\nconst _ = require('lodash')\nconst { boolean } = require('boolean')\nconst EventEmitter = require('events')\nconst debug = require('debug')('botium-core-BotDriver')\n\nconst { version } = require('../package.json')\n\nconst Defaults = require('./Defaults')\nconst Capabilities = require('./Capabilities')\nconst Source = require('./Source')\nconst Fluent = require('./Fluent')\nconst Events = require('./Events')\nconst ScriptingProvider = require('./scripting/ScriptingProvider')\n\nmodule.exports = class BotDriver {\n  constructor (caps = {}, sources = {}, envs = {}) {\n    this.eventEmitter = new EventEmitter()\n\n    this.caps = _.cloneDeep(Defaults.Capabilities)\n    this.sources = _.cloneDeep(Defaults.Sources)\n    this.envs = _.cloneDeep(Defaults.Envs)\n\n    this._fetchedConfigFiles = []\n    this._fetchConfigFromFiles([\n      './botium.json', process.env.NODE_ENV && `./botium.${process.env.NODE_ENV}.json`,\n      './botium.local.json', process.env.NODE_ENV && `./botium.${process.env.NODE_ENV}.local.json`])\n\n    const botiumConfigEnv = process.env.BOTIUM_CONFIG\n    if (botiumConfigEnv) {\n      const checkDir = path.dirname(botiumConfigEnv)\n      const checkFileBase = path.basename(botiumConfigEnv, '.json')\n      if (!this._fetchConfigFromFiles([\n        botiumConfigEnv, process.env.NODE_ENV && path.join(checkDir, `${checkFileBase}.${process.env.NODE_ENV}.json`),\n        path.join(checkDir, `${checkFileBase}.local.json`), process.env.NODE_ENV && path.join(checkDir, `${checkFileBase}.${process.env.NODE_ENV}.local.json`)\n      ])) {\n        throw new Error(`FAILED: Botium configuration file ${botiumConfigEnv} not available`)\n      }\n    }\n    debug(`Loaded Botium configuration files ${this._fetchedConfigFiles.join(',')}`)\n\n    const sourcesToTest = Object.keys(Source)\n\n    Object.keys(process.env).filter(e => e.startsWith('BOTIUM_')).forEach((element) => {\n      const elementToTest = element.replace(/^BOTIUM_/, '')\n      if (sourcesToTest.includes(elementToTest)) {\n        this._mergeCaps(this.sources, { [elementToTest]: process.env[element] })\n      } else {\n        this._mergeCaps(this.caps, { [elementToTest]: process.env[element] })\n      }\n      if (element.startsWith('BOTIUM_ENV_')) {\n        const envName = element.replace(/^BOTIUM_ENV_/, '')\n        this.envs[envName] = process.env[element]\n      }\n    })\n\n    if (caps) this._mergeCaps(this.caps, caps)\n    if (sources) this._mergeCaps(this.sources, sources)\n    if (envs) this.envs = _.merge(this.envs, envs)\n  }\n\n  on (event, listener) {\n    this.eventEmitter.on(event, listener)\n    return this\n  }\n\n  setCapabilities (caps) {\n    this._mergeCaps(this.caps, caps)\n    return this\n  }\n\n  setCapability (cap, value) {\n    this._mergeCaps(this.caps, { [cap]: value })\n    return this\n  }\n\n  setSources (sources) {\n    this._mergeCaps(this.sources, sources)\n    return this\n  }\n\n  setSource (source, value) {\n    this._mergeCaps(this.sources, { [source]: value })\n    return this\n  }\n\n  setEnvs (envs) {\n    this.envs = _.merge(this.envs, envs)\n    return this\n  }\n\n  setEnv (name, value) {\n    this.envs[name] = value\n    return this\n  }\n\n  BuildFluent () {\n    this.Fluent = new Fluent(this)\n    return this.Fluent\n  }\n\n  Build () {\n    debug(`Build - Botium Core Version: ${version}`)\n    debug(`Build - Capabilites: ${util.inspect(this.caps)}`)\n    debug(`Build - Sources : ${util.inspect(this.sources)}`)\n    debug(`Build - Envs : ${util.inspect(this.envs)}`)\n    this.eventEmitter.emit(Events.CONTAINER_BUILDING)\n\n    return new Promise((resolve, reject) => {\n      let repo = null\n      let container = null\n\n      async.series([\n\n        (driverValidated) => {\n          this._validate()\n            .then(() => driverValidated())\n            .catch(driverValidated)\n        },\n\n        (repoValidated) => {\n          try {\n            repo = this._getRepo()\n          } catch (err) {\n            return repoValidated(err)\n          }\n          repo.Validate().then(() => repoValidated()).catch(repoValidated)\n        },\n\n        (repoPrepared) => {\n          repo.Prepare().then(() => repoPrepared()).catch(repoPrepared)\n        },\n\n        (containerValidated) => {\n          try {\n            container = this._getContainer(repo)\n          } catch (err) {\n            return containerValidated(err)\n          }\n          container.Validate().then(() => containerValidated()).catch(containerValidated)\n        },\n\n        (containerBuilt) => {\n          container.Build().then(() => containerBuilt()).catch(containerBuilt)\n        }\n\n      ], (err) => {\n        if (err) {\n          debug(`BotDriver Build error: ${err}`)\n          this.eventEmitter.emit(Events.CONTAINER_BUILD_ERROR, err)\n          if (this.tempDirectory) {\n            rimraf(this.tempDirectory, (err) => {\n              if (err) debug(`Cleanup temp dir ${this.tempDirectory} failed: ${util.inspect(err)}`)\n            })\n          }\n          return reject(err)\n        }\n        this.eventEmitter.emit(Events.CONTAINER_BUILT, container)\n        resolve(container)\n      })\n    })\n  }\n\n  BuildCompiler () {\n    try {\n      const compiler = new ScriptingProvider(this.caps)\n      compiler.Build()\n      return compiler\n    } catch (err) {\n      debug(`BotDriver BuildCompiler error: ${err}`)\n      throw err\n    }\n  }\n\n  /* Private Functions */\n\n  // loadConfig from files\n  _loadConfigFile (filename) {\n    try {\n      const configJson = JSON.parse(fs.readFileSync(filename))\n      if (configJson.botium) {\n        if (configJson.botium.Capabilities) this._mergeCaps(this.caps, configJson.botium.Capabilities)\n        if (configJson.botium.Sources) this._mergeCaps(this.sources, configJson.botium.Sources)\n        if (configJson.botium.Envs) this._mergeCaps(this.envs, configJson.botium.Envs)\n        return true\n      } else {\n        debug(`Botium configuration file ${filename} contains no botium configuration. Ignored.`)\n        return false\n      }\n    } catch (err) {\n      throw new Error(`FAILED: loading Botium configuration file ${filename}: ${util.inspect(err)}`)\n    }\n  }\n\n  // fetches config from files ordered by priority later files overwrite previous\n  _fetchConfigFromFiles (files) {\n    const fetchedFiles = []\n    for (const file of files) {\n      if (file && fs.existsSync(file)) {\n        const absFilePath = path.resolve(file)\n        if (this._fetchedConfigFiles.indexOf(absFilePath) < 0) {\n          this._loadConfigFile(file)\n          fetchedFiles.push(file)\n          this._fetchedConfigFiles.push(absFilePath)\n        } else {\n          fetchedFiles.push(file)\n        }\n      }\n    }\n    return fetchedFiles\n  }\n\n  _findKeyProperty (obj) {\n    const lookup = ['id', 'ID', 'Id', 'ref', 'REF', 'Ref', 'name', 'NAME', 'Name']\n    for (const checkPropIdx in lookup) {\n      if (Object.prototype.hasOwnProperty.call(obj, lookup[checkPropIdx])) return lookup[checkPropIdx]\n    }\n  }\n\n  _mergeCaps (caps, newCaps) {\n    if (!caps) return\n    Object.keys(newCaps).forEach(capKey => {\n      if (!Object.prototype.hasOwnProperty.call(caps, capKey)) {\n        if (_.isString(newCaps[capKey])) {\n          try {\n            caps[capKey] = JSON.parse(newCaps[capKey])\n            if (_.isFinite(caps[capKey])) {\n              caps[capKey] = caps[capKey].toString()\n            }\n          } catch (err) {\n            caps[capKey] = newCaps[capKey]\n          }\n        } else {\n          caps[capKey] = newCaps[capKey]\n        }\n        return\n      }\n\n      if (_.isArray(caps[capKey])) {\n        let newCapArray = newCaps[capKey]\n        if (!_.isArray(newCapArray)) {\n          try {\n            newCapArray = JSON.parse(newCapArray)\n          } catch (err) {\n            debug(`Expected JSON Array in capability ${capKey}, JSON parse failed (${err}). Capability will be overwritten with maybe unexpected side effects.`)\n          }\n        }\n        if (_.isArray(newCapArray)) {\n          newCapArray.forEach(capElement => {\n            const mergeKey = this._findKeyProperty(capElement)\n            if (mergeKey) {\n              const oldElement = caps[capKey].find(oldElement => oldElement[mergeKey] && oldElement[mergeKey] === capElement[mergeKey])\n              if (oldElement) {\n                _.merge(oldElement, capElement)\n                return\n              }\n              caps[capKey].push(capElement)\n            } else {\n              if (caps[capKey].indexOf(capElement) < 0) {\n                caps[capKey].push(capElement)\n              }\n            }\n          })\n          return\n        }\n      }\n      if (!_.isArray(caps[capKey]) && _.isObject(caps[capKey])) {\n        let newCapObject = newCaps[capKey]\n        if (!_.isObject(newCapObject)) {\n          try {\n            newCapObject = JSON.parse(newCapObject)\n          } catch (err) {\n            debug(`Expected JSON Object in capability ${capKey}, JSON parse failed (${err}). Capability will be overwritten with maybe unexpected side effects.`)\n          }\n        }\n        if (_.isObject(newCapObject)) {\n          _.merge(caps[capKey], newCapObject)\n          return\n        }\n      }\n\n      if (_.isBoolean(caps[capKey])) {\n        if (!_.isBoolean(newCaps[capKey])) {\n          caps[capKey] = boolean(newCaps[capKey])\n          return\n        }\n      }\n\n      caps[capKey] = newCaps[capKey]\n    })\n  }\n\n  _validate () {\n    return new Promise((resolve, reject) => {\n      try {\n        if (!this.caps[Capabilities.PROJECTNAME]) {\n          throw new Error(`Capability property ${Capabilities.PROJECTNAME} not set`)\n        }\n        if (!this.caps[Capabilities.TEMPDIR]) {\n          throw new Error(`Capability property ${Capabilities.TEMPDIR} not set`)\n        }\n        if (!this.caps[Capabilities.CONTAINERMODE] && !this.caps[Capabilities.BOTIUMGRIDURL]) {\n          throw new Error(`Capability '${Capabilities.CONTAINERMODE}' or '${Capabilities.BOTIUMGRIDURL}' missing`)\n        }\n\n        this.tempDirectory = path.resolve(process.cwd(), this.caps[Capabilities.TEMPDIR], sanitize(`${this.caps[Capabilities.PROJECTNAME]} ${moment().format('YYYYMMDD HHmmss')} ${randomize('Aa0', 5)}`))\n        try {\n          mkdirp.sync(this.tempDirectory)\n        } catch (err) {\n          throw new Error(`Unable to create temp directory ${this.tempDirectory}: ${err}`)\n        }\n        resolve(this)\n      } catch (err) {\n        reject(err)\n      }\n    })\n  }\n\n  _getRepo () {\n    if (this.caps[Capabilities.BOTIUMGRIDURL]) {\n      const NoRepo = require('./repos/NoRepo')\n      return new NoRepo(this.tempDirectory, this.sources)\n    }\n    if (this.sources[Source.GITURL]) {\n      const GitRepo = require('./repos/GitRepo')\n      return new GitRepo(this.tempDirectory, this.sources)\n    }\n    if (this.sources[Source.LOCALPATH]) {\n      const LocalRepo = require('./repos/LocalRepo')\n      return new LocalRepo(this.tempDirectory, this.sources)\n    }\n    throw new Error(`No Repo provider found for Sources ${util.inspect(this.sources)}`)\n  }\n\n  _getContainer (repo) {\n    if (this.caps[Capabilities.BOTIUMGRIDURL]) {\n      const GridContainer = require('./containers/GridContainer')\n      return new GridContainer(this.eventEmitter, this.tempDirectory, repo, this.caps, this.envs)\n    }\n    if (!this.caps[Capabilities.CONTAINERMODE]) {\n      throw new Error(`Capability '${Capabilities.CONTAINERMODE}' missing`)\n    }\n    if (this.caps[Capabilities.CONTAINERMODE] === 'inprocess') {\n      const InProcessContainer = require('./containers/InProcessContainer')\n      return new InProcessContainer(this.eventEmitter, this.tempDirectory, repo, this.caps, this.envs)\n    }\n    const PluginConnectorContainer = require('./containers/PluginConnectorContainer')\n    return new PluginConnectorContainer(this.eventEmitter, this.tempDirectory, repo, this.caps, this.envs)\n  }\n}\n","const path = require('path')\nconst fs = require('fs')\nconst debug = require('debug')('botium-core-Plugins')\n\nconst PLUGIN_TYPE_CONNECTOR = 'PLUGIN_TYPE_CONNECTOR'\nconst PLUGIN_TYPE_ASSERTER = 'PLUGIN_TYPE_ASSERTER'\nconst PLUGIN_TYPE_LOGICHOOK = 'PLUGIN_TYPE_LOGICHOOK'\nconst PLUGIN_TYPE_USERINPUT = 'PLUGIN_TYPE_USERINPUT'\n\nconst TYPE_TO_PREFIX = {\n  PLUGIN_TYPE_CONNECTOR: 'botium-connector-',\n  PLUGIN_TYPE_ASSERTER: 'botium-asserter-',\n  PLUGIN_TYPE_LOGICHOOK: 'botium-logichook-',\n  PLUGIN_TYPE_USERINPUT: 'botium-userinput-'\n}\n\nconst TYPE_TO_COMPONENT_TYPE = {\n  PLUGIN_TYPE_ASSERTER: 'ASSERTER',\n  PLUGIN_TYPE_LOGICHOOK: 'LOGICHOOK',\n  PLUGIN_TYPE_USERINPUT: 'USERINPUT'\n}\n\nconst getConnectorPlugin = (filename, pathToRes) => {\n  let PluginType = null\n  if (filename.toLowerCase().startsWith(TYPE_TO_PREFIX[PLUGIN_TYPE_CONNECTOR])) {\n    PluginType = PLUGIN_TYPE_CONNECTOR\n    try {\n      const plugin = require(filename)\n      const pluginPath = require.resolve(filename)\n      if (!pluginPath.startsWith(pathToRes)) {\n        debug(`Plugin mismatch error. Plugin ${path.resolve(pathToRes, filename)} loaded from ${pluginPath}! `)\n        return null\n      }\n      if (!plugin.PluginVersion || !plugin.PluginClass) {\n        debug(`Invalid Botium plugin loaded from ${filename}, expected PluginVersion, PluginClass fields`)\n        return null\n      }\n      if (plugin.PluginType && plugin.PluginType !== PluginType) {\n        debug(`Botium plugin loaded from ${filename}, but its type ${plugin.PluginType} is invalid, will be overwritten with ${PluginType}`)\n      }\n\n      let pluginNameFromFile = filename.substring(TYPE_TO_PREFIX[PLUGIN_TYPE_CONNECTOR].length)\n      if (pluginNameFromFile.toLowerCase().endsWith('.js')) {\n        pluginNameFromFile = pluginNameFromFile.substring(0, pluginNameFromFile.length - '.js'.length)\n      }\n\n      const PluginDesc = plugin.PluginDesc || {}\n      return {\n        PluginVersion: plugin.PluginVersion || '1',\n        PluginType,\n        PluginDesc: {\n          ...PluginDesc,\n          src: pluginNameFromFile\n        }\n      }\n    } catch (err) {\n      debug(`Loading Botium plugin from ${filename} failed - ${err.message}`)\n      return null\n    }\n  }\n  return null\n}\n\nconst getOtherPlugin = (filename, pathToRes, type) => {\n  let PluginType = null\n  if (type !== PLUGIN_TYPE_CONNECTOR && filename.toLowerCase().startsWith(TYPE_TO_PREFIX[type])) {\n    PluginType = type\n  }\n  if (!PluginType) {\n    return null\n  }\n  try {\n    const plugin = require(filename)\n    const pluginPath = require.resolve(filename)\n    if (!pluginPath.startsWith(pathToRes)) {\n      debug(`Plugin mismatch error. Plugin ${path.resolve(pathToRes, filename)} loaded from ${pluginPath}! `)\n      return null\n    }\n    if (plugin.PluginType && plugin.PluginType !== PluginType) {\n      debug(`Botium plugin loaded from ${filename}, but its type ${plugin.PluginType} is invalid, will be overwritten with ${PluginType}`)\n    }\n\n    let pluginName = filename.substring(TYPE_TO_PREFIX[type].length)\n    if (pluginName.toLowerCase().endsWith('.js')) {\n      pluginName = pluginName.substring(0, pluginName.length - '.js'.length)\n    }\n\n    const PluginDesc = plugin.PluginDesc || {}\n\n    return {\n      PluginVersion: plugin.PluginVersion || '1',\n      PluginType,\n      PluginDesc: {\n        name: pluginName,\n        description: PluginDesc.description,\n        type: TYPE_TO_COMPONENT_TYPE[type],\n        src: filename,\n        ref: PluginDesc.ref || pluginName.toUpperCase(),\n        global: PluginDesc.global || false,\n        args: PluginDesc.args || '{}'\n      }\n    }\n  } catch (err) {\n    debug(`Loading Botium plugin from ${filename} failed - ${err.message}`)\n    return null\n  }\n}\n\nconst TYPE_TO_FN = {\n  PLUGIN_TYPE_CONNECTOR: getConnectorPlugin,\n  PLUGIN_TYPE_ASSERTER: getOtherPlugin,\n  PLUGIN_TYPE_LOGICHOOK: getOtherPlugin,\n  PLUGIN_TYPE_USERINPUT: getOtherPlugin\n}\n\nconst getPlugins = async (type, resourcesDir) => {\n  if (!TYPE_TO_FN[type]) {\n    debug(`Invalid plugin type \"${type}\"`)\n    return Promise.resolve([])\n  }\n\n  const pathToRes = path.resolve(resourcesDir)\n  if (!fs.existsSync(pathToRes)) {\n    debug(`Cant load plugins, directory ${pathToRes} does not exists`)\n    return []\n  }\n  let items\n  try {\n    items = fs.readdirSync(pathToRes)\n      .filter(item => path.extname(item) === '.js' || item.indexOf('.') === -1)\n  } catch (err) {\n    debug(`Cant load plugins, failed to read directory ${pathToRes} - ${err.message}`)\n    return []\n  }\n\n  const result = []\n  const pluginNameToPlugin = {}\n  for (let i = 0; i < items.length; i++) {\n    const plugin = TYPE_TO_FN[type](items[i], pathToRes, type)\n    if (plugin) {\n      if (pluginNameToPlugin[plugin.PluginDesc.name]) {\n        debug(`Dropping plugin ${JSON.stringify(plugin)} because name is reserved by ${JSON.stringify(pluginNameToPlugin[plugin.PluginDesc.name])}`)\n      } else {\n        result.push(plugin)\n        pluginNameToPlugin[plugin.PluginDesc.name] = plugin\n      }\n    }\n  }\n  return result\n}\n\nmodule.exports = {\n  getPlugins,\n  PLUGIN_TYPE_CONNECTOR,\n  PLUGIN_TYPE_ASSERTER,\n  PLUGIN_TYPE_LOGICHOOK,\n  PLUGIN_TYPE_USERINPUT,\n  TYPE_TO_PREFIX\n}\n","module.exports = {\n  BotDriver: require('./src/BotDriver'),\n  ScriptingProvider: require('./src/scripting/ScriptingProvider'),\n  ScriptingConstants: require('./src/scripting/Constants'),\n  Capabilities: require('./src/Capabilities'),\n  Defaults: require('./src/Defaults'),\n  Source: require('./src/Source'),\n  Events: require('./src/Events'),\n  Plugins: require('./src/Plugins'),\n  BotiumError: require('./src/scripting/BotiumError').BotiumError,\n  ScriptingMemory: require('./src/scripting/ScriptingMemory'),\n  HookUtils: require('./src/helpers/HookUtils'),\n  LogicHookConstants: require('./src/scripting/logichook/LogicHookConsts'),\n  Lib: {\n    tryLoadPlugin: require('./src/containers/plugins/index').tryLoadPlugin,\n    SimpleRestContainer: require('./src/containers/plugins/SimpleRestContainer')\n  },\n  InboundProxy: require('./src/grid/inbound/proxy'),\n  BotiumMockRichMessageTypes: require('./src/mocks/BotiumMockRichMessageTypes')\n}\n"],"names":["PROJECTNAME","TESTSESSIONNAME","TESTCASENAME","TEMPDIR","CLEANUPTEMPDIR","WAITFORBOTTIMEOUT","CONTAINERMODE","PLUGINMODULEPATH","SIMULATE_WRITING_SPEED","BOTIUMGRIDURL","BOTIUMAPITOKEN","BOTIUMGRIDSLOT","SIMPLEREST_PING_URL","SIMPLEREST_PING_VERB","SIMPLEREST_PING_BODY","SIMPLEREST_PING_BODY_RAW","SIMPLEREST_PING_HEADERS","SIMPLEREST_PING_REQUEST_HOOK","SIMPLEREST_PING_RETRIES","SIMPLEREST_PING_TIMEOUT","SIMPLEREST_PING_UPDATE_CONTEXT","SIMPLEREST_PING_PROCESS_RESPONSE","SIMPLEREST_START_URL","SIMPLEREST_START_VERB","SIMPLEREST_START_BODY","SIMPLEREST_START_BODY_RAW","SIMPLEREST_START_HEADERS","SIMPLEREST_START_REQUEST_HOOK","SIMPLEREST_START_RETRIES","SIMPLEREST_START_TIMEOUT","SIMPLEREST_START_UPDATE_CONTEXT","SIMPLEREST_START_PROCESS_RESPONSE","SIMPLEREST_STOP_URL","SIMPLEREST_STOP_VERB","SIMPLEREST_STOP_BODY","SIMPLEREST_STOP_BODY_RAW","SIMPLEREST_STOP_HEADERS","SIMPLEREST_STOP_REQUEST_HOOK","SIMPLEREST_STOP_RETRIES","SIMPLEREST_STOP_TIMEOUT","SIMPLEREST_INIT_CONTEXT","SIMPLEREST_INIT_TEXT","SIMPLEREST_INIT_PROCESS_RESPONSE","SIMPLEREST_PROXY_URL","SIMPLEREST_STRICT_SSL","SIMPLEREST_URL","SIMPLEREST_EXTRA_OPTIONS","SIMPLEREST_IGNORE_EMPTY","SIMPLEREST_TIMEOUT","SIMPLEREST_METHOD","SIMPLEREST_VERB","SIMPLEREST_HEADERS_TEMPLATE","SIMPLEREST_BODY_TEMPLATE","SIMPLEREST_BODY_RAW","SIMPLEREST_START_HOOK","SIMPLEREST_STOP_HOOK","SIMPLEREST_REQUEST_HOOK","SIMPLEREST_PARSER_HOOK","SIMPLEREST_POLL_URL","SIMPLEREST_POLL_VERB","SIMPLEREST_POLL_BODY","SIMPLEREST_POLL_BODY_RAW","SIMPLEREST_POLL_HEADERS","SIMPLEREST_POLL_REQUEST_HOOK","SIMPLEREST_POLL_INTERVAL","SIMPLEREST_POLL_TIMEOUT","SIMPLEREST_POLL_UPDATE_CONTEXT","SIMPLEREST_BODY_JSONPATH","SIMPLEREST_RESPONSE_JSONPATH","SIMPLEREST_RESPONSE_HOOK","SIMPLEREST_MEDIA_JSONPATH","SIMPLEREST_BUTTONS_JSONPATH","SIMPLEREST_CONTEXT_JSONPATH","SIMPLEREST_CONTEXT_MERGE_OR_REPLACE","SIMPLEREST_CONVERSATION_ID_TEMPLATE","SIMPLEREST_STEP_ID_TEMPLATE","SIMPLEREST_INBOUND_REDISURL","SIMPLEREST_INBOUND_ENDPOINT","SIMPLEREST_INBOUND_PORT","SIMPLEREST_INBOUND_SELECTOR_JSONPATH","SIMPLEREST_INBOUND_SELECTOR_VALUE","SIMPLEREST_INBOUND_UPDATE_CONTEXT","SIMPLEREST_REDIS_TOPIC","SIMPLEREST_INBOUND_ORDER_UNSETTLED_EVENTS_JSONPATH","SIMPLEREST_INBOUND_DEBOUNCE_TIMEOUT","SCRIPTING_TXT_EOL","SCRIPTING_XLSX_MODE","SCRIPTING_XLSX_EOL_WRITE","SCRIPTING_XLSX_STARTROW","SCRIPTING_XLSX_STARTCOL","SCRIPTING_XLSX_HASNAMECOL","SCRIPTING_XLSX_HASHEADERS","SCRIPTING_XLSX_SHEETNAMES","SCRIPTING_XLSX_SHEETNAMES_PCONVOS","SCRIPTING_XLSX_SHEETNAMES_UTTERANCES","SCRIPTING_XLSX_SHEETNAMES_SCRIPTING_MEMORY","SCRIPTING_CSV_DELIMITER","SCRIPTING_CSV_SKIP_HEADER","SCRIPTING_CSV_QUOTE","SCRIPTING_CSV_ESCAPE","SCRIPTING_CSV_MULTIROW_COLUMN_CONVERSATION_ID","SCRIPTING_CSV_MULTIROW_COLUMN_SENDER","SCRIPTING_CSV_MULTIROW_COLUMN_TEXT","SCRIPTING_CSV_QA_COLUMN_QUESTION","SCRIPTING_CSV_QA_COLUMN_ANSWER","SCRIPTING_NORMALIZE_TEXT","SCRIPTING_ENABLE_MEMORY","SCRIPTING_ENABLE_MULTIPLE_ASSERT_ERRORS","SCRIPTING_FORCE_BOT_CONSUMED","SCRIPTING_MATCHING_MODE","SCRIPTING_UTTEXPANSION_MODE","SCRIPTING_UTTEXPANSION_RANDOM_COUNT","SCRIPTING_UTTEXPANSION_INCOMPREHENSION","SCRIPTING_UTTEXPANSION_USENAMEASINTENT","SCRIPTING_UTTEXPANSION_NAMING_MODE","SCRIPTING_UTTEXPANSION_NAMING_UTTERANCE_MAX","SCRIPTING_MEMORYEXPANSION_KEEP_ORIG","SCRIPTING_MEMORY_MATCHING_MODE","CUSTOMHOOK_ONBUILD","CUSTOMHOOK_ONSTART","CUSTOMHOOK_ONUSERSAYS","CUSTOMHOOK_ONBOTRESPONSE","CUSTOMHOOK_ONSTOP","CUSTOMHOOK_ONCLEAN","ASSERTERS","LOGIC_HOOKS","USER_INPUTS","RATELIMIT_USERSAYS_MAXCONCURRENT","RATELIMIT_USERSAYS_MINTIME","SECURITY_ALLOW_UNSAFE","PRECOMPILERS","LOCALPATH","GITPATH","GITURL","GITBRANCH","GITDIR","GITPREPARECMD","Capabilities","Sources","Source","Envs","IS_BOTIUM_CONTAINER","Fluent","constructor","driver","compiler","container","currentChannel","tasks","push","Promise","resolve","reject","Build","then","catch","err","Exec","async","eachSeries","task","cb","taskResult","Start","SwitchChannel","channel","ReadScripts","convoDir","globFilter","BuildCompiler","ReadScriptsFromDirectory","Compile","scriptBuffer","scriptFormat","scriptType","RunScripts","assertCb","failCb","scriptingEvents","assertBotResponse","bind","fail","ExpandConvos","convos","convo","convoDone","Run","Stop","UserSaysText","msg","_","isFunction","UserSays","messageText","Object","assign","WaitBotSays","timeoutMillis","callback","botMsg","WaitBotSaysText","text","Restart","Clean","Call","customFunction","CONTAINER_BUILDING","CONTAINER_BUILT","CONTAINER_BUILD_ERROR","CONTAINER_STARTING","CONTAINER_STARTED","CONTAINER_START_ERROR","CONTAINER_STOPPING","CONTAINER_STOPPED","CONTAINER_STOP_ERROR","CONTAINER_CLEANING","CONTAINER_CLEANED","CONTAINER_CLEAN_ERROR","BOT_CONNECTED","MESSAGE_SENTTOBOT","MESSAGE_SENDTOBOT_ERROR","MESSAGE_RECEIVEDFROMBOT","MESSAGE_RECEIVEFROMBOT_ERROR","MESSAGE_ATTACHMENT","MESSAGE_TRANSCRIPT","TOOMUCHWORKERS_ERROR","BotiumError","Error","message","context","supressChildCheck","_getChildErrorsFromContext","name","captureStackTrace","prettify","includeJson","lines","errArr","isArray","forEach","errDetail","type","segments","source","subtype","cause","expected","not","JSON","stringify","actual","join","input","transcript","length","transcriptStep","jsonOutput","jsonErr","errors","botiumErrorFromErr","botiumErrorFromList","flat","map","toString","children","error","childErrors","concat","result","LOGIC_HOOK_INCLUDE","DEFAULT_ASSERTERS","className","DEFAULT_LOGIC_HOOKS","DEFAULT_USER_INPUTS","NodeVM","require$$0","debug","require$$1","require$$2","require$$3","asserter","Class","require","logicHook","userInput","LogicHookUtils","buildScriptContext","caps","asserters","globalAsserters","logicHooks","globalLogicHooks","userInputs","_setDefaultAsserters","_setDefaultLogicHooks","_setDefaultUserInputs","_fetchAsserters","_fetchLogicHooks","_fetchUserInputs","lh","ui","ref","_loadClass","global","getGlobalAsserter","getGlobalLogicHook","src","args","hookType","find","_checkUnsafe","path","basename","__filename","packageName","CheckClass","isClass","PluginClass","isObject","isString","hookObject","keys","reduce","key","script","vm","eval","sandbox","run","loadErr","tryLoads","tryLoadPackageName","tryLoadAsserterByName","indexOf","substr","lastIndexOf","tryLoadFromSource","tryRequire","tryAsserterName","default","PluginAsserters","PluginLogicHooks","tryLoad","tryLoadFile","process","cwd","fs","existsSync","SCRIPTING_FORMAT_XSLX","SCRIPTING_FORMAT_TXT","SCRIPTING_FORMAT_YAML","SCRIPTING_FORMAT_JSON","SCRIPTING_FORMAT_CSV","SCRIPTING_FORMAT_MARKDOWN","SCRIPTING_TYPE_CONVO","SCRIPTING_TYPE_PCONVO","SCRIPTING_TYPE_UTTERANCES","SCRIPTING_TYPE_SCRIPTING_MEMORY","BotiumMockAttachment","fromJson","mimeType","base64","href","BotiumMockMedia","mediaUri","altText","downloadUri","buffer","indent","sections","truncate","repeat","BotiumMockButton","payload","imageUri","BotiumMockCard","subtext","content","sourceData","image","buttons","a","media","forms","BotiumMockForm","cards","_prettifyLines","card","prettifySafe","entry","m","b","f","c","value","label","options","BotiumMockChoice","title","BotiumMockAsserter","cloneDeep","BotiumMockUserInput","BotiumMockLogicHook","BotiumMockMessage","sender","optional","nlp","sourceAction","attachments","slice","normalizeText","str","doCleanup","replace","split","s","trim","splitStringInNonEmptyLines","filter","quoteRegexpString","removeBuffers","obj","jsonString","isBuffer","toLowerCase","startsWith","parse","isUndefined","undefined","isNumber","v","flatString","linesToConvoStep","eol","singleLineMode","validateSender","convoStep","textLinesRaw","textLines","textLinesAccepted","rawLine","logicLine","IsAsserterValid","IsUserInputValid","IsLogicHookValid","logichook","logicHookName","userinput","userInputName","pop","isJSON","optionalSet","Set","add","size","convoStepToObject","step","form","messageTextPrefix","cardTexts","mediaUr","validSenders","validateConvo","validationResult","i","conversation","has","nextStep","_decompileButton","buttonScript","convoStepToLines","l","v1","uuidv1","require$$4","SCRIPTING_FUNCTIONS_RAW","$now","Date","toLocaleString","$now_EN","$now_DE","moment","format","$now_ISO","toISOString","$date","pattern","toLocaleDateString","$date_EN","$date_DE","$date_ISO","$time","toLocaleTimeString","$time_EN","$time_DE","$time_ISO","$time_HH_MM","$time_HH","$time_H_A","$timestamp","now","$year","getFullYear","$month","$month_MM","$day_of_month","getDate","$day_of_week","$random","randomize","$random10","$uniqid","$projectname","handler","$testsessionname","$testcasename","$env","env","numberOfArguments","unsafe","$cap","$msg","jsonPath","mockMsg","root","jp","query","$func","code","SCRIPTING_FUNCTIONS","mapValues","funcOrStruct","func","rest","functionName","RESERVED_WORDS","apply","scriptingMemory","_apply","applyToArgs","arg","_longestFirst","allKeys","sort","keyRegexp","RegExp","regex","matches","match","substring","extractVarNames","fill","utterance","util","inspect","varRegex","utterances","resolveUtterance","reExpected","varMatches","varMatchesRegexp","resultMatches","varName","ConvoHeader","projectname","testsessionname","order","description","ConvoStepAssert","ConvoStepLogicHook","ConvoStepUserInput","ConvoStep","stepTag","hasInteraction","findIndex","u","Transcript","steps","convoBegin","convoEnd","prettifyActual","prettifiedSteps","TranscriptStep","stepBegin","stepEnd","botBegin","botEnd","TranscriptError","Convo","beginAsserter","header","sourceTag","endAsserter","setConvoBeginAndEndAsserter","beginLogicHook","endLogicHook","setConvoBeginAndEndLogicHook","effectiveConversation","acc","val","onConvoBegin","assertConvoBegin","runConversation","_checkBotRepliesConsumed","onConvoEnd","assertConvoEndErr","assertConvoEnd","eventEmitter","emit","Events","transcriptSteps","lastMeConvoStep","waitForBotSays","skipTranscriptStep","currentStepIndex","meMsg","ScriptingMemory","WORKAROUND_OVERWRITE_JSON_MESSAGE_TEXT","setUserInput","onMeStart","onMePrepare","coreMsg","omit","setTimeout","isNull","onMeEnd","failErr","onBotStart","prepared","onBotPrepare","isErrorHandledWithOptionConvoStep","nextConvoStep","assertErrors","scriptingMemoryUpdate","response","_checkNormalizeText","tomatch","_resolveUtterancesToMatch","assertBotNotResponse","_compareObject","assertConvoStep","onBotEnd","forOwn","prototype","hasOwnProperty","call","GetScriptingMemoryAllVariables","resultOuter","GetScriptingMemoryVariables","extractFromArgs","convoStepItems","resultInner","item","queueLength","_QueueLength","normalizedUtterances","expandPartialConvos","_getIncludeLogicHookNames","hook","partialConvos","GetPartialConvos","_getEffectiveConversationRecursive","parentPConvos","ignoreBeginEnd","includeLogicHooks","steptagPath","includeLogicHook","alreadyThereAt","partialConvo","RetryHelper","section","retrySettings","retries","toUpperCase","factor","minTimeout","retryErrorPatterns","onErrorRegexp","r","shouldRetry","errString","re","_normalize","botresponse","regexp","ignoreCase","test","wildcard","numWildcards","utteranceRe","wildcardExact","include","equals","getMatchFunction","matchingMode","isStringJson","string","e","isJsonObject","json","stringIsJson","isJson","toJsonWeak","stringOrNot","optionalJson","body","shortenJsonString","escapeJSONString","character","formatTimeout","ms","Math","floor","_ensureList","queryResult","filename","endsWith","checkerJsonpath","CHECKER_JSONPATH","rootJsonpath","ROOT_JSONPATH","utteranceRefsJsonpath","UTTERANCE_REF_JSONPATH","utterancesJsonpath","UTTERANCES_JSONPATH","scriptData","scouldExist","rootObjects","intent","executeHook","executeHookSync","getHook","data","allowUnsafe","resultWithRequire","hookData","esprima","parseScript","SCRIPT","htmlCommentRegexp","md","MarkdownIt","parsed","_extractFromRasaIntent","_extractFromRasaSentence","rasaSentence","matched","splitted","meText","meTexts","state","processLeafs","uniq","capNamePrefix","allCapValues","jsonPathCaps","pickBy","k","each","p","prefix","capNames","regexpPrefixAndGroup","currentGroup","currentObject","capName","charAt","capPrefixAndGroup","PROVIDERS","JSON_TO_JSON_JSONPATH","MARKDOWN_RASA","CAPABILITY_PREFIX","flatCababilities","require$$5","ownCaps","Buffer","capSuffixAndVal","NAME","provider","precompile","precompiler","CompilerBase","AddConvos","AddPartialConvos","AddUtterances","AddScriptingMemories","Validate","GetHeaders","Decompile","_AssertCapabilityExists","cap","_GetOptionalCapability","def","_GetCapabilitiesByPrefix","Utterance","CompilerXlsx","colnames","_splitSheetnames","sheetnames","_filterSheetnames","selectors","filteredSheetnames","sheetname","selector","Constants","workbook","XLSX","read","Props","maxEmptyRowCount","SheetNames","scriptResults","sheet","Sheets","rowindex","colindex","hasNameCol","_findOrigin","parseCell","eolSplit","_extractRow","cell1","cell1Value","cell2","cell2Value","cell3","cell3Value","nameCell","nameCellValue","meCell","meCellValue","botCell","botCellValue","questionAnswerMode","emptyRowCount","index","foundQARows","foundConvoRows","convoResults","currentConvo","currentConvoName","startrowindex","formatLength","max","formatBase","formatRowIndex","currentUtterance","emptylines","uttCell","variableNames","colindexTemp","variableNameCell","caseNameCell","caseName","values","variableValueCell","cellContent","stepLines","wb","utils","book_new","ws","json_to_sheet","book_append_sheet","xlsxOutput","write","_get","cell","cellValue","NestedLoop","cr","cc","CompilerTxt","line","_compileConvo","_compileUtterances","_compileScriptingMemory","isPartial","currentLineIndex","currentLines","convoStepSender","convoStepChannel","convoStepLineIndex","parseMsg","pushPrev","isValidTagLine","includes","names","scriptingMemories","row","rawRow","col","DELIMITERS_CHECK","DEFAULT_DELIMITER","DEFAULT_QA_COLUMN_QUESTION","DEFAULT_QA_COLUMN_ANSWER","DEFAULT_MULTIROW_COLUMN_CONVERSATION","DEFAULT_MULTIROW_COLUMN_SENDER","DEFAULT_MULTIROW_COLUMN_TEXT","_findColIndex","colName","h","CompilerCsv","delimiter","firstline","d","rows","escape","quote","columns","lineNumberBase","colQuestion","colAnswer","colConversationId","colSender","colText","conversationIds","conversationId","convoRows","CompilerObjectBase","Deserialize","convoRaw","convoStepRaw","entries","lineTag","padStart","convoStepObject","toAdd","utterancesRaw","CompilerYaml","YAML","CompilerJson","set","CompilerMarkdown","_toStructuredMarkdown","depth","struct","_add","markup","tag","structured","convosOrUtterances","convosBotium","child","utterancesBotium","utteranceStruct","shim","globPattern","skipPattern","retryHelper","fn","promise","promiseRetry","retry","number","pnot","errTemplate","ScriptingProvider","Defaults","compilers","matchFn","globalAsserter","globalLogicHook","_createLogicHookPromises","_createAsserterPromises","asserterType","_createUserInputPromises","resolveEmptyIfUnknown","_resolveUtterance","found","utt","isNil","nottomatch","retryHelperAsserter","retryHelperLogicHook","retryHelperUserInput","_isValidAsserterType","mapNot","callAsserter","asserterSpec","params","notAsserterType","convoAsserter","isGlobal","allPromises","allSettled","results","rejected","status","reason","all","convoStepPromises","globalPromises","some","t","parts","uttArgs","_buildScriptContext","Match","require$$6","require$$7","require$$8","require$$9","require$$10","logicHookUtils","GetCompiler","ReadBotiumFilesFromDirectory","filelist","globby","sync","gitignore","filelistGlobbed","remove","file","isSkip","convoDirStats","statSync","isFile","dirname","dirConvos","dirUtterances","dirPartialConvos","dirScriptingMemories","pconvos","ReadScript","dirScriptingMemory","ReadScriptFromBuffer","scriptingFormat","scriptingTypes","readFileSync","precompResponse","precompilers","execute","fileConvo","filePartialConvo","_tagAndCleanupUtterances","utteranceFiles","fileUtt","ExpandScriptingMemoryToConvos","aggregatedNoNames","aggregatedNoVariables","aggregatedNoVariableNames","aggregatedDuplicates","duplicate","j","aggregatedIntersections","intersection","k1","k2","kInt","variablesToScriptingMemory","Map","get","convosExpandedAll","convosOriginalAll","convoVariables","convosToExpand","convosExpandedConvo","multipliers","convosExpandedVariable","convoToExpand","convoExpanded","ExpandUtterancesToConvos","useNameAsIntent","incomprehensionUtt","expandedConvos","uttName","origUttName","_sortConvos","_expandConvo","convoStepIndex","convoStepsStack","utterancePostfix","uttOrUserInput","naming","capabilities","utteranceMax","postfix","currentStep","currentStepsStack","useUnexpanded","allutterances","sampleutterances","x","random","currentConvoLabeled","origConvoName","uiIndex","expandConvo","expandedUserInputs","sampleinputs","sampleinput","currentStepMod","sortBy","findAmbiguous","ambiguous","base","expectedString","actualString","eu","GetConversationFlowView","getConvoNodeHash","detectLoops","summarizeMultiSteps","extPickMeNodeProps","extPickBotNodeProps","extPickMeHashProps","extPickBotHashProps","botNodesByHash","pickMeNodeProps","pickBotNodeProps","pickMeHashProps","pickBotHashProps","convoNodes","utteranceSamples","utteranceCount","lastConvoNode","convoSteps","convoStepIndices","hash","currentChildren","convoNode","convoNodeValues","pick","convoNodeHeader","crypto","createHash","update","digest","existingChildNode","childNodes","existingBotNode","existingConvo","node","GetConversationFlowDot","nodes","walkTreeForNodes","walkTreeForLines","BaseRepo","tempDirectory","sources","workingDirectory","Prepare","_AssertSourceExists","NoRepo","module","childCommandLineRun","cmd","ignoreErrors","processOptions","cmdOptions","cmdPart","splice","exports","childProcessRun","runningProcess","childProcess","spawn","stdout","stderr","on","GitRepo","series","cloneDirectoryCreated","mkdirp","cloneReady","gitCmdOptions","ProcessUtils","workingDirectoryChanged","prepareReady","LocalRepo","checkPath","stat","stats","isDirectory","isSymbolicLink","access","constants","W_OK","err1","BUILD_CONTAINER","START_CONTAINER","SENDTOBOT","STOP_CONTAINER","CLEAN_CONTAINER","QueueTimeoutError","Queue","queue","listeners","pushListener","empty","clear","shift","listener","timeoutRequest","timeout","timeoutCallback","registerPushListener","BaseContainer","repo","envs","cleanupTasks","queues","userSaysLimiter","onBuildHook","onStartHook","onUserSaysHook","onBotResponseHook","onStopHook","onCleanHook","opts","maxConcurrent","minTime","Bottleneck","_RunCustomHook","UserSaysImpl","schedule","isError","hookExecuted","cleanupTasksDone","rimraffed","rimraf","_AssertOneCapabilityExists","checkCaps","arguments","_EmptyQueue","_QueueBotSays","request","GridContainer","buildPromise","_defer","baseComplete","socketComplete","socket","io","apiToken","Commands","startPromise","stopPromise","cleanPromise","disconnect","_ValidateCustomHook","capKey","deferred","InProcessContainer","InjectBotSays","buildRedisHandler","redisurl","topic","redis","Redis","event","publish","setupEndpoints","app","endpoint","middleware","processEvent","req","res","originalUrl","originalMethod","method","end","sendResponse","startProxy","port","express","bodyParser","urlencoded","extended","proxy","listen","console","log","v4","uuidv4","getAllCapValues","botiumUtils","Mustache","SimpleRestContainer","queueBotSays","processInbound","redisTopic","debounceTimeout","inboundEvents","_processOrderedInboundEventsArrayAsync","debounce","events","_getMustachedVal","sortedEvents","qr","_processBodyAsync","startHook","stopHook","requestHook","parserHook","responseHook","pollRequestHook","requestHooks","SIMPLEREST_PING","SIMPLEREST_START","SIMPLEREST_STOP","_buildInbound","contextInitComplete","view","botium","stepId","fnc","mapKeys","descriptor","safeCaps","render","jsonify","_getMustachedCap","startHookComplete","inboundListenerComplete","_subscribeInbound","startPollingComplete","_startPolling","pingComplete","_makeCall","_parseResponseBody","initComplete","_doRequest","startCallComplete","_unsubscribeInbound","_stopPolling","_cleanInbound","isFromUser","updateContext","_processBodyAsyncImpl","waitProcessQueue","_emptyWaitProcessQueue","mergeMode","jsonPathsContext","jsonPathContext","contextNodes","jsonPathRoots","jsonPathsBody","jsonPathBody","rb","jsonPathRoot","jsonPathsMedia","responseMedia","flattenDeep","mime","lookup","jsonPathsButtons","responseButtons","hasMessageText","jsonPathsTexts","responseTexts","messageTexts","messageTextIndex","botMsgRoot","beforeHookKeys","afterHookKeys","_buildRequest","requestOptions","statusCode","statusMessage","nonEncodedMessage","encodeURIComponent","uri","_getCapValue","followAllRedirects","headers","bodyRaw","ADD_QUERY_PARAM","appendToUri","ADD_HEADER","headerKey","headerValue","_addRequestOptions","_waitForUrlResponse","pingConfig","tries","changeBody","capValue","template","raw","_processInboundEvent","jsonPathValue","jsonPathsSelector","isSelected","jsonPathTemplate","hasResult","check","processingEvents","count","subscribe","unsubscribe","close","_runPolling","verb","pollConfig","pollInterval","setInterval","clearInterval","capPrefix","httpConfig","strictSSL","merge","pluginResolver","containermode","getModuleVersionSafe","required","pckg","version","loadConnectorModule","tryLoadPlugin","modulepath","pluginLoaderSpec","mode","pluginInstance","plugin","PluginVersion","tryLoadPackage","PluginConnectorContainer","retryHelperBuild","retryHelperStart","retryHelperUserSays","retryHelperStop","retryHelperClean","boolean","BotDriver","EventEmitter","_fetchedConfigFiles","_fetchConfigFromFiles","NODE_ENV","botiumConfigEnv","BOTIUM_CONFIG","checkDir","checkFileBase","sourcesToTest","element","elementToTest","_mergeCaps","envName","setCapabilities","setCapability","setSources","setSource","setEnvs","setEnv","BuildFluent","driverValidated","_validate","repoValidated","_getRepo","repoPrepared","containerValidated","_getContainer","containerBuilt","_loadConfigFile","configJson","files","fetchedFiles","absFilePath","_findKeyProperty","checkPropIdx","newCaps","isFinite","newCapArray","capElement","mergeKey","oldElement","newCapObject","isBoolean","sanitize","PLUGIN_TYPE_CONNECTOR","PLUGIN_TYPE_ASSERTER","PLUGIN_TYPE_LOGICHOOK","PLUGIN_TYPE_USERINPUT","TYPE_TO_PREFIX","TYPE_TO_COMPONENT_TYPE","getConnectorPlugin","pathToRes","PluginType","pluginPath","pluginNameFromFile","PluginDesc","getOtherPlugin","pluginName","TYPE_TO_FN","getPlugins","resourcesDir","items","readdirSync","extname","pluginNameToPlugin","ScriptingConstants","Plugins","HookUtils","LogicHookConstants","require$$11","Lib","require$$12","require$$13","InboundProxy","require$$14","BotiumMockRichMessageTypes","require$$15"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,gBAAc,GAAG;AACfA,EAAAA,WAAW,EAAE,aADE;AAEfC,EAAAA,eAAe,EAAE,iBAFF;AAGfC,EAAAA,YAAY,EAAE,cAHC;AAIfC,EAAAA,OAAO,EAAE,SAJM;AAKfC,EAAAA,cAAc,EAAE,gBALD;AAMfC,EAAAA,iBAAiB,EAAE,mBANJ;AAOfC,EAAAA,aAAa,EAAE,eAPA;AAQfC,EAAAA,gBAAgB,EAAE,kBARH;;AAUfC,EAAAA,sBAAsB,EAAE,wBAVT;AAWfC,EAAAA,aAAa,EAAE,eAXA;AAYfC,EAAAA,cAAc,EAAE,gBAZD;AAafC,EAAAA,cAAc,EAAE,gBAbD;;AAefC,EAAAA,mBAAmB,EAAE,qBAfN;AAgBfC,EAAAA,oBAAoB,EAAE,sBAhBP;AAiBfC,EAAAA,oBAAoB,EAAE,sBAjBP;AAkBfC,EAAAA,wBAAwB,EAAE,0BAlBX;AAmBfC,EAAAA,uBAAuB,EAAE,yBAnBV;AAoBfC,EAAAA,4BAA4B,EAAE,8BApBf;AAqBfC,EAAAA,uBAAuB,EAAE,yBArBV;AAsBfC,EAAAA,uBAAuB,EAAE,yBAtBV;AAuBfC,EAAAA,8BAA8B,EAAE,gCAvBjB;AAwBfC,EAAAA,gCAAgC,EAAE,kCAxBnB;AAyBfC,EAAAA,oBAAoB,EAAE,sBAzBP;AA0BfC,EAAAA,qBAAqB,EAAE,uBA1BR;AA2BfC,EAAAA,qBAAqB,EAAE,uBA3BR;AA4BfC,EAAAA,yBAAyB,EAAE,2BA5BZ;AA6BfC,EAAAA,wBAAwB,EAAE,0BA7BX;AA8BfC,EAAAA,6BAA6B,EAAE,+BA9BhB;AA+BfC,EAAAA,wBAAwB,EAAE,0BA/BX;AAgCfC,EAAAA,wBAAwB,EAAE,0BAhCX;AAiCfC,EAAAA,+BAA+B,EAAE,iCAjClB;AAkCfC,EAAAA,iCAAiC,EAAE,mCAlCpB;AAmCfC,EAAAA,mBAAmB,EAAE,qBAnCN;AAoCfC,EAAAA,oBAAoB,EAAE,sBApCP;AAqCfC,EAAAA,oBAAoB,EAAE,sBArCP;AAsCfC,EAAAA,wBAAwB,EAAE,0BAtCX;AAuCfC,EAAAA,uBAAuB,EAAE,yBAvCV;AAwCfC,EAAAA,4BAA4B,EAAE,8BAxCf;AAyCfC,EAAAA,uBAAuB,EAAE,yBAzCV;AA0CfC,EAAAA,uBAAuB,EAAE,yBA1CV;AA2CfC,EAAAA,uBAAuB,EAAE,yBA3CV;AA4CfC,EAAAA,oBAAoB,EAAE,sBA5CP;AA6CfC,EAAAA,gCAAgC,EAAE,kCA7CnB;AA8CfC,EAAAA,oBAAoB,EAAE,sBA9CP;AA+CfC,EAAAA,qBAAqB,EAAE,uBA/CR;AAgDfC,EAAAA,cAAc,EAAE,gBAhDD;AAiDfC,EAAAA,wBAAwB,EAAE,0BAjDX;AAkDfC,EAAAA,uBAAuB,EAAE,yBAlDV;AAmDfC,EAAAA,kBAAkB,EAAE,oBAnDL;AAoDfC,EAAAA,iBAAiB,EAAE,mBApDJ;AAqDfC,EAAAA,eAAe,EAAE,iBArDF;AAsDfC,EAAAA,2BAA2B,EAAE,6BAtDd;AAuDfC,EAAAA,wBAAwB,EAAE,0BAvDX;AAwDfC,EAAAA,mBAAmB,EAAE,qBAxDN;AAyDfC,EAAAA,qBAAqB,EAAE,uBAzDR;AA0DfC,EAAAA,oBAAoB,EAAE,sBA1DP;AA2DfC,EAAAA,uBAAuB,EAAE,yBA3DV;AA4DfC,EAAAA,sBAAsB,EAAE,wBA5DT;AA6DfC,EAAAA,mBAAmB,EAAE,qBA7DN;AA8DfC,EAAAA,oBAAoB,EAAE,sBA9DP;AA+DfC,EAAAA,oBAAoB,EAAE,sBA/DP;AAgEfC,EAAAA,wBAAwB,EAAE,0BAhEX;AAiEfC,EAAAA,uBAAuB,EAAE,yBAjEV;AAkEfC,EAAAA,4BAA4B,EAAE,8BAlEf;AAmEfC,EAAAA,wBAAwB,EAAE,0BAnEX;AAoEfC,EAAAA,uBAAuB,EAAE,yBApEV;AAqEfC,EAAAA,8BAA8B,EAAE,gCArEjB;AAsEfC,EAAAA,wBAAwB,EAAE,0BAtEX;AAuEfC,EAAAA,4BAA4B,EAAE,8BAvEf;AAwEfC,EAAAA,wBAAwB,EAAE,0BAxEX;AAyEfC,EAAAA,yBAAyB,EAAE,2BAzEZ;AA0EfC,EAAAA,2BAA2B,EAAE,6BA1Ed;AA2EfC,EAAAA,2BAA2B,EAAE,6BA3Ed;AA4EfC,EAAAA,mCAAmC,EAAE,qCA5EtB;AA6EfC,EAAAA,mCAAmC,EAAE,qCA7EtB;AA8EfC,EAAAA,2BAA2B,EAAE,6BA9Ed;AA+EfC,EAAAA,2BAA2B,EAAE,6BA/Ed;AAgFfC,EAAAA,2BAA2B,EAAE,6BAhFd;AAiFfC,EAAAA,uBAAuB,EAAE,yBAjFV;AAkFfC,EAAAA,oCAAoC,EAAE,sCAlFvB;AAmFfC,EAAAA,iCAAiC,EAAE,mCAnFpB;AAoFfC,EAAAA,iCAAiC,EAAE,mCApFpB;AAqFfC,EAAAA,sBAAsB,EAAE,wBArFT;AAsFfC,EAAAA,kDAAkD,EAAE,oDAtFrC;AAuFfC,EAAAA,mCAAmC,EAAE,qCAvFtB;;AAyFfC,EAAAA,iBAAiB,EAAE,mBAzFJ;;AA2FfC,EAAAA,mBAAmB,EAAE,qBA3FN;AA4FfC,EAAAA,wBAAwB,EAAE,0BA5FX;AA6FfC,EAAAA,uBAAuB,EAAE,yBA7FV;AA8FfC,EAAAA,uBAAuB,EAAE,yBA9FV;AA+FfC,EAAAA,yBAAyB,EAAE,2BA/FZ;AAgGfC,EAAAA,yBAAyB,EAAE,2BAhGZ;AAiGfC,EAAAA,yBAAyB,EAAE,2BAjGZ;AAkGfC,EAAAA,iCAAiC,EAAE,mCAlGpB;AAmGfC,EAAAA,oCAAoC,EAAE,sCAnGvB;AAoGfC,EAAAA,0CAA0C,EAAE,4CApG7B;AAqGfC,EAAAA,uBAAuB,EAAE,yBArGV;AAsGfC,EAAAA,yBAAyB,EAAE,2BAtGZ;AAuGfC,EAAAA,mBAAmB,EAAE,qBAvGN;AAwGfC,EAAAA,oBAAoB,EAAE,sBAxGP;AAyGfC,EAAAA,6CAA6C,EAAE,+CAzGhC;AA0GfC,EAAAA,oCAAoC,EAAE,sCA1GvB;AA2GfC,EAAAA,kCAAkC,EAAE,oCA3GrB;AA4GfC,EAAAA,gCAAgC,EAAE,kCA5GnB;AA6GfC,EAAAA,8BAA8B,EAAE,gCA7GjB;AA8GfC,EAAAA,wBAAwB,EAAE,0BA9GX;AA+GfC,EAAAA,uBAAuB,EAAE,yBA/GV;AAgHfC,EAAAA,uCAAuC,EAAE,yCAhH1B;AAiHfC,EAAAA,4BAA4B,EAAE,8BAjHf;;AAmHfC,EAAAA,uBAAuB,EAAE,yBAnHV;;AAqHfC,EAAAA,2BAA2B,EAAE,6BArHd;AAsHfC,EAAAA,mCAAmC,EAAE,qCAtHtB;AAuHfC,EAAAA,sCAAsC,EAAE,wCAvHzB;AAwHfC,EAAAA,sCAAsC,EAAE,wCAxHzB;;AA0HfC,EAAAA,kCAAkC,EAAE,oCA1HrB;AA2HfC,EAAAA,2CAA2C,EAAE,6CA3H9B;;AA6HfC,EAAAA,mCAAmC,EAAE,qCA7HtB;;AA+HfC,EAAAA,8BAA8B,EAAE,gCA/HjB;;AAiIfC,EAAAA,kBAAkB,EAAE,oBAjIL;AAkIfC,EAAAA,kBAAkB,EAAE,oBAlIL;AAmIfC,EAAAA,qBAAqB,EAAE,uBAnIR;AAoIfC,EAAAA,wBAAwB,EAAE,0BApIX;AAqIfC,EAAAA,iBAAiB,EAAE,mBArIJ;AAsIfC,EAAAA,kBAAkB,EAAE,oBAtIL;;AAwIfC,EAAAA,SAAS,EAAE,WAxII;AAyIfC,EAAAA,WAAW,EAAE,aAzIE;AA0IfC,EAAAA,WAAW,EAAE,aA1IE;;AA4IfC,EAAAA,gCAAgC,EAAE,kCA5InB;AA6IfC,EAAAA,0BAA0B,EAAE,4BA7Ib;AA8IfC,EAAAA,qBAAqB,EAAE,uBA9IR;AA+IfC,EAAAA,YAAY,EAAE;AA/IC,CAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA,UAAc,GAAG;AACfC,EAAAA,SAAS,EAAE,WADI;AAEfC,EAAAA,OAAO,EAAE,SAFM;AAGfC,EAAAA,MAAM,EAAE,QAHO;AAIfC,EAAAA,SAAS,EAAE,WAJI;AAKfC,EAAAA,MAAM,EAAE,QALO;AAMfC,EAAAA,aAAa,EAAE;AANA,CAAjB;;;;;;;;ACGA,cAAc,GAAG;AACfC,EAAAA,YAAY,EAAE;AACZ,KAACA,YAAY,CAACzI,WAAd,GAA4B,gBADhB;AAEZ,KAACyI,YAAY,CAACxI,eAAd,GAAgC,qBAFpB;AAGZ,KAACwI,YAAY,CAACvI,YAAd,GAA6B,kBAHjB;AAIZ,KAACuI,YAAY,CAACtI,OAAd,GAAwB,YAJZ;AAKZ,KAACsI,YAAY,CAACrI,cAAd,GAA+B,IALnB;AAMZ,KAACqI,YAAY,CAACpI,iBAAd,GAAkC,KANtB;AAOZ,KAACoI,YAAY,CAACjI,sBAAd,GAAuC,KAP3B;AAQZ,KAACiI,YAAY,CAACvH,uBAAd,GAAwC,CAR5B;AASZ,KAACuH,YAAY,CAACtH,uBAAd,GAAwC,KAT5B;AAUZ,KAACsH,YAAY,CAAC5H,oBAAd,GAAqC,KAVzB;AAWZ,KAAC4H,YAAY,CAACrH,8BAAd,GAA+C,IAXnC;AAYZ,KAACqH,YAAY,CAACpH,gCAAd,GAAiD,KAZrC;AAaZ,KAACoH,YAAY,CAAC/F,gCAAd,GAAiD,KAbrC;AAcZ,KAAC+F,YAAY,CAACnG,uBAAd,GAAwC,CAd5B;AAeZ,KAACmG,YAAY,CAAClG,uBAAd,GAAwC,KAf5B;AAgBZ,KAACkG,YAAY,CAACxG,oBAAd,GAAqC,KAhBzB;AAiBZ,KAACwG,YAAY,CAAC7G,wBAAd,GAAyC,CAjB7B;AAkBZ,KAAC6G,YAAY,CAAC5G,wBAAd,GAAyC,KAlB7B;AAmBZ,KAAC4G,YAAY,CAAC3G,+BAAd,GAAgD,IAnBpC;AAoBZ,KAAC2G,YAAY,CAAC1G,iCAAd,GAAkD,IApBtC;AAqBZ,KAAC0G,YAAY,CAAClH,qBAAd,GAAsC,KArB1B;AAsBZ,KAACkH,YAAY,CAAC9E,oBAAd,GAAqC,KAtBzB;AAuBZ,KAAC8E,YAAY,CAACzE,wBAAd,GAAyC,IAvB7B;AAwBZ,KAACyE,YAAY,CAACxE,uBAAd,GAAwC,KAxB5B;AAyBZ,KAACwE,YAAY,CAACvE,8BAAd,GAA+C,IAzBnC;AA0BZ,KAACuE,YAAY,CAACxF,iBAAd,GAAkC,KA1BtB;AA2BZ,KAACwF,YAAY,CAAC1F,uBAAd,GAAwC,IA3B5B;AA4BZ,KAAC0F,YAAY,CAACzF,kBAAd,GAAmC,KA5BvB;AA6BZ,KAACyF,YAAY,CAAC3F,wBAAd,GAAyC,EA7B7B;AA8BZ,KAAC2F,YAAY,CAAC7F,qBAAd,GAAsC,IA9B1B;AA+BZ,KAAC6F,YAAY,CAACxD,iCAAd,GAAkD,IA/BtC;AAgCZ,KAACwD,YAAY,CAAChE,mCAAd,GAAoD,OAhCxC;AAiCZ,KAACgE,YAAY,CAACpD,iBAAd,GAAkC,IAjCtB;AAkCZ,KAACoD,YAAY,CAAClD,wBAAd,GAAyC,MAlC7B;AAmCZ,KAACkD,YAAY,CAAC9C,yBAAd,GAA0C,IAnC9B;AAoCZ,KAAC8C,YAAY,CAACxC,yBAAd,GAA0C,IApC9B;AAqCZ,KAACwC,YAAY,CAACvC,mBAAd,GAAoC,GArCxB;AAsCZ,KAACuC,YAAY,CAACtC,oBAAd,GAAqC,GAtCzB;AAuCZ,KAACsC,YAAY,CAAChC,wBAAd,GAAyC,IAvC7B;AAwCZ,KAACgC,YAAY,CAAC/B,uBAAd,GAAwC,KAxC5B;AAyCZ,KAAC+B,YAAY,CAAC9B,uCAAd,GAAwD,KAzC5C;AA0CZ,KAAC8B,YAAY,CAAC5B,uBAAd,GAAwC,oBA1C5B;AA2CZ,KAAC4B,YAAY,CAAC3B,2BAAd,GAA4C,KA3ChC;AA4CZ,KAAC2B,YAAY,CAAC1B,mCAAd,GAAoD,CA5CxC;AA6CZ,KAAC0B,YAAY,CAACvB,kCAAd,GAAmD,aA7CvC;AA8CZ,KAACuB,YAAY,CAACtB,2CAAd,GAA4D,IA9ChD;AA+CZ,KAACsB,YAAY,CAACrB,mCAAd,GAAoD,KA/CxC;AAgDZ,KAACqB,YAAY,CAAC7B,4BAAd,GAA6C,KAhDjC;AAiDZ,KAAC6B,YAAY,CAACb,SAAd,GAA0B,EAjDd;AAkDZ,KAACa,YAAY,CAACZ,WAAd,GAA4B,EAlDhB;AAmDZ,KAACY,YAAY,CAACX,WAAd,GAA4B,EAnDhB;AAoDZ,KAACW,YAAY,CAACR,qBAAd,GAAsC;AApD1B,GADC;AAuDfS,EAAAA,OAAO,EAAE;AACP,KAACC,MAAM,CAACR,SAAR,GAAoB,GADb;AAEP,KAACQ,MAAM,CAACP,OAAR,GAAkB,KAFX;AAGP,KAACO,MAAM,CAACL,SAAR,GAAoB,QAHb;AAIP,KAACK,MAAM,CAACJ,MAAR,GAAiB;AAJV,GAvDM;AA6DfK,EAAAA,IAAI,EAAE;AACJC,IAAAA,mBAAmB,EAAE;AADjB;AA7DS,CAAjB;;;;;ACAA,YAAc,GAAG,MAAMC,MAAN,CAAa;AAC5BC,EAAAA,WAAW,CAAEC,MAAF,EAAU;AACnB,SAAKA,MAAL,GAAcA,MAAd;AACA,SAAKC,QAAL,GAAgB,IAAhB;AACA,SAAKC,SAAL,GAAiB,IAAjB;AACA,SAAKC,cAAL,GAAsB,IAAtB;AACA,SAAKC,KAAL,GAAa,EAAb;AAEA,SAAKA,KAAL,CAAWC,IAAX,CAAgB,MAAM;AACpB,aAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,aAAKR,MAAL,CAAYS,KAAZ,GACGC,IADH,CACSR,SAAD,IAAe;AACnB,eAAKA,SAAL,GAAiBA,SAAjB;AACAK,UAAAA,OAAO;AACR,SAJH,EAKGI,KALH,CAKUC,GAAD,IAAS;AACdJ,UAAAA,MAAM,CAACI,GAAD,CAAN;AACD,SAPH;AAQD,OATM,CAAP;AAUD,KAXD;AAYD;;AAEDC,EAAAA,IAAI,GAAI;AACN,WAAO,IAAIP,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCM,MAAAA,yBAAK,CAACC,UAAN,CAAiB,KAAKX,KAAtB,EAA6B,CAACY,IAAD,EAAOC,EAAP,KAAc;AACzC,YAAI;AACF,gBAAMC,UAAU,GAAGF,IAAI,EAAvB;;AACA,cAAIE,UAAU,IAAIA,UAAU,CAACR,IAA7B,EAAmC;AACjCQ,YAAAA,UAAU,CAACR,IAAX,CAAgB,MAAMO,EAAE,EAAxB,EAA4BN,KAA5B,CAAkCM,EAAlC;AACD,WAFD,MAEO;AACLA,YAAAA,EAAE;AACH;AACF,SAPD,CAOE,OAAOL,GAAP,EAAY;AACZK,UAAAA,EAAE,CAACL,GAAD,CAAF;AACD;AACF,OAXD,EAWIA,GAAD,IAAS;AACV,YAAIA,GAAJ,EAAS,OAAOJ,MAAM,CAACI,GAAD,CAAb;AACTL,QAAAA,OAAO;AACR,OAdD;AAeD,KAhBM,CAAP;AAiBD;;AAEDY,EAAAA,KAAK,GAAI;AACP,SAAKf,KAAL,CAAWC,IAAX,CAAgB,MAAM;AACpB,aAAO,KAAKH,SAAL,CAAeiB,KAAf,EAAP;AACD,KAFD;AAGA,WAAO,IAAP;AACD;;AAEDC,EAAAA,aAAa,CAAEC,OAAF,EAAW;AACtB,SAAKjB,KAAL,CAAWC,IAAX,CAAgB,MAAM;AACpB,WAAKF,cAAL,GAAsBkB,OAAtB;AACA,aAAOf,OAAO,CAACC,OAAR,EAAP;AACD,KAHD;AAIA,WAAO,IAAP;AACD;;AAEDe,EAAAA,WAAW,CAAEC,QAAF,EAAYC,UAAZ,EAAwB;AACjC,SAAKpB,KAAL,CAAWC,IAAX,CAAgB,MAAM;AACpB,aAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,YAAI,KAAKP,QAAL,IAAiB,IAArB,EAA2B;AACzB,cAAI;AACF,iBAAKA,QAAL,GAAgB,KAAKD,MAAL,CAAYyB,aAAZ,EAAhB;AACD,WAFD,CAEE,OAAOb,GAAP,EAAY;AACZ,mBAAOJ,MAAM,CAACI,GAAD,CAAb;AACD;AACF;;AACD,YAAI;AACF,eAAKX,QAAL,CAAcyB,wBAAd,CAAuCH,QAAvC,EAAiDC,UAAjD;AACAjB,UAAAA,OAAO;AACR,SAHD,CAGE,OAAOK,GAAP,EAAY;AACZJ,UAAAA,MAAM,CAACI,GAAD,CAAN;AACD;AACF,OAdM,CAAP;AAeD,KAhBD;AAiBA,WAAO,IAAP;AACD;;AAEDe,EAAAA,OAAO,CAAEC,YAAF,EAAgBC,YAAhB,EAA8BC,UAA9B,EAA0C;AAC/C,SAAK1B,KAAL,CAAWC,IAAX,CAAgB,MAAM;AACpB,aAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,YAAI,KAAKP,QAAL,IAAiB,IAArB,EAA2B;AACzB,cAAI;AACF,iBAAKA,QAAL,GAAgB,KAAKD,MAAL,CAAYyB,aAAZ,EAAhB;AACD,WAFD,CAEE,OAAOb,GAAP,EAAY;AACZ,mBAAOJ,MAAM,CAACI,GAAD,CAAb;AACD;AACF;;AACD,YAAI;AACF,eAAKX,QAAL,CAAc0B,OAAd,CAAsBC,YAAtB,EAAoCC,YAApC,EAAkDC,UAAlD;AACAvB,UAAAA,OAAO;AACR,SAHD,CAGE,OAAOK,GAAP,EAAY;AACZJ,UAAAA,MAAM,CAACI,GAAD,CAAN;AACD;AACF,OAdM,CAAP;AAeD,KAhBD;AAiBA,WAAO,IAAP;AACD;;AAEDmB,EAAAA,UAAU,CAAEC,QAAF,EAAYC,MAAZ,EAAoB;AAC5B,SAAK7B,KAAL,CAAWC,IAAX,CAAgB,MAAM;AACpB,aAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,YAAIwB,QAAJ,EAAc;AACZ,eAAK/B,QAAL,CAAciC,eAAd,CAA8BC,iBAA9B,GAAkDH,QAAQ,CAACI,IAAT,CAAc,KAAKnC,QAAnB,CAAlD;AACD;;AACD,YAAIgC,MAAJ,EAAY;AACV,eAAKhC,QAAL,CAAciC,eAAd,CAA8BG,IAA9B,GAAqCJ,MAAM,CAACG,IAAP,CAAY,KAAKnC,QAAjB,CAArC;AACD;;AAED,aAAKA,QAAL,CAAcqC,YAAd;AAEAxB,QAAAA,yBAAK,CAACC,UAAN,CAAiB,KAAKd,QAAL,CAAcsC,MAA/B,EAAuC,CAACC,KAAD,EAAQC,SAAR,KAAsB;AAC3D,eAAKvC,SAAL,CAAeiB,KAAf,GACGT,IADH,CACQ,MAAM8B,KAAK,CAACE,GAAN,CAAU,KAAKxC,SAAf,CADd,EAEGQ,IAFH,CAEQ,MAAM,KAAKR,SAAL,CAAeyC,IAAf,EAFd,EAGGjC,IAHH,CAGQ,MAAM+B,SAAS,EAHvB,EAIG9B,KAJH,CAIS8B,SAJT;AAKD,SAND,EAOC7B,GAAD,IAAS;AACP,cAAIA,GAAJ,EAAS,OAAOJ,MAAM,CAACI,GAAD,CAAb,CAAT,KACKL,OAAO;AACb,SAVD;AAWD,OArBM,CAAP;AAsBD,KAvBD;AAwBA,WAAO,IAAP;AACD;;AAEDqC,EAAAA,YAAY,CAAEC,GAAF,EAAO;AACjB,SAAKzC,KAAL,CAAWC,IAAX,CAAgB,MAAM;AACpB,UAAIyC,0BAAC,CAACC,UAAF,CAAaF,GAAb,CAAJ,EAAuB;AACrBA,QAAAA,GAAG,GAAGA,GAAG,EAAT;AACD;;AAED,UAAI,KAAK1C,cAAT,EAAyB;AACvB,eAAO,KAAKD,SAAL,CAAe8C,QAAf,CAAwB;AAAEC,UAAAA,WAAW,EAAEJ,GAAf;AAAoBxB,UAAAA,OAAO,EAAE,KAAKlB;AAAlC,SAAxB,CAAP;AACD,OAFD,MAEO;AACL,eAAO,KAAKD,SAAL,CAAe0C,YAAf,CAA4BC,GAA5B,CAAP;AACD;AACF,KAVD;AAWA,WAAO,IAAP;AACD;;AAEDG,EAAAA,QAAQ,CAAEH,GAAF,EAAO;AACb,SAAKzC,KAAL,CAAWC,IAAX,CAAgB,MAAM;AACpB,UAAIyC,0BAAC,CAACC,UAAF,CAAaF,GAAb,CAAJ,EAAuB;AACrBA,QAAAA,GAAG,GAAGA,GAAG,EAAT;AACD;;AAED,UAAI,KAAK1C,cAAL,IAAuB,CAAC0C,GAAG,CAACxB,OAAhC,EAAyC;AACvCwB,QAAAA,GAAG,GAAGK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,GAAlB,CAAN;AACAA,QAAAA,GAAG,CAACxB,OAAJ,GAAc,KAAKlB,cAAnB;AACD;;AACD,aAAO,KAAKD,SAAL,CAAe8C,QAAf,CAAwBH,GAAxB,CAAP;AACD,KAVD;AAWA,WAAO,IAAP;AACD;;AAEDO,EAAAA,WAAW,CAAE/B,OAAO,GAAG,IAAZ,EAAkBgC,aAAa,GAAG,IAAlC,EAAwCC,QAAQ,GAAG,IAAnD,EAAyD;AAClE,QAAI,CAACA,QAAL,EAAe;AACb,UAAID,aAAa,IAAIP,0BAAC,CAACC,UAAF,CAAaM,aAAb,CAArB,EAAkD;AAChDC,QAAAA,QAAQ,GAAGD,aAAX;AACAA,QAAAA,aAAa,GAAG,IAAhB;AACD,OAHD,MAGO,IAAI,CAACA,aAAD,IAAkBhC,OAAlB,IAA6ByB,0BAAC,CAACC,UAAF,CAAa1B,OAAb,CAAjC,EAAwD;AAC7DiC,QAAAA,QAAQ,GAAGjC,OAAX;AACAgC,QAAAA,aAAa,GAAG,IAAhB;AACAhC,QAAAA,OAAO,GAAG,IAAV;AACD;AACF;;AAED,SAAKjB,KAAL,CAAWC,IAAX,CAAgB,MAAM;AACpB,aAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,YAAI,KAAKL,cAAL,IAAuB,CAACkB,OAA5B,EAAqC;AACnCA,UAAAA,OAAO,GAAG,KAAKlB,cAAf;AACD;;AACD,aAAKD,SAAL,CAAekD,WAAf,CAA2B/B,OAA3B,EAAoCgC,aAApC,EACG3C,IADH,CACS6C,MAAD,IAAY;AAChB,cAAID,QAAJ,EAAcA,QAAQ,CAACC,MAAD,CAAR;AACdhD,UAAAA,OAAO;AACR,SAJH,EAKGI,KALH,CAKUC,GAAD,IAAS;AACdJ,UAAAA,MAAM,CAACI,GAAD,CAAN;AACD,SAPH;AAQD,OAZM,CAAP;AAaD,KAdD;AAeA,WAAO,IAAP;AACD;;AAED4C,EAAAA,eAAe,CAAEnC,OAAO,GAAG,IAAZ,EAAkBgC,aAAa,GAAG,IAAlC,EAAwCC,QAAQ,GAAG,IAAnD,EAAyD;AACtE,QAAI,CAACA,QAAL,EAAe;AACb,UAAID,aAAa,IAAIP,0BAAC,CAACC,UAAF,CAAaM,aAAb,CAArB,EAAkD;AAChDC,QAAAA,QAAQ,GAAGD,aAAX;AACAA,QAAAA,aAAa,GAAG,IAAhB;AACD,OAHD,MAGO,IAAI,CAACA,aAAD,IAAkBhC,OAAlB,IAA6ByB,0BAAC,CAACC,UAAF,CAAa1B,OAAb,CAAjC,EAAwD;AAC7DiC,QAAAA,QAAQ,GAAGjC,OAAX;AACAgC,QAAAA,aAAa,GAAG,IAAhB;AACAhC,QAAAA,OAAO,GAAG,IAAV;AACD;AACF;;AAED,SAAKjB,KAAL,CAAWC,IAAX,CAAgB,MAAM;AACpB,aAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,YAAI,KAAKL,cAAL,IAAuB,CAACkB,OAA5B,EAAqC;AACnCA,UAAAA,OAAO,GAAG,KAAKlB,cAAf;AACD;;AACD,aAAKD,SAAL,CAAesD,eAAf,CAA+BnC,OAA/B,EAAwCgC,aAAxC,EACG3C,IADH,CACS+C,IAAD,IAAU;AACd,cAAIH,QAAJ,EAAcA,QAAQ,CAACG,IAAD,CAAR;AACdlD,UAAAA,OAAO;AACR,SAJH,EAKGI,KALH,CAKUC,GAAD,IAAS;AACdJ,UAAAA,MAAM,CAACI,GAAD,CAAN;AACD,SAPH;AAQD,OAZM,CAAP;AAaD,KAdD;AAeA,WAAO,IAAP;AACD;;AAED8C,EAAAA,OAAO,GAAI;AACT,SAAKtD,KAAL,CAAWC,IAAX,CAAgB,MAAM;AACpB,aAAO,KAAKH,SAAL,CAAewD,OAAf,EAAP;AACD,KAFD;AAGA,WAAO,IAAP;AACD;;AAEDf,EAAAA,IAAI,GAAI;AACN,SAAKvC,KAAL,CAAWC,IAAX,CAAgB,MAAM;AACpB,aAAO,KAAKH,SAAL,CAAeyC,IAAf,EAAP;AACD,KAFD;AAGA,WAAO,IAAP;AACD;;AAEDgB,EAAAA,KAAK,GAAI;AACP,SAAKvD,KAAL,CAAWC,IAAX,CAAgB,MAAM;AACpB,aAAO,KAAKH,SAAL,CAAeyD,KAAf,EAAP;AACD,KAFD;AAGA,WAAO,IAAP;AACD;;AAEDC,EAAAA,IAAI,CAAEC,cAAF,EAAkB;AACpB,SAAKzD,KAAL,CAAWC,IAAX,CAAgB,MAAM;AACpB,aAAQwD,cAAc,CAAC,IAAD,CAAd,IAAwBvD,OAAO,CAACC,OAAR,EAAhC;AACD,KAFD;AAGA,WAAO,IAAP;AACD;;AAnP2B,CAA9B;;ACHA,UAAc,GAAG;;AAEfuD,EAAAA,kBAAkB,EAAE,oBAFL;AAGfC,EAAAA,eAAe,EAAE,iBAHF;AAIfC,EAAAA,qBAAqB,EAAE,uBAJR;AAKfC,EAAAA,kBAAkB,EAAE,oBALL;AAMfC,EAAAA,iBAAiB,EAAE,mBANJ;AAOfC,EAAAA,qBAAqB,EAAE,uBAPR;AAQfC,EAAAA,kBAAkB,EAAE,oBARL;AASfC,EAAAA,iBAAiB,EAAE,mBATJ;AAUfC,EAAAA,oBAAoB,EAAE,sBAVP;AAWfC,EAAAA,kBAAkB,EAAE,oBAXL;AAYfC,EAAAA,iBAAiB,EAAE,mBAZJ;AAafC,EAAAA,qBAAqB,EAAE,uBAbR;AAcfC,EAAAA,aAAa,EAAE,eAdA;;AAgBfC,EAAAA,iBAAiB,EAAE,mBAhBJ;AAiBfC,EAAAA,uBAAuB,EAAE,yBAjBV;AAkBfC,EAAAA,uBAAuB,EAAE,yBAlBV;AAmBfC,EAAAA,4BAA4B,EAAE,8BAnBf;AAoBfC,EAAAA,kBAAkB,EAAE,oBApBL;AAqBfC,EAAAA,kBAAkB,EAAE,oBArBL;;AAuBfC,EAAAA,oBAAoB,EAAE;AAvBP,CAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACEA,MAAMC,aAAW,GAAG,MAAMA,WAAN,SAA0BC,KAA1B,CAAgC;;;;;;;;;;AAUlDpF,EAAAA,WAAW,CAAEqF,OAAF,EAAWC,OAAX,EAAoBC,iBAApB,EAAuC;AAChD,UAAMF,OAAO,CAACA,OAAR,IAAmBA,OAAzB;;AAEA,QAAI,CAACE,iBAAD,IAAsBC,0BAA0B,CAACF,OAAD,CAApD,EAA+D;AAC7D,YAAMF,KAAK,CAAC,mEAAD,CAAX;AACD,KAL+C;;;AAOhD,SAAKK,IAAL,GAAY,KAAKzF,WAAL,CAAiByF,IAA7B,CAPgD;;AAUhDL,IAAAA,KAAK,CAACM,iBAAN,CAAwB,IAAxB,EAA8B,KAAK1F,WAAnC;AAEA,SAAKsF,OAAL,GAAeA,OAAO,IAAI,EAA1B;AACA,SAAKA,OAAL,CAAaD,OAAb,GAAuBA,OAAO,CAACA,OAAR,IAAmBA,OAA1C;AACD;;AAEDM,EAAAA,QAAQ,CAAEC,WAAF,EAAe;AACrB,UAAMC,KAAK,GAAG,EAAd;;AACA,QAAI,KAAKP,OAAT,EAAkB;AAChB,YAAMQ,MAAM,GAAG/C,0BAAC,CAACgD,OAAF,CAAU,KAAKT,OAAf,IAA0B,KAAKA,OAA/B,GAAyC,CAAC,KAAKA,OAAN,CAAxD;AACAQ,MAAAA,MAAM,CAACE,OAAP,CAAeC,SAAS,IAAI;AAC1BJ,QAAAA,KAAK,CAACvF,IAAN,CAAW,0CAAX;;AACA,YAAI2F,SAAS,CAACC,IAAV,KAAmB,UAAvB,EAAmC;AACjC,gBAAMC,QAAQ,GAAG,EAAjB;AACAA,UAAAA,QAAQ,CAAC7F,IAAT,CAAe,uBAAsB2F,SAAS,CAACG,MAAO,GAAEH,SAAS,CAACI,OAAV,GAAqB,KAAIJ,SAAS,CAACI,OAAQ,GAA3C,GAAgD,EAAG,EAA3G;AACAJ,UAAAA,SAAS,CAACK,KAAV,IAAmBL,SAAS,CAACK,KAAV,CAAgBC,QAAnC,IAA+C,CAACN,SAAS,CAACK,KAAV,CAAgBE,GAAhE,IAAuEL,QAAQ,CAAC7F,IAAT,CAAe,gBAAemG,IAAI,CAACC,SAAL,CAAeT,SAAS,CAACK,KAAV,CAAgBC,QAA/B,CAAyC,GAAvE,CAAvE;AACAN,UAAAA,SAAS,CAACK,KAAV,IAAmBL,SAAS,CAACK,KAAV,CAAgBC,QAAnC,IAA+CN,SAAS,CAACK,KAAV,CAAgBE,GAA/D,IAAsEL,QAAQ,CAAC7F,IAAT,CAAe,oBAAmBmG,IAAI,CAACC,SAAL,CAAeT,SAAS,CAACK,KAAV,CAAgBC,QAA/B,CAAyC,GAA3E,CAAtE;AACAN,UAAAA,SAAS,CAACK,KAAV,IAAmBL,SAAS,CAACK,KAAV,CAAgBK,MAAnC,IAA6CR,QAAQ,CAAC7F,IAAT,CAAe,cAAamG,IAAI,CAACC,SAAL,CAAeT,SAAS,CAACK,KAAV,CAAgBK,MAA/B,CAAuC,EAAnE,CAA7C;AACAV,UAAAA,SAAS,CAACK,KAAV,IAAmB,CAACL,SAAS,CAACK,KAAV,CAAgBK,MAApC,IAA8CR,QAAQ,CAAC7F,IAAT,CAAc,kBAAd,CAA9C;AACAuF,UAAAA,KAAK,CAACvF,IAAN,CAAW6F,QAAQ,CAACS,IAAT,CAAc,EAAd,CAAX;AACAX,UAAAA,SAAS,CAACY,KAAV,IAAmBZ,SAAS,CAACY,KAAV,CAAgB3D,WAAnC,IAAkD2C,KAAK,CAACvF,IAAN,CAAY,UAAS2F,SAAS,CAACY,KAAV,CAAgB3D,WAAY,EAAjD,CAAlD;AACD,SATD,MASO,IAAI+C,SAAS,CAACZ,OAAd,EAAuB;AAC5BQ,UAAAA,KAAK,CAACvF,IAAN,CAAY,GAAE2F,SAAS,CAACZ,OAAQ,EAAhC;AACD;;AACD,YAAIY,SAAS,CAACa,UAAV,IAAwBb,SAAS,CAACa,UAAV,CAAqBC,MAArB,GAA8B,CAA1D,EAA6D;AAC3DlB,UAAAA,KAAK,CAACvF,IAAN,CAAW,sDAAX;AACA2F,UAAAA,SAAS,CAACa,UAAV,CAAqBd,OAArB,CAA6BgB,cAAc,IAAI;AAC7C,gBAAIA,cAAc,CAACL,MAAnB,EAA2B;AACzBd,cAAAA,KAAK,CAACvF,IAAN,CAAW0G,cAAc,CAACL,MAAf,CAAsBhB,QAAtB,EAAX;AACD;AACF,WAJD;AAKD;;AACD,YAAIC,WAAJ,EAAiB;AACfC,UAAAA,KAAK,CAACvF,IAAN,CAAW,wDAAX;;AACA,cAAI;AACF,kBAAM2G,UAAU,GAAGR,IAAI,CAACC,SAAL,CAAeT,SAAf,CAAnB;AACAJ,YAAAA,KAAK,CAACvF,IAAN,CAAW2G,UAAX;AACD,WAHD,CAGE,OAAOC,OAAP,EAAgB;AAChBrB,YAAAA,KAAK,CAACvF,IAAN,CAAY,6BAA4B4G,OAAO,CAAC7B,OAAQ,EAAxD;AACD;AACF;AACF,OA/BD;AAgCD;;AACD,QAAIQ,KAAK,CAACkB,MAAN,GAAe,CAAnB,EAAsB;AACpB,aAAOlB,KAAK,CAACe,IAAN,CAAW,MAAX,CAAP;AACD,KAFD,MAEO;AACL,aAAO,IAAP;AACD;AACF;;AApEiD,CAApD;;AAuEA,MAAMpB,0BAA0B,GAAIF,OAAD,IAAa;AAC9C,MAAIA,OAAO,IAAIA,OAAO,CAAC6B,MAAnB,IAA6BpE,0BAAC,CAACgD,OAAF,CAAUT,OAAO,CAAC6B,MAAlB,CAAjC,EAA4D;AAC1D,WAAO7B,OAAO,CAAC6B,MAAf;AACD;;AACD,SAAO,KAAP;AACD,CALD;;AAOA,MAAMC,oBAAkB,GAAG,CAAC/B,OAAD,EAAUxE,GAAV,KAAkB;AAC3C,MAAIA,GAAG,YAAYsE,aAAnB,EAAgC;AAC9B,WAAO,IAAIA,aAAJ,CAAgBE,OAAhB,EAAyBxE,GAAG,CAACyE,OAA7B,EAAsC,IAAtC,CAAP;AACD,GAFD,MAEO;AACL,WAAO,IAAIH,aAAJ,CAAgBE,OAAhB,EAAyB;AAAExE,MAAAA;AAAF,KAAzB,EAAkC,IAAlC,CAAP;AACD;AACF,CAND;;AAQA,MAAMwG,qBAAmB,GAAG,CAACF,MAAD,EAAS;AAAEjB,EAAAA,IAAI,GAAG,MAAT;AAAiBE,EAAAA,MAAM,GAAG,aAA1B;AAAyCkB,EAAAA,IAAI,GAAG;AAAhD,CAAT,KAAoE;AAC9F,QAAMjC,OAAO,GAAG8B,MAAM,CAACI,GAAP,CAAW1G,GAAG,IAAIA,GAAG,CAACwE,OAAJ,IAAexE,GAAG,CAAC2G,QAAJ,EAAjC,EAAiDZ,IAAjD,CAAsD,KAAtD,CAAhB;AACA,MAAIa,QAAQ,GAAG,EAAf;;AAEA,OAAK,MAAMC,KAAX,IAAoBP,MAApB,EAA4B;AAC1B,QAAIO,KAAK,YAAYvC,aAArB,EAAkC;AAChC,YAAMwC,WAAW,GAAGL,IAAI,IAAI9B,0BAA0B,CAACkC,KAAK,CAACpC,OAAP,CAAtD;;AACA,UAAIqC,WAAW,IAAIA,WAAW,CAACZ,MAA/B,EAAuC;AACrCU,QAAAA,QAAQ,GAAGA,QAAQ,CAACG,MAAT,CAAgBD,WAAhB,CAAX;AACD,OAFD,MAEO,IAAID,KAAK,CAACpC,OAAV,EAAmB;AACxBmC,QAAAA,QAAQ,CAACnH,IAAT,CAAcoH,KAAK,CAACpC,OAApB;AACD;AACF,KAPD,MAOO;AACLmC,MAAAA,QAAQ,CAACnH,IAAT,CAAcoH,KAAd;AACD;AACF;;AACD,QAAMG,MAAM,GAAG,IAAI1C,aAAJ,CAAgBE,OAAhB,EAAyB;AAAE8B,IAAAA,MAAM,EAAEM,QAAV;AAAoBvB,IAAAA,IAApB;AAA0BE,IAAAA;AAA1B,GAAzB,EAA6D,IAA7D,CAAf;AACA,SAAOyB,MAAP;AACD,CAlBD;;AAoBA,iBAAc,GAAG;AACf1C,eAAAA,aADe;AAEfiC,sBAAAA,oBAFe;AAGfC,uBAAAA;AAHe,CAAjB;;AC5GA,MAAMS,oBAAkB,GAAG,SAA3B;AACA,mBAAc,GAAG;AACfA,sBAAAA,oBADe;AAEfC,EAAAA,iBAAiB,EAAE,CACjB;AAAEtC,IAAAA,IAAI,EAAE,SAAR;AAAmBuC,IAAAA,SAAS,EAAE;AAA9B,GADiB,EAEjB;AAAEvC,IAAAA,IAAI,EAAE,eAAR;AAAyBuC,IAAAA,SAAS,EAAE;AAApC,GAFiB,EAGjB;AAAEvC,IAAAA,IAAI,EAAE,mBAAR;AAA6BuC,IAAAA,SAAS,EAAE;AAAxC,GAHiB,EAIjB;AAAEvC,IAAAA,IAAI,EAAE,OAAR;AAAiBuC,IAAAA,SAAS,EAAE;AAA5B,GAJiB,EAKjB;AAAEvC,IAAAA,IAAI,EAAE,aAAR;AAAuBuC,IAAAA,SAAS,EAAE;AAAlC,GALiB,EAMjB;AAAEvC,IAAAA,IAAI,EAAE,iBAAR;AAA2BuC,IAAAA,SAAS,EAAE;AAAtC,GANiB,EAOjB;AAAEvC,IAAAA,IAAI,EAAE,OAAR;AAAiBuC,IAAAA,SAAS,EAAE;AAA5B,GAPiB,EAQjB;AAAEvC,IAAAA,IAAI,EAAE,aAAR;AAAuBuC,IAAAA,SAAS,EAAE;AAAlC,GARiB,EASjB;AAAEvC,IAAAA,IAAI,EAAE,iBAAR;AAA2BuC,IAAAA,SAAS,EAAE;AAAtC,GATiB,EAUjB;AAAEvC,IAAAA,IAAI,EAAE,gBAAR;AAA0BuC,IAAAA,SAAS,EAAE;AAArC,GAViB,EAWjB;AAAEvC,IAAAA,IAAI,EAAE,WAAR;AAAqBuC,IAAAA,SAAS,EAAE;AAAhC,GAXiB,EAYjB;AAAEvC,IAAAA,IAAI,EAAE,iBAAR;AAA2BuC,IAAAA,SAAS,EAAE;AAAtC,GAZiB,EAajB;AAAEvC,IAAAA,IAAI,EAAE,iBAAR;AAA2BuC,IAAAA,SAAS,EAAE;AAAtC,GAbiB,EAcjB;AAAEvC,IAAAA,IAAI,EAAE,OAAR;AAAiBuC,IAAAA,SAAS,EAAE;AAA5B,GAdiB,EAgBjB;AAAEvC,IAAAA,IAAI,EAAE,UAAR;AAAoBuC,IAAAA,SAAS,EAAE;AAA/B,GAhBiB,EAiBjB;AAAEvC,IAAAA,IAAI,EAAE,eAAR;AAAyBuC,IAAAA,SAAS,EAAE;AAApC,GAjBiB,EAkBjB;AAAEvC,IAAAA,IAAI,EAAE,gBAAR;AAA0BuC,IAAAA,SAAS,EAAE;AAArC,GAlBiB,EAoBjB;AAAEvC,IAAAA,IAAI,EAAE,QAAR;AAAkBuC,IAAAA,SAAS,EAAE;AAA7B,GApBiB,EAqBjB;AAAEvC,IAAAA,IAAI,EAAE,eAAR;AAAyBuC,IAAAA,SAAS,EAAE;AAApC,GArBiB,EAsBjB;AAAEvC,IAAAA,IAAI,EAAE,mBAAR;AAA6BuC,IAAAA,SAAS,EAAE;AAAxC,GAtBiB,EAwBjB;AAAEvC,IAAAA,IAAI,EAAE,mBAAR;AAA6BuC,IAAAA,SAAS,EAAE;AAAxC,GAxBiB,EAyBjB;AAAEvC,IAAAA,IAAI,EAAE,sBAAR;AAAgCuC,IAAAA,SAAS,EAAE;AAA3C,GAzBiB,EA0BjB;AAAEvC,IAAAA,IAAI,EAAE,mBAAR;AAA6BuC,IAAAA,SAAS,EAAE;AAAxC,GA1BiB,EA2BjB;AAAEvC,IAAAA,IAAI,EAAE,sBAAR;AAAgCuC,IAAAA,SAAS,EAAE;AAA3C,GA3BiB,EA4BjB;AAAEvC,IAAAA,IAAI,EAAE,mBAAR;AAA6BuC,IAAAA,SAAS,EAAE;AAAxC,GA5BiB,EA6BjB;AAAEvC,IAAAA,IAAI,EAAE,sBAAR;AAAgCuC,IAAAA,SAAS,EAAE;AAA3C,GA7BiB,EA8BjB;AAAEvC,IAAAA,IAAI,EAAE,mBAAR;AAA6BuC,IAAAA,SAAS,EAAE;AAAxC,GA9BiB,EA+BjB;AAAEvC,IAAAA,IAAI,EAAE,sBAAR;AAAgCuC,IAAAA,SAAS,EAAE;AAA3C,GA/BiB,EAgCjB;AAAEvC,IAAAA,IAAI,EAAE,wBAAR;AAAkCuC,IAAAA,SAAS,EAAE;AAA7C,GAhCiB,EAiCjB;AAAEvC,IAAAA,IAAI,EAAE,2BAAR;AAAqCuC,IAAAA,SAAS,EAAE;AAAhD,GAjCiB,EAkCjB;AAAEvC,IAAAA,IAAI,EAAE,wBAAR;AAAkCuC,IAAAA,SAAS,EAAE;AAA7C,GAlCiB,EAmCjB;AAAEvC,IAAAA,IAAI,EAAE,2BAAR;AAAqCuC,IAAAA,SAAS,EAAE;AAAhD,GAnCiB,EAoCjB;AAAEvC,IAAAA,IAAI,EAAE,iBAAR;AAA2BuC,IAAAA,SAAS,EAAE;AAAtC,GApCiB,EAqCjB;AAAEvC,IAAAA,IAAI,EAAE,oBAAR;AAA8BuC,IAAAA,SAAS,EAAE;AAAzC,GArCiB,EAsCjB;AAAEvC,IAAAA,IAAI,EAAE,iBAAR;AAA2BuC,IAAAA,SAAS,EAAE;AAAtC,GAtCiB,EAuCjB;AAAEvC,IAAAA,IAAI,EAAE,oBAAR;AAA8BuC,IAAAA,SAAS,EAAE;AAAzC,GAvCiB,EAwCjB;AAAEvC,IAAAA,IAAI,EAAE,aAAR;AAAuBuC,IAAAA,SAAS,EAAE;AAAlC,GAxCiB,EAyCjB;AAAEvC,IAAAA,IAAI,EAAE,gBAAR;AAA0BuC,IAAAA,SAAS,EAAE;AAArC,GAzCiB,EA0CjB;AAAEvC,IAAAA,IAAI,EAAE,MAAR;AAAgBuC,IAAAA,SAAS,EAAE;AAA3B,GA1CiB,EA2CjB;AAAEvC,IAAAA,IAAI,EAAE,SAAR;AAAmBuC,IAAAA,SAAS,EAAE;AAA9B,GA3CiB,EA6CjB;AAAEvC,IAAAA,IAAI,EAAE,cAAR;AAAwBuC,IAAAA,SAAS,EAAE;AAAnC,GA7CiB,EA8CjB;AAAEvC,IAAAA,IAAI,EAAE,sBAAR;AAAgCuC,IAAAA,SAAS,EAAE;AAA3C,GA9CiB,CAFJ;AAkDfC,EAAAA,mBAAmB,EAAE,CACnB;AAAExC,IAAAA,IAAI,EAAE,OAAR;AAAiBuC,IAAAA,SAAS,EAAE;AAA5B,GADmB,EAEnB;AAAEvC,IAAAA,IAAI,EAAE,YAAR;AAAsBuC,IAAAA,SAAS,EAAE;AAAjC,GAFmB,EAGnB;AAAEvC,IAAAA,IAAI,EAAE,sBAAR;AAAgCuC,IAAAA,SAAS,EAAE;AAA3C,GAHmB,EAInB;AAAEvC,IAAAA,IAAI,EAAE,wBAAR;AAAkCuC,IAAAA,SAAS,EAAE;AAA7C,GAJmB,EAKnB;AAAEvC,IAAAA,IAAI,EAAE,yBAAR;AAAmCuC,IAAAA,SAAS,EAAE;AAA9C,GALmB,EAMnB;AAAEvC,IAAAA,IAAI,EAAE,eAAR;AAAyBuC,IAAAA,SAAS,EAAE;AAApC,GANmB,EAOnB;AAAEvC,IAAAA,IAAI,EAAE,qBAAR;AAA+BuC,IAAAA,SAAS,EAAE;AAA1C,GAPmB,EAQnB;AAAEvC,IAAAA,IAAI,EAAEqC,oBAAR;AAA4BE,IAAAA,SAAS,EAAE;AAAvC,GARmB,CAlDN;AA4DfE,EAAAA,mBAAmB,EAAE,CACnB;AAAEzC,IAAAA,IAAI,EAAE,QAAR;AAAkBuC,IAAAA,SAAS,EAAE;AAA7B,GADmB,EAEnB;AAAEvC,IAAAA,IAAI,EAAE,OAAR;AAAiBuC,IAAAA,SAAS,EAAE;AAA5B,GAFmB,EAGnB;AAAEvC,IAAAA,IAAI,EAAE,MAAR;AAAgBuC,IAAAA,SAAS,EAAE;AAA3B,GAHmB;AA5DN,CAAjB;;;;;;ACDA,MAAM;AAAEG,UAAAA;AAAF,IAAaC,uBAAnB;AAIA,MAAMC,OAAK,GAAGC,yBAAgB,CAAC,2BAAD,CAA9B;AAEA,MAAM;AAAEnD,eAAAA;AAAF,IAAkBoD,aAAxB;AAEA,MAAM;AAAER,EAAAA,iBAAF;AAAqBE,EAAAA,mBAArB;AAA0CC,EAAAA;AAA1C,IAAkEM,eAAxE;AAEAT,iBAAiB,CAAC/B,OAAlB,CAA2ByC,QAAD,IAAc;AACtCA,EAAAA,QAAQ,CAACC,KAAT,GAAiBC,eAAAA,CAAS,cAAaF,QAAQ,CAACT,SAAU,EAAzCW,CAAjB;AACD,CAFD;AAIAV,mBAAmB,CAACjC,OAApB,CAA6B4C,SAAD,IAAe;AACzCA,EAAAA,SAAS,CAACF,KAAV,GAAkBC,eAAAA,CAAS,gBAAeC,SAAS,CAACZ,SAAU,EAA5CW,CAAlB;AACD,CAFD;AAIAT,mBAAmB,CAAClC,OAApB,CAA6B6C,SAAD,IAAe;AACzCA,EAAAA,SAAS,CAACH,KAAV,GAAkBC,eAAAA,CAAS,eAAcE,SAAS,CAACb,SAAU,EAA3CW,CAAlB;AACD,CAFD;AAOA,oBAAc,GAAG,MAAMG,cAAN,CAAqB;AACpC9I,EAAAA,WAAW,CAAE;AAAE+I,IAAAA,kBAAF;AAAsBC,IAAAA;AAAtB,GAAF,EAAgC;AACzC,SAAKC,SAAL,GAAiB,EAAjB;AACA,SAAKC,eAAL,GAAuB,EAAvB;AACA,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAKC,gBAAL,GAAwB,EAAxB;AACA,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAKN,kBAAL,GAA0BA,kBAA1B;AACA,SAAKC,IAAL,GAAYA,IAAZ;;AACA,SAAKM,oBAAL;;AACA,SAAKC,qBAAL;;AACA,SAAKC,qBAAL;;AACA,SAAKC,eAAL;;AACA,SAAKC,gBAAL;;AACA,SAAKC,gBAAL;AACD;;AAEDL,EAAAA,oBAAoB,GAAI;AACtBvB,IAAAA,iBAAiB,CAAC/B,OAAlB,CAA2ByC,QAAD,IAAc;AACtC,WAAKQ,SAAL,CAAeR,QAAQ,CAAChD,IAAxB,IAAgC,IAAKgD,QAAQ,CAACC,KAAd,CAAqB,KAAKK,kBAA1B,EAA8C,KAAKC,IAAnD,CAAhC;AACD,KAFD;AAGD;;AAEDO,EAAAA,qBAAqB,GAAI;AACvBtB,IAAAA,mBAAmB,CAACjC,OAApB,CAA6B4D,EAAD,IAAQ;AAClC,WAAKT,UAAL,CAAgBS,EAAE,CAACnE,IAAnB,IAA2B,IAAKmE,EAAE,CAAClB,KAAR,CAAe,KAAKK,kBAApB,EAAwC,KAAKC,IAA7C,CAA3B;AACD,KAFD;AAGD;;AAEDQ,EAAAA,qBAAqB,GAAI;AACvBtB,IAAAA,mBAAmB,CAAClC,OAApB,CAA6B6D,EAAD,IAAQ;AAClC,WAAKR,UAAL,CAAgBQ,EAAE,CAACpE,IAAnB,IAA2B,IAAKoE,EAAE,CAACnB,KAAR,CAAe,KAAKK,kBAApB,EAAwC,KAAKC,IAA7C,CAA3B;AACD,KAFD;AAGD;;AAEDS,EAAAA,eAAe,GAAI;AACjB,SAAKT,IAAL,CAAUtJ,YAAY,CAACb,SAAvB,EACGmH,OADH,CACWyC,QAAQ,IAAI;AACnB,UAAI,KAAKQ,SAAL,CAAeR,QAAQ,CAACqB,GAAxB,CAAJ,EAAkC;AAChCzB,QAAAA,OAAK,CAAE,GAAEI,QAAQ,CAACqB,GAAI,wCAAjB,CAAL;AACD;;AACD,WAAKb,SAAL,CAAeR,QAAQ,CAACqB,GAAxB,IAA+B,KAAKC,UAAL,CAAgBtB,QAAhB,EAA0B,UAA1B,CAA/B;;AACA,UAAIA,QAAQ,CAACuB,MAAb,EAAqB;AACnB,aAAKd,eAAL,CAAqB5I,IAArB,CAA0BmI,QAAQ,CAACqB,GAAnC;AACD;AACF,KATH;AAUD;;AAEDJ,EAAAA,gBAAgB,GAAI;AAClB,SAAKV,IAAL,CAAUtJ,YAAY,CAACZ,WAAvB,EACGkH,OADH,CACW4C,SAAS,IAAI;AACpB,UAAI,KAAKO,UAAL,CAAgBP,SAAS,CAACkB,GAA1B,CAAJ,EAAoC;AAClCzB,QAAAA,OAAK,CAAE,GAAEO,SAAS,CAACkB,GAAI,0CAAlB,CAAL;AACD;;AACD,WAAKX,UAAL,CAAgBP,SAAS,CAACkB,GAA1B,IAAiC,KAAKC,UAAL,CAAgBnB,SAAhB,EAA2B,WAA3B,CAAjC;;AACA,UAAIA,SAAS,CAACoB,MAAd,EAAsB;AACpB,aAAKZ,gBAAL,CAAsB9I,IAAtB,CAA2BsI,SAAS,CAACkB,GAArC;AACD;AACF,KATH;AAUD;;AAEDH,EAAAA,gBAAgB,GAAI;AAClB,SAAKX,IAAL,CAAUtJ,YAAY,CAACX,WAAvB,EACGiH,OADH,CACW6C,SAAS,IAAI;AACpB,UAAI,KAAKQ,UAAL,CAAgBR,SAAS,CAACiB,GAA1B,CAAJ,EAAoC;AAClCzB,QAAAA,OAAK,CAAE,GAAEQ,SAAS,CAACiB,GAAI,yCAAlB,CAAL;AACD;;AACD,WAAKT,UAAL,CAAgBR,SAAS,CAACiB,GAA1B,IAAiC,KAAKC,UAAL,CAAgBlB,SAAhB,EAA2B,WAA3B,CAAjC;AACD,KANH;AAOD;;AAEDoB,EAAAA,iBAAiB,GAAI;AACnB,WAAO,KAAKf,eAAL,CACJ3B,GADI,CACA9B,IAAI,IAAI,KAAKwD,SAAL,CAAexD,IAAf,CADR,CAAP;AAED;;AAEDyE,EAAAA,kBAAkB,GAAI;AACpB,WAAO,KAAKd,gBAAL,CACJ7B,GADI,CACA9B,IAAI,IAAI,KAAK0D,UAAL,CAAgB1D,IAAhB,CADR,CAAP;AAED;;AAEDsE,EAAAA,UAAU,CAAE;AAAEI,IAAAA,GAAF;AAAOL,IAAAA,GAAP;AAAYM,IAAAA;AAAZ,GAAF,EAAsBC,QAAtB,EAAgC;AACxC,QAAIA,QAAQ,KAAK,UAAb,IAA2BA,QAAQ,KAAK,WAAxC,IAAuDA,QAAQ,KAAK,WAAxE,EAAqF;AACnF,YAAMjF,KAAK,CAAE,oBAAmBiF,QAAS,EAA9B,CAAX;AACD,KAHuC;;;AAMxC,QAAIA,QAAQ,KAAK,UAAjB,EAA6B;AAC3B,YAAM5B,QAAQ,GAAGV,iBAAiB,CAACuC,IAAlB,CAAuB7B,QAAQ,IAAI0B,GAAG,KAAK1B,QAAQ,CAACT,SAApD,CAAjB;;AACA,UAAIS,QAAJ,EAAc;AACZ,eAAO,IAAKA,QAAQ,CAACC,KAAd,CAAqB;AAAEoB,UAAAA,GAAF;AAAO,aAAG,KAAKf;AAAf,SAArB,EAA0D,KAAKC,IAA/D,EAAqEoB,IAArE,CAAP;AACD;AACF;;AACD,QAAIC,QAAQ,KAAK,WAAjB,EAA8B;AAC5B,YAAMT,EAAE,GAAG3B,mBAAmB,CAACqC,IAApB,CAAyBV,EAAE,IAAIO,GAAG,KAAKP,EAAE,CAAC5B,SAA1C,CAAX;;AACA,UAAI4B,EAAJ,EAAQ;AACN,eAAO,IAAKA,EAAE,CAAClB,KAAR,CAAe;AAAEoB,UAAAA,GAAF;AAAO,aAAG,KAAKf;AAAf,SAAf,EAAoD,KAAKC,IAAzD,EAA+DoB,IAA/D,CAAP;AACD;AACF;;AACD,QAAIC,QAAQ,KAAK,WAAjB,EAA8B;AAC5B,YAAMR,EAAE,GAAG3B,mBAAmB,CAACoC,IAApB,CAAyBT,EAAE,IAAIM,GAAG,KAAKN,EAAE,CAAC7B,SAA1C,CAAX;;AACA,UAAI6B,EAAJ,EAAQ;AACN,eAAO,IAAKA,EAAE,CAACnB,KAAR,CAAe;AAAEoB,UAAAA,GAAF;AAAO,aAAG,KAAKf;AAAf,SAAf,EAAoD,KAAKC,IAAzD,EAA+DoB,IAA/D,CAAP;AACD;AACF;;AAED,UAAMG,YAAY,GAAG,MAAM;AACzB,UAAI,CAAC,KAAKvB,IAAL,CAAUtJ,YAAY,CAACR,qBAAvB,CAAL,EAAoD;AAClD,cAAM,IAAIiG,aAAJ,CACJ,uDADI,EAEJ;AACEe,UAAAA,IAAI,EAAE,UADR;AAEEG,UAAAA,OAAO,EAAE,cAFX;AAGED,UAAAA,MAAM,EAAEoE,wBAAI,CAACC,QAAL,CAAcC,UAAd,CAHV;AAIEpE,UAAAA,KAAK,EAAE;AAAE6D,YAAAA,GAAG,EAAE,CAAC,CAACA,GAAT;AAAcL,YAAAA,GAAd;AAAmBM,YAAAA,IAAnB;AAAyBC,YAAAA;AAAzB;AAJT,SAFI,CAAN;AASD;AACF,KAZD;;AAcA,QAAI,CAACF,GAAL,EAAU;AACR,YAAMQ,WAAW,GAAI,UAASN,QAAS,IAAGP,GAAI,EAA9C;;AACA,UAAI;AACF,cAAMc,UAAU,GAAGjC,eAAAA,CAAQgC,WAARhC,CAAnB;;AACA,YAAIkC,2BAAO,CAACD,UAAD,CAAX,EAAyB;AACvB,iBAAO,IAAIA,UAAJ,CAAe;AAAEd,YAAAA,GAAF;AAAO,eAAG,KAAKf;AAAf,WAAf,EAAoD,KAAKC,IAAzD,EAA+DoB,IAA/D,CAAP;AACD,SAFD,MAEO,IAAIrH,0BAAC,CAACC,UAAF,CAAa4H,UAAb,CAAJ,EAA8B;AACnC,iBAAOA,UAAU,CAAC;AAAEd,YAAAA,GAAF;AAAO,eAAG,KAAKf;AAAf,WAAD,EAAsC,KAAKC,IAA3C,EAAiDoB,IAAjD,CAAjB;AACD,SAFM,MAEA,IAAIS,2BAAO,CAACD,UAAU,CAACE,WAAZ,CAAX,EAAqC;AAC1C,iBAAO,IAAIF,UAAU,CAACE,WAAf,CAA2B;AAAEhB,YAAAA,GAAF;AAAO,eAAG,KAAKf;AAAf,WAA3B,EAAgE,KAAKC,IAArE,EAA2EoB,IAA3E,CAAP;AACD,SAFM,MAEA;AACL,gBAAM,IAAIhF,KAAJ,CAAW,GAAEuF,WAAY,kDAAzB,CAAN;AACD;AACF,OAXD,CAWE,OAAO9J,GAAP,EAAY;AACZ,cAAM,IAAIuE,KAAJ,CAAW,wBAAuB0E,GAAI,IAAGO,QAAS,yBAAwBM,WAAY,MAAK9J,GAAG,CAACwE,OAAQ,EAAvG,CAAN;AACD;AACF;;AAED,QAAIwF,2BAAO,CAACV,GAAD,CAAX,EAAkB;AAChB,UAAI;AACF,cAAMS,UAAU,GAAGT,GAAnB;AACA,eAAO,IAAIS,UAAJ,CAAe;AAAEd,UAAAA,GAAF;AAAO,aAAG,KAAKf;AAAf,SAAf,EAAoD,KAAKC,IAAzD,EAA+DoB,IAA/D,CAAP;AACD,OAHD,CAGE,OAAOvJ,GAAP,EAAY;AACZ,cAAM,IAAIuE,KAAJ,CAAW,0BAAyB0E,GAAI,0BAAyBjJ,GAAG,CAACwE,OAAQ,EAA7E,CAAN;AACD;AACF;;AACD,QAAItC,0BAAC,CAACC,UAAF,CAAamH,GAAb,CAAJ,EAAuB;AACrB,UAAI;AACF,eAAOA,GAAG,CAAC;AAAEL,UAAAA,GAAF;AAAO,aAAG,KAAKf;AAAf,SAAD,EAAsC,KAAKC,IAA3C,EAAiDoB,IAAjD,CAAV;AACD,OAFD,CAEE,OAAOvJ,GAAP,EAAY;AACZ,cAAM,IAAIuE,KAAJ,CAAW,0BAAyB0E,GAAI,6BAA4BjJ,GAAG,CAACwE,OAAQ,EAAhF,CAAN;AACD;AACF;;AACD,QAAItC,0BAAC,CAACgI,QAAF,CAAWZ,GAAX,KAAmB,CAACpH,0BAAC,CAACiI,QAAF,CAAWb,GAAX,CAAxB,EAAyC;AACvC,UAAI;AACF,cAAMc,UAAU,GAAG9H,MAAM,CAAC+H,IAAP,CAAYf,GAAZ,EAAiBgB,MAAjB,CAAwB,CAACtD,MAAD,EAASuD,GAAT,KAAiB;AAC1DvD,UAAAA,MAAM,CAACuD,GAAD,CAAN,GAAehB,IAAD,IAAU;AACtB,kBAAMiB,MAAM,GAAGlB,GAAG,CAACiB,GAAD,CAAlB;;AACA,gBAAIrI,0BAAC,CAACC,UAAF,CAAaqI,MAAb,CAAJ,EAA0B;AACxB,qBAAOA,MAAM,CAACjB,IAAD,CAAb;AACD,aAFD,MAEO,IAAIrH,0BAAC,CAACiI,QAAF,CAAWK,MAAX,CAAJ,EAAwB;AAC7B,kBAAI;AACF,sBAAMC,EAAE,GAAG,IAAInD,QAAJ,CAAW;AACpBoD,kBAAAA,IAAI,EAAE,KADc;AAEpB5C,kBAAAA,OAAO,EAAE,KAFW;AAGpB6C,kBAAAA,OAAO,EAAEpB;AAHW,iBAAX,CAAX;AAKA,uBAAOkB,EAAE,CAACG,GAAH,CAAOJ,MAAP,CAAP;AACD,eAPD,CAOE,OAAOxK,GAAP,EAAY;AACZ,sBAAM,IAAIuE,KAAJ,CAAW,GAAEvE,GAAG,CAACwE,OAAJ,IAAexE,GAAI,EAAhC,CAAN;AACD;AACF,aAXM,MAWA;AACL,oBAAM,IAAIuE,KAAJ,CAAW,WAAUgG,GAAI,8DAAzB,CAAN;AACD;AACF,WAlBD;;AAmBA,iBAAOvD,MAAP;AACD,SArBkB,EAqBhB,EArBgB,CAAnB;AAsBA,eAAOoD,UAAP;AACD,OAxBD,CAwBE,OAAOpK,GAAP,EAAY;AACZ,cAAM,IAAIuE,KAAJ,CAAW,0BAAyB0E,GAAI,IAAGO,QAAS,iCAAgCxJ,GAAG,CAACwE,OAAQ,EAAhG,CAAN;AACD;AACF;;AAED,QAAItC,0BAAC,CAACiI,QAAF,CAAWb,GAAX,CAAJ,EAAqB;AACnB,YAAMuB,OAAO,GAAG,EAAhB;AAEA,YAAMC,QAAQ,GAAG,CAAC;AAChBC,QAAAA,kBAAkB,EAAEzB,GADJ;AAEhB0B,QAAAA,qBAAqB,EAAE;AAFP,OAAD,CAAjB;;AAIA,UAAI1B,GAAG,CAAC2B,OAAJ,CAAY,GAAZ,KAAoB,CAAxB,EAA2B;AACzBH,QAAAA,QAAQ,CAACrL,IAAT,CAAc;AACZsL,UAAAA,kBAAkB,EAAEzB,GAAG,CAAC4B,MAAJ,CAAW,CAAX,EAAc5B,GAAG,CAAC6B,WAAJ,CAAgB,GAAhB,CAAd,CADR;AAEZH,UAAAA,qBAAqB,EAAE1B,GAAG,CAAC4B,MAAJ,CAAW5B,GAAG,CAAC6B,WAAJ,CAAgB,GAAhB,IAAuB,CAAlC;AAFX,SAAd;AAID;;AAED,YAAMC,iBAAiB,GAAG,CAACC,UAAD,EAAaC,eAAb,KAAiC;AACzD,YAAIvB,UAAU,GAAGjC,eAAAA,CAAAA,CAAjB;;AACA,YAAIiC,UAAU,CAACwB,OAAf,EAAwB;AACtBxB,UAAAA,UAAU,GAAGA,UAAU,CAACwB,OAAxB;AACD;;AACD,YAAID,eAAJ,EAAqB;AACnB,cAAI9B,QAAQ,KAAK,UAAb,IAA2BO,UAAU,CAACyB,eAAtC,IAAyDzB,UAAU,CAACyB,eAAX,CAA2BF,eAA3B,CAA7D,EAA0G;AACxGvB,YAAAA,UAAU,GAAGA,UAAU,CAACyB,eAAX,CAA2BF,eAA3B,CAAb;AACD,WAFD,MAEO,IAAI9B,QAAQ,KAAK,WAAb,IAA4BO,UAAU,CAAC0B,gBAAvC,IAA2D1B,UAAU,CAAC0B,gBAAX,CAA4BH,eAA5B,CAA/D,EAA6G;AAClHvB,YAAAA,UAAU,GAAGA,UAAU,CAAC0B,gBAAX,CAA4BH,eAA5B,CAAb;AACD,WAFM,MAEA;AACL,kBAAM,IAAI/G,KAAJ,CAAW,UAAS8G,UAAW,SAAQC,eAAgB,IAAG9B,QAAS,aAAnE,CAAN;AACD;AACF;;AACD,YAAIQ,2BAAO,CAACD,UAAD,CAAX,EAAyB;AACvB,iBAAO,IAAIA,UAAJ,CAAe;AAAEd,YAAAA,GAAF;AAAO,eAAG,KAAKf;AAAf,WAAf,EAAoD,KAAKC,IAAzD,EAA+DoB,IAA/D,CAAP;AACD,SAFD,MAEO,IAAIrH,0BAAC,CAACC,UAAF,CAAa4H,UAAb,CAAJ,EAA8B;AACnC,iBAAOA,UAAU,CAAC;AAAEd,YAAAA,GAAF;AAAO,eAAG,KAAKf;AAAf,WAAD,EAAsC,KAAKC,IAA3C,EAAiDoB,IAAjD,CAAjB;AACD,SAFM,MAEA,IAAIS,2BAAO,CAACD,UAAU,CAACE,WAAZ,CAAX,EAAqC;AAC1C,iBAAO,IAAIF,UAAU,CAACE,WAAf,CAA2B;AAAEhB,YAAAA,GAAF;AAAO,eAAG,KAAKf;AAAf,WAA3B,EAAgE,KAAKC,IAArE,EAA2EoB,IAA3E,CAAP;AACD,SAFM,MAEA;AACL,gBAAM,IAAIhF,KAAJ,CAAW,GAAE+E,GAAI,6BAAjB,CAAN;AACD;AACF,OAvBD;;AAyBA,WAAK,MAAMoC,OAAX,IAAsBZ,QAAtB,EAAgC;AAC9B,cAAMa,WAAW,GAAGhC,wBAAI,CAAChK,OAAL,CAAaiM,OAAO,CAACC,GAAR,EAAb,EAA4BH,OAAO,CAACX,kBAApC,CAApB;;AACA,YAAIe,sBAAE,CAACC,UAAH,CAAcJ,WAAd,CAAJ,EAAgC;AAC9BjC,UAAAA,YAAY;;AACZ,cAAI;AACF,mBAAO0B,iBAAiB,CAACO,WAAD,EAAcD,OAAO,CAACV,qBAAtB,CAAxB;AACD,WAFD,CAEE,OAAOhL,GAAP,EAAY;AACZ6K,YAAAA,OAAO,CAACpL,IAAR,CAAc,mBAAkBwJ,GAAI,IAAGO,QAAS,SAAQF,GAAI,MAAKtJ,GAAG,CAACwE,OAAQ,GAA7E;AACD;AACF;;AACD,YAAI;AACF,iBAAO4G,iBAAiB,CAACM,OAAO,CAACX,kBAAT,EAA6BW,OAAO,CAACV,qBAArC,CAAxB;AACD,SAFD,CAEE,OAAOhL,GAAP,EAAY;AACZ6K,UAAAA,OAAO,CAACpL,IAAR,CAAc,mBAAkBwJ,GAAI,IAAGO,QAAS,SAAQF,GAAI,MAAKtJ,GAAG,CAACwE,OAAQ,GAA7E;AACD;AACF;;AAEDqG,MAAAA,OAAO,CAAC1F,OAAR,CAAgBqC,OAAhB;AACD;;AACD,UAAM,IAAIjD,KAAJ,CAAW,mBAAkB0E,GAAI,IAAGO,QAAS,2BAA7C,CAAN;AACD;;AAlPmC,CAAtC;;ACzBA,aAAc,GAAG;AACfwC,EAAAA,qBAAqB,EAAE,uBADR;AAEfC,EAAAA,oBAAoB,EAAE,sBAFP;AAGfC,EAAAA,qBAAqB,EAAE,uBAHR;AAIfC,EAAAA,qBAAqB,EAAE,uBAJR;AAKfC,EAAAA,oBAAoB,EAAE,sBALP;AAMfC,EAAAA,yBAAyB,EAAE,2BANZ;AAOfC,EAAAA,oBAAoB,EAAE,sBAPP;AAQfC,EAAAA,qBAAqB,EAAE,uBARR;AASfC,EAAAA,yBAAyB,EAAE,2BATZ;AAUfC,EAAAA,+BAA+B,EAAE;AAVlB,CAAjB;;;;;;;;;;;;ACAA,0BAAc,GAAG,MAAMC,oBAAN,CAA2B;AAC1CvN,EAAAA,WAAW,CAAEwN,QAAQ,GAAG,EAAb,EAAiB;AAC1B,SAAK/H,IAAL,GAAY+H,QAAQ,CAAC/H,IAArB;AACA,SAAKgI,QAAL,GAAgBD,QAAQ,CAACC,QAAzB;AACA,SAAKC,MAAL,GAAcF,QAAQ,CAACE,MAAvB;AACA,SAAKC,IAAL,GAAYH,QAAQ,CAACG,IAArB;AACD;;AANyC,CAA5C;;ACEA,MAAMC,iBAAN,CAAsB;AACpB5N,EAAAA,WAAW,CAAEwN,QAAQ,GAAG,EAAb,EAAiB;AAC1B,SAAKK,QAAL,GAAgBL,QAAQ,CAACK,QAAzB;AACA,SAAKJ,QAAL,GAAgBD,QAAQ,CAACC,QAAzB;AACA,SAAKK,OAAL,GAAeN,QAAQ,CAACM,OAAxB;AACA,SAAKC,WAAL,GAAmBP,QAAQ,CAACO,WAA5B;AACA,SAAKC,MAAL,GAAcR,QAAQ,CAACQ,MAAvB;AACD;;AAEDrI,EAAAA,QAAQ,CAAEsI,MAAM,GAAG,CAAX,EAAc;AACpB,UAAMC,QAAQ,GAAG,EAAjB;AACA,QAAI,KAAKL,QAAT,EAAmBK,QAAQ,CAAC5N,IAAT,CAAcyC,0BAAC,CAACoL,QAAF,CAAW,KAAKN,QAAhB,EAA0B;AAAE9G,MAAAA,MAAM,EAAE;AAAV,KAA1B,CAAd;AACnB,QAAI,KAAK0G,QAAT,EAAmBS,QAAQ,CAAC5N,IAAT,CAAc,KAAKmN,QAAnB;AACnB,QAAI,KAAKK,OAAT,EAAkBI,QAAQ,CAAC5N,IAAT,CAAc,KAAKwN,OAAnB;AAClB,WAAQ,GAAE,IAAIM,MAAJ,CAAWH,MAAX,CAAmB,SAAQC,QAAQ,CAACtH,IAAT,CAAc,KAAd,CAAqB,GAA1D;AACD;;AAfmB;;AAkBtB,MAAMyH,kBAAN,CAAuB;AACrBrO,EAAAA,WAAW,CAAEwN,QAAQ,GAAG,EAAb,EAAiB;AAC1B,SAAK9J,IAAL,GAAY8J,QAAQ,CAAC9J,IAArB;AACA,SAAK4K,OAAL,GAAed,QAAQ,CAACc,OAAxB;AACA,SAAKC,QAAL,GAAgBf,QAAQ,CAACe,QAAzB;AACD;;AAED5I,EAAAA,QAAQ,CAAEsI,MAAM,GAAG,CAAX,EAAc;AACpB,UAAMC,QAAQ,GAAG,EAAjB;AACA,QAAI,KAAKxK,IAAT,EAAewK,QAAQ,CAAC5N,IAAT,CAAc,KAAKoD,IAAnB;AACf,QAAI,KAAK4K,OAAT,EAAkBJ,QAAQ,CAAC5N,IAAT,CAAcyC,0BAAC,CAACgI,QAAF,CAAW,KAAKuD,OAAhB,IAA2B7H,IAAI,CAACC,SAAL,CAAe,KAAK4H,OAApB,CAA3B,GAA0D,KAAKA,OAA7E;AAClB,QAAI,KAAKC,QAAT,EAAmBL,QAAQ,CAAC5N,IAAT,CAAcyC,0BAAC,CAACoL,QAAF,CAAW,KAAKI,QAAhB,EAA0B;AAAExH,MAAAA,MAAM,EAAE;AAAV,KAA1B,CAAd;AACnB,WAAQ,GAAE,IAAIqH,MAAJ,CAAWH,MAAX,CAAmB,UAASC,QAAQ,CAACtH,IAAT,CAAc,KAAd,CAAqB,GAA3D;AACD;;AAboB;;AAgBvB,MAAM4H,gBAAN,CAAqB;AACnBxO,EAAAA,WAAW,CAAEwN,QAAQ,GAAG,EAAb,EAAiB;AAC1B,SAAK9J,IAAL,GAAY8J,QAAQ,CAAC9J,IAArB;AACA,SAAK+K,OAAL,GAAejB,QAAQ,CAACiB,OAAxB;AACA,SAAKC,OAAL,GAAelB,QAAQ,CAACkB,OAAxB;AACA,SAAKC,UAAL,GAAkBnB,QAAQ,CAACmB,UAA3B;AACA,SAAKC,KAAL,GAAcpB,QAAQ,CAACoB,KAAT,GAAiB,IAAIhB,iBAAJ,CAAoBJ,QAAQ,CAACoB,KAA7B,CAAjB,GAAuD,IAArE;AACA,SAAKC,OAAL,GAAgBrB,QAAQ,CAACqB,OAAT,GAAmBrB,QAAQ,CAACqB,OAAT,CAAiBtH,GAAjB,CAAsBuH,CAAD,IAAO,IAAIT,kBAAJ,CAAqBS,CAArB,CAA5B,CAAnB,GAA0E,IAA1F;AACA,SAAKC,KAAL,GAAcvB,QAAQ,CAACuB,KAAT,GAAiBvB,QAAQ,CAACuB,KAAT,CAAexH,GAAf,CAAoBuH,CAAD,IAAO,IAAIlB,iBAAJ,CAAoBkB,CAApB,CAA1B,CAAjB,GAAqE,IAAnF;AACA,SAAKE,KAAL,GAAcxB,QAAQ,CAACwB,KAAT,GAAiBxB,QAAQ,CAACwB,KAAT,CAAezH,GAAf,CAAoBuH,CAAD,IAAO,IAAIG,gBAAJ,CAAmBH,CAAnB,CAA1B,CAAjB,GAAoE,IAAlF;AACA,SAAKI,KAAL,GAAc1B,QAAQ,CAAC0B,KAAT,GAAiB1B,QAAQ,CAAC0B,KAAT,CAAe3H,GAAf,CAAoBuH,CAAD,IAAO,IAAIN,gBAAJ,CAAmBM,CAAnB,CAA1B,CAAjB,GAAoE,IAAlF;AACA,SAAKH,UAAL,GAAkBnB,QAAQ,CAACmB,UAA3B;AACD;;AAEDhJ,EAAAA,QAAQ,CAAEsI,MAAM,GAAG,CAAX,EAAc;AACpB,WAAO,KAAKkB,cAAL,CAAoB,IAApB,EAA0BlB,MAA1B,EAAkCrH,IAAlC,CAAuC,IAAvC,CAAP;AACD;;AAEDuI,EAAAA,cAAc,CAAEC,IAAF,EAAQnB,MAAR,EAAgB;AAC5B,UAAMoB,YAAY,GAAG,CAACC,KAAD,EAAQrB,MAAR,KAAmBqB,KAAK,CAAC3J,QAAN,GAAiB2J,KAAK,CAAC3J,QAAN,CAAe,CAAf,CAAjB,GAAsC,GAAE,IAAIyI,MAAJ,CAAWH,MAAX,CAAmB,sBAAqBxH,IAAI,CAACC,SAAL,CAAe4I,KAAf,CAAsB,EAA9I;;AAEA,UAAMpB,QAAQ,GAAG,EAAjB;AACA,QAAIkB,IAAI,CAAC1L,IAAT,EAAewK,QAAQ,CAAC5N,IAAT,CAAc8O,IAAI,CAAC1L,IAAnB;AACf,QAAI0L,IAAI,CAACX,OAAT,EAAkBP,QAAQ,CAAC5N,IAAT,CAAc8O,IAAI,CAACX,OAAnB;AAElB,UAAM5I,KAAK,GAAG,EAAd;AACA,QAAIuJ,IAAI,CAACR,KAAT,EAAgB/I,KAAK,CAACvF,IAAN,CAAW8O,IAAI,CAACR,KAAL,CAAWjJ,QAAX,CAAoBsI,MAAM,GAAG,CAA7B,CAAX;AAChB,QAAImB,IAAI,CAACL,KAAT,EAAgBlJ,KAAK,CAACvF,IAAN,CAAW,GAAG8O,IAAI,CAACL,KAAL,CAAWxH,GAAX,CAAegI,CAAC,IAAIF,YAAY,CAACE,CAAD,EAAItB,MAAM,GAAG,CAAb,CAAhC,CAAd;AAChB,QAAImB,IAAI,CAACP,OAAT,EAAkBhJ,KAAK,CAACvF,IAAN,CAAW,GAAG8O,IAAI,CAACP,OAAL,CAAatH,GAAb,CAAiBiI,CAAC,IAAIH,YAAY,CAACG,CAAD,EAAIvB,MAAM,GAAG,CAAb,CAAlC,CAAd;AAClB,QAAImB,IAAI,CAACJ,KAAT,EAAgBnJ,KAAK,CAACvF,IAAN,CAAW,GAAG8O,IAAI,CAACJ,KAAL,CAAWzH,GAAX,CAAekI,CAAC,IAAIJ,YAAY,CAACI,CAAD,EAAIxB,MAAM,GAAG,CAAb,CAAhC,CAAd;AAChB,QAAImB,IAAI,CAACF,KAAT,EAAgBrJ,KAAK,CAACvF,IAAN,CAAW,GAAG8O,IAAI,CAACF,KAAL,CAAW3H,GAAX,CAAemI,CAAC,IAAI,KAAKP,cAAL,CAAoBO,CAApB,EAAuBzB,MAAM,GAAG,CAAhC,CAApB,CAAd;AAEhB,WAAO,CACJ,GAAE,IAAIG,MAAJ,CAAWH,MAAX,CAAmB,QAAOC,QAAQ,CAACtH,IAAT,CAAc,KAAd,CAAqB,GAD7C,EAEL,GAAGf,KAFE,CAAP;AAID;;AApCkB;;AAuCrB,MAAMoJ,gBAAN,CAAqB;AACnBjP,EAAAA,WAAW,CAAEwN,QAAQ,GAAG,EAAb,EAAiB;AAC1B,SAAK/H,IAAL,GAAY+H,QAAQ,CAAC/H,IAArB;AACA,SAAKkK,KAAL,GAAanC,QAAQ,CAACmC,KAAtB;AAEA,SAAKC,KAAL,GAAapC,QAAQ,CAACoC,KAAtB;AACA,SAAK1J,IAAL,GAAYsH,QAAQ,CAACtH,IAArB;AACA,SAAK2J,OAAL,GAAgBrC,QAAQ,CAACqC,OAAT,GAAmBrC,QAAQ,CAACqC,OAAT,CAAiBtI,GAAjB,CAAsBmI,CAAD,IAAO,IAAII,gBAAJ,CAAqBJ,CAArB,CAA5B,CAAnB,GAA0E,IAA1F;AACD;;AAED/J,EAAAA,QAAQ,CAAEsI,MAAM,GAAG,CAAX,EAAc;AACpB,UAAMC,QAAQ,GAAG,EAAjB;AACA,QAAI,KAAKzI,IAAT,EAAeyI,QAAQ,CAAC5N,IAAT,CAAc,KAAKmF,IAAnB;AACf,QAAI,KAAKmK,KAAT,EAAgB1B,QAAQ,CAAC5N,IAAT,CAAc,KAAKsP,KAAnB;AAChB,QAAI,KAAKD,KAAT,EAAgBzB,QAAQ,CAAC5N,IAAT,CAAc,KAAKqP,KAAnB;AAChB,WAAQ,GAAE,IAAIvB,MAAJ,CAAWH,MAAX,CAAmB,QAAOC,QAAQ,CAACtH,IAAT,CAAc,KAAd,CAAqB,GAAzD;AACD;;AAhBkB;;AAmBrB,MAAMkJ,gBAAN,CAAuB;AACrB9P,EAAAA,WAAW,CAAEwN,QAAQ,GAAG,EAAb,EAAiB;AAC1B,SAAKuC,KAAL,GAAavC,QAAQ,CAACuC,KAAtB;AACA,SAAKJ,KAAL,GAAanC,QAAQ,CAACmC,KAAtB;AACD;;AAJoB;;AAOvB,8BAAc,GAAG;AACf/B,mBAAAA,iBADe;AAEfS,oBAAAA,kBAFe;AAGfG,kBAAAA,gBAHe;AAIfS,kBAAAA;AAJe,CAAjB;;;;;;ACnGA,MAAMe,oBAAN,CAAyB;AACvBhQ,EAAAA,WAAW,CAAEwN,QAAQ,GAAG,EAAb,EAAiB;AAC1B,SAAK/H,IAAL,GAAY+H,QAAQ,CAAC/H,IAArB;AACA,SAAK2E,IAAL,GAAYrH,0BAAC,CAACkN,SAAF,CAAYzC,QAAQ,CAACpD,IAArB,CAAZ;AACD;;AAJsB;;AAMzB,MAAM8F,qBAAN,CAA0B;AACxBlQ,EAAAA,WAAW,CAAEwN,QAAQ,GAAG,EAAb,EAAiB;AAC1B,SAAK/H,IAAL,GAAY+H,QAAQ,CAAC/H,IAArB;AACA,SAAK2E,IAAL,GAAYrH,0BAAC,CAACkN,SAAF,CAAYzC,QAAQ,CAACpD,IAArB,CAAZ;AACD;;AAJuB;;AAM1B,MAAM+F,qBAAN,CAA0B;AACxBnQ,EAAAA,WAAW,CAAEwN,QAAQ,GAAG,EAAb,EAAiB;AAC1B,SAAK/H,IAAL,GAAY+H,QAAQ,CAAC/H,IAArB;AACA,SAAK2E,IAAL,GAAYrH,0BAAC,CAACkN,SAAF,CAAYzC,QAAQ,CAACpD,IAArB,CAAZ;AACD;;AAJuB;;AAO1B,uBAAc,GAAG;AACf4F,sBAAAA,oBADe;AAEfE,uBAAAA,qBAFe;AAGfC,uBAAAA;AAHe,CAAjB;;ACpBA,MAAM;AAAEvC,EAAAA,eAAF;AAAmBS,EAAAA,gBAAnB;AAAqCG,EAAAA,cAArC;AAAqDS,EAAAA;AAArD,IAAwE7G,0BAA9E;AACA,MAAM;AAAE4H,EAAAA,kBAAF;AAAsBE,EAAAA,mBAAtB;AAA2CC,EAAAA;AAA3C,IAAmE7H,mBAAzE;AAEA,uBAAc,GAAG,MAAM8H,iBAAN,CAAwB;AACvCpQ,EAAAA,WAAW,CAAEwN,QAAQ,GAAG,EAAb,EAAiB;AAC1B,SAAK6C,MAAL,GAAc7C,QAAQ,CAAC6C,MAAvB;AACA,SAAK/O,OAAL,GAAekM,QAAQ,CAAClM,OAAxB;AACA,SAAKkF,GAAL,GAAWgH,QAAQ,CAAChH,GAApB;AACA,SAAK8J,QAAL,GAAgB9C,QAAQ,CAAC8C,QAAzB;AACA,SAAKpN,WAAL,GAAmBsK,QAAQ,CAACtK,WAA5B;AACA,SAAK6L,KAAL,GAAcvB,QAAQ,CAACuB,KAAT,GAAiBvB,QAAQ,CAACuB,KAAT,CAAexH,GAAf,CAAoBuH,CAAD,IAAO,IAAIlB,eAAJ,CAAoBkB,CAApB,CAA1B,CAAjB,GAAqE,IAAnF;AACA,SAAKD,OAAL,GAAgBrB,QAAQ,CAACqB,OAAT,GAAmBrB,QAAQ,CAACqB,OAAT,CAAiBtH,GAAjB,CAAsBuH,CAAD,IAAO,IAAIT,gBAAJ,CAAqBS,CAArB,CAA5B,CAAnB,GAA0E,IAA1F;AACA,SAAKI,KAAL,GAAc1B,QAAQ,CAAC0B,KAAT,GAAiB1B,QAAQ,CAAC0B,KAAT,CAAe3H,GAAf,CAAoBuH,CAAD,IAAO,IAAIN,cAAJ,CAAmBM,CAAnB,CAA1B,CAAjB,GAAoE,IAAlF;AACA,SAAKE,KAAL,GAAcxB,QAAQ,CAACwB,KAAT,GAAiBxB,QAAQ,CAACwB,KAAT,CAAezH,GAAf,CAAoBuH,CAAD,IAAO,IAAIG,cAAJ,CAAmBH,CAAnB,CAA1B,CAAjB,GAAoE,IAAlF;AACA,SAAKyB,GAAL,GAAW/C,QAAQ,CAAC+C,GAApB;AACA,SAAK5B,UAAL,GAAkBnB,QAAQ,CAACmB,UAA3B;AACA,SAAK6B,YAAL,GAAoBhD,QAAQ,CAACgD,YAA7B;AACA,SAAKC,WAAL,GAAoBjD,QAAQ,CAACiD,WAAT,GAAuBjD,QAAQ,CAACiD,WAAT,CAAqBlJ,GAArB,CAA0BuH,CAAD,IAAO,IAAIvB,sBAAJ,CAAyBuB,CAAzB,CAAhC,CAAvB,GAAsF,IAA1G;AACA,SAAK7F,SAAL,GAAkBuE,QAAQ,CAACvE,SAAT,GAAqBuE,QAAQ,CAACvE,SAAT,CAAmB1B,GAAnB,CAAwBuH,CAAD,IAAO,IAAIkB,kBAAJ,CAAuBlB,CAAvB,CAA9B,CAArB,GAAgF,IAAlG;AACA,SAAKzF,UAAL,GAAmBmE,QAAQ,CAACnE,UAAT,GAAsBmE,QAAQ,CAACnE,UAAT,CAAoB9B,GAApB,CAAyBuH,CAAD,IAAO,IAAIoB,mBAAJ,CAAwBpB,CAAxB,CAA/B,CAAtB,GAAmF,IAAtG;AACA,SAAK3F,UAAL,GAAmBqE,QAAQ,CAACrE,UAAT,GAAsBqE,QAAQ,CAACrE,UAAT,CAAoB5B,GAApB,CAAyBuH,CAAD,IAAO,IAAIqB,mBAAJ,CAAwBrB,CAAxB,CAA/B,CAAtB,GAAmF,IAAtG;AACD;;AAEDnJ,EAAAA,QAAQ,GAAI;AACV,UAAM0J,YAAY,GAAIC,KAAD,IAAWA,KAAK,CAAC3J,QAAN,GAAiB2J,KAAK,CAAC3J,QAAN,CAAe,CAAf,CAAjB,GAAsC,GAAE,IAAIyI,MAAJ,CAAW,CAAX,CAAc,sBAAqB3H,IAAI,CAACC,SAAL,CAAe4I,KAAf,CAAsB,EAAjI;;AACA,UAAMzJ,KAAK,GAAG,EAAd;AACA,QAAI,KAAK3C,WAAT,EAAsB2C,KAAK,CAACvF,IAAN,CAAW,KAAK4C,WAAhB;AACtB,QAAI,KAAK6L,KAAL,IAAc,KAAKA,KAAL,CAAWhI,MAAX,GAAoB,CAAtC,EAAyClB,KAAK,CAACvF,IAAN,CAAW,GAAG,KAAKyO,KAAL,CAAWxH,GAAX,CAAegI,CAAC,IAAIF,YAAY,CAACE,CAAD,CAAhC,CAAd;AACzC,QAAI,KAAKV,OAAL,IAAgB,KAAKA,OAAL,CAAa9H,MAAb,GAAsB,CAA1C,EAA6ClB,KAAK,CAACvF,IAAN,CAAW,GAAG,KAAKuO,OAAL,CAAatH,GAAb,CAAiBiI,CAAC,IAAIH,YAAY,CAACG,CAAD,CAAlC,CAAd;AAC7C,QAAI,KAAKN,KAAL,IAAc,KAAKA,KAAL,CAAWnI,MAAX,GAAoB,CAAtC,EAAyClB,KAAK,CAACvF,IAAN,CAAW,GAAG,KAAK4O,KAAL,CAAW3H,GAAX,CAAemI,CAAC,IAAIL,YAAY,CAACK,CAAD,CAAhC,CAAd;AACzC,QAAI,KAAKV,KAAL,IAAc,KAAKA,KAAL,CAAWjI,MAAX,GAAoB,CAAtC,EAAyClB,KAAK,CAACvF,IAAN,CAAW,GAAG,KAAK0O,KAAL,CAAWzH,GAAX,CAAekI,CAAC,IAAIJ,YAAY,CAACI,CAAD,CAAhC,CAAd;AAEzC,QAAI5J,KAAK,CAACkB,MAAN,KAAiB,CAArB,EAAwB,OAAQ,IAAG,KAAKsJ,MAAO,GAAvB;AAExB,WAAO,CACJ,IAAG,KAAKA,MAAO,KAAIxK,KAAK,CAAC,CAAD,CAAI,EADxB,EAEL,GAAGA,KAAK,CAAC6K,KAAN,CAAY,CAAZ,CAFE,EAGL9J,IAHK,CAGA,IAHA,CAAP;AAID;;AAnCsC,CAAzC;;ACDA,MAAM+J,eAAa,GAAG,CAACC,GAAD,EAAMC,SAAN,KAAoB;AACxC,MAAID,GAAG,IAAI7N,0BAAC,CAACgD,OAAF,CAAU6K,GAAV,CAAX,EAA2B;AACzBA,IAAAA,GAAG,GAAGA,GAAG,CAAChK,IAAJ,CAAS,GAAT,CAAN;AACD,GAFD,MAEO,IAAIgK,GAAG,IAAI,CAAC7N,0BAAC,CAACiI,QAAF,CAAW4F,GAAX,CAAZ,EAA6B;AAClC,QAAIA,GAAG,CAACpJ,QAAR,EAAkB;AAChBoJ,MAAAA,GAAG,GAAGA,GAAG,CAACpJ,QAAJ,EAAN;AACD,KAFD,MAEO;AACLoJ,MAAAA,GAAG,GAAI,GAAEA,GAAI,EAAb;AACD;AACF;;AACD,MAAIA,GAAG,IAAIC,SAAX,EAAsB;;AAEpBD,IAAAA,GAAG,GAAGA,GAAG,CAACE,OAAJ,CAAY,WAAZ,EAAyB,GAAzB,CAAN;AACAF,IAAAA,GAAG,GAAGA,GAAG,CAACE,OAAJ,CAAY,QAAZ,EAAsB,GAAtB,CAAN;AACAF,IAAAA,GAAG,GAAGA,GAAG,CAACE,OAAJ,CAAY,YAAZ,EAA0B,GAA1B,CAAN;AACAF,IAAAA,GAAG,GAAGA,GAAG,CAACE,OAAJ,CAAY,UAAZ,EAAwB,EAAxB,CAAN;;;;AAGAF,IAAAA,GAAG,GAAGA,GAAG,CAACE,OAAJ,CAAY,kBAAZ,EAAgC,GAAhC,CAAN;;;;AAGAF,IAAAA,GAAG,GAAGA,GAAG,CACNE,OADG,CACK,QADL,EACe,GADf,EAEHA,OAFG,CAEK,OAFL,EAEc,GAFd,EAGHA,OAHG,CAGK,OAHL,EAGc,GAHd,EAIHA,OAJG,CAIK,QAJL,EAIe,IAJf,EAKHA,OALG,CAKK,SALL,EAKgB,GALhB,CAAN,CAXoB;;AAkBpBF,IAAAA,GAAG,GAAGA,GAAG,CAACE,OAAJ,CAAY,MAAZ,EAAoB,GAApB,CAAN;AAEAF,IAAAA,GAAG,GAAGA,GAAG,CAACG,KAAJ,CAAU,IAAV,EAAgBxJ,GAAhB,CAAoByJ,CAAC,IAAIA,CAAC,CAACC,IAAF,EAAzB,EAAmCrK,IAAnC,CAAwC,IAAxC,EAA8CqK,IAA9C,EAAN;AACD;;AACD,SAAOL,GAAP;AACD,CAjCD;;AAmCA,MAAMM,4BAA0B,GAAIN,GAAD,IAASA,GAAG,GAAGA,GAAG,CAACG,KAAJ,CAAU,IAAV,EAAgBxJ,GAAhB,CAAoByJ,CAAC,IAAIA,CAAC,CAACC,IAAF,EAAzB,EAAmCE,MAAnC,CAA0CH,CAAC,IAAIA,CAAC,CAACjK,MAAF,GAAW,CAA1D,CAAH,GAAkE,EAAjH;;AAEA,MAAMqK,mBAAiB,GAAIR,GAAD,IAAS;AACjC,SAAOA,GAAG,CAACE,OAAJ,CAAY,sBAAZ,EAAoC,MAApC,CAAP;AACD,CAFD;;AAIA,MAAMO,eAAa,GAAGC,GAAG,IAAI;AAC3B,QAAMC,UAAU,GAAG9K,IAAI,CAACC,SAAL,CAAe4K,GAAf,EAAoB,CAAClG,GAAD,EAAMuE,KAAN,KAAgB;AACrD,QAAI5M,0BAAC,CAACyO,QAAF,CAAW7B,KAAX,CAAJ,EAAuB;AACrB,aAAO,eAAP;AACD,KAFD,MAEO,IAAIA,KAAK,IAAIA,KAAK,CAACzJ,IAAf,IAAuByJ,KAAK,CAACzJ,IAAN,KAAe,QAA1C,EAAoD;AACzD,aAAO,eAAP;AACD,KAFM,MAEA,IAAIkF,GAAG,CAACqG,WAAJ,OAAsB,QAA1B,EAAoC;AACzC,aAAO,eAAP;AACD,KAFM,MAEA,IAAI1O,0BAAC,CAACiI,QAAF,CAAW2E,KAAX,KAAqBA,KAAK,CAAC+B,UAAN,CAAiB,OAAjB,CAAzB,EAAoD;AACzD,aAAO,mBAAP;AACD;;AACD,WAAO/B,KAAP;AACD,GAXkB,CAAnB;AAYA,SAAOlJ,IAAI,CAACkL,KAAL,CAAWJ,UAAX,CAAP;AACD,CAdD;;AAgBA,MAAM/J,UAAQ,GAAImI,KAAD,IAAW;AAC1B,MAAI5M,0BAAC,CAAC6O,WAAF,CAAcjC,KAAd,CAAJ,EAA0B,OAAOkC,SAAP;AAC1B,MAAI9O,0BAAC,CAACiI,QAAF,CAAW2E,KAAX,CAAJ,EAAuB,OAAOA,KAAP;AACvB,MAAI5M,0BAAC,CAAC+O,QAAF,CAAWnC,KAAX,CAAJ,EAAuB,OAAOA,KAAK,CAACnI,QAAN,EAAP;AACvB,MAAIzE,0BAAC,CAACgD,OAAF,CAAU4J,KAAV,CAAJ,EAAsB,OAAOA,KAAK,CAACpI,GAAN,CAAUwK,CAAC,IAAIvK,UAAQ,CAACuK,CAAD,CAAvB,EAA4BnL,IAA5B,CAAiC,GAAjC,CAAP;;AACtB,MAAI;AACF,WAAOH,IAAI,CAACC,SAAL,CAAeiJ,KAAf,CAAP;AACD,GAFD,CAEE,OAAO9O,GAAP,EAAY;;AAEd,MAAI8O,KAAK,IAAIA,KAAK,CAACnI,QAAnB,EAA6B,OAAOmI,KAAK,CAACnI,QAAN,EAAP;AAC7B,SAAO,KAAKmI,KAAZ;AACD,CAXD;;AAaA,MAAMqC,UAAU,GAAIpB,GAAD,IAAS;AAC1B,SAAOA,GAAG,GAAGA,GAAG,CAACG,KAAJ,CAAU,IAAV,EAAgBxJ,GAAhB,CAAoByJ,CAAC,IAAIA,CAAC,CAACC,IAAF,EAAzB,EAAmCrK,IAAnC,CAAwC,GAAxC,CAAH,GAAkD,EAA5D;AACD,CAFD;;AAIA,MAAMqL,kBAAgB,GAAG,CAACpM,KAAD,EAAQwK,MAAR,EAAgB/K,OAAhB,EAAyB4M,GAAzB,EAA8BC,cAAc,GAAG,KAA/C,KAAyD;AAChF,MAAI,CAACC,gBAAc,CAAC/B,MAAD,CAAnB,EAA6B,MAAM,IAAIjL,KAAJ,CAAW,0CAAyCiL,MAAO,YAA3D,CAAN;AAE7B,QAAMgC,SAAS,GAAG;AAAEpJ,IAAAA,SAAS,EAAE,EAAb;AAAiBE,IAAAA,UAAU,EAAE,EAA7B;AAAiCE,IAAAA,UAAU,EAAE,EAA7C;AAAiD7C,IAAAA,GAAG,EAAE,KAAtD;AAA6D8J,IAAAA,QAAQ,EAAE,KAAvE;AAA8ED,IAAAA;AAA9E,GAAlB;AAEA,MAAIiC,YAAY,GAAG,EAAnB;AACA,QAAMC,SAAS,GAAG,EAAlB,CANgF;;;AAShF,MAAIC,iBAAiB,GAAG,IAAxB;;AACA,OAAK,MAAMC,OAAX,IAAsB5M,KAAtB,EAA6B;AAC3B,QAAI9C,0BAAC,CAACiI,QAAF,CAAWyH,OAAX,CAAJ,EAAyB;AACvB,UAAInC,QAAQ,GAAG,KAAf;AACA,UAAI9J,GAAG,GAAG,KAAV;AACA,UAAIkM,SAAS,GAAGD,OAAhB;;AACA,UAAIC,SAAS,CAAChB,UAAV,CAAqB,GAArB,CAAJ,EAA+B;AAC7B,YAAI,CAACgB,SAAS,CAAChB,UAAV,CAAqB,IAArB,CAAL,EAAiC;AAC/BpB,UAAAA,QAAQ,GAAG,IAAX;AACD;;AACDoC,QAAAA,SAAS,GAAGA,SAAS,CAAC3G,MAAV,CAAiB,CAAjB,CAAZ;AACD;;AACD,UAAI2G,SAAS,CAAChB,UAAV,CAAqB,GAArB,CAAJ,EAA+B;AAC7B,YAAI,CAACgB,SAAS,CAAChB,UAAV,CAAqB,IAArB,CAAL,EAAiC;AAC/BlL,UAAAA,GAAG,GAAG,IAAN;AACD;;AACDkM,QAAAA,SAAS,GAAGA,SAAS,CAAC3G,MAAV,CAAiB,CAAjB,CAAZ;AACD;;AACD,YAAMtG,IAAI,GAAGiN,SAAS,CAAC3B,KAAV,CAAgB,GAAhB,EAAqB,CAArB,CAAb;;AACA,UAAIV,MAAM,KAAK,IAAX,IAAmB/K,OAAO,CAACqN,eAAR,CAAwBlN,IAAxB,CAAvB,EAAsD;AACpD,cAAM2E,IAAI,GAAIsI,SAAS,CAAC3L,MAAV,GAAmBtB,IAAI,CAACsB,MAAxB,GAAiC2L,SAAS,CAAC3G,MAAV,CAAiBtG,IAAI,CAACsB,MAAL,GAAc,CAA/B,EAAkCgK,KAAlC,CAAwC,GAAxC,EAA6CxJ,GAA7C,CAAiDuH,CAAC,IAAIA,CAAC,CAACmC,IAAF,EAAtD,CAAjC,GAAmG,EAAjH;AACAoB,QAAAA,SAAS,CAACpJ,SAAV,CAAoB3I,IAApB,CAAyB;AAAEmF,UAAAA,IAAF;AAAQ2E,UAAAA,IAAR;AAAc5D,UAAAA,GAAd;AAAmB8J,UAAAA;AAAnB,SAAzB;AACD,OAHD,MAGO,IAAID,MAAM,KAAK,IAAX,IAAmB/K,OAAO,CAACsN,gBAAR,CAAyBnN,IAAzB,CAAvB,EAAuD;AAC5D,cAAM2E,IAAI,GAAIsI,SAAS,CAAC3L,MAAV,GAAmBtB,IAAI,CAACsB,MAAxB,GAAiC2L,SAAS,CAAC3G,MAAV,CAAiBtG,IAAI,CAACsB,MAAL,GAAc,CAA/B,EAAkCgK,KAAlC,CAAwC,GAAxC,EAA6CxJ,GAA7C,CAAiDuH,CAAC,IAAIA,CAAC,CAACmC,IAAF,EAAtD,CAAjC,GAAmG,EAAjH;AACAoB,QAAAA,SAAS,CAAChJ,UAAV,CAAqB/I,IAArB,CAA0B;AAAEmF,UAAAA,IAAF;AAAQ2E,UAAAA;AAAR,SAA1B;AACAoI,QAAAA,iBAAiB,GAAG,KAApB;AACD,OAJM,MAIA,IAAIlN,OAAO,CAACuN,gBAAR,CAAyBpN,IAAzB,CAAJ,EAAoC;AACzC,cAAM2E,IAAI,GAAIsI,SAAS,CAAC3L,MAAV,GAAmBtB,IAAI,CAACsB,MAAxB,GAAiC2L,SAAS,CAAC3G,MAAV,CAAiBtG,IAAI,CAACsB,MAAL,GAAc,CAA/B,EAAkCgK,KAAlC,CAAwC,GAAxC,EAA6CxJ,GAA7C,CAAiDuH,CAAC,IAAIA,CAAC,CAACmC,IAAF,EAAtD,CAAjC,GAAmG,EAAjH;AACAoB,QAAAA,SAAS,CAAClJ,UAAV,CAAqB7I,IAArB,CAA0B;AAAEmF,UAAAA,IAAF;AAAQ2E,UAAAA;AAAR,SAA1B;AACAoI,QAAAA,iBAAiB,GAAG,KAApB;AACD,OAJM,MAIA;AACL,YAAInC,MAAM,KAAK,IAAf,EAAqB;AACnB,cAAI,CAACmC,iBAAL,EAAwB;AACtB,gBAAIC,OAAO,CAACxB,IAAR,GAAelK,MAAnB,EAA2B;AACzB,oBAAM,IAAI3B,KAAJ,CAAW,yDAAwDqN,OAAO,CAACxB,IAAR,EAAe,iBAAgBpL,KAAK,CAACe,IAAN,CAAW,IAAX,CAAiB,EAAnH,CAAN;AACD;AAGF,WAND,MAMO;AACL0L,YAAAA,YAAY,CAAChS,IAAb,CAAkBmS,OAAlB;AACD;AACF,SAVD,MAUO;AACLH,UAAAA,YAAY,CAAChS,IAAb,CAAkBmS,OAAlB;AACD;AACF,OA1CsB;;;AA4CvB,UAAIH,YAAY,CAACvL,MAAb,GAAsB,CAA1B,EAA6B;AAC3B,YAAI0L,OAAO,CAACxB,IAAR,GAAelK,MAAnB,EAA2B;AACzBwL,UAAAA,SAAS,CAACjS,IAAV,CAAe,GAAGgS,YAAlB;AACAA,UAAAA,YAAY,GAAG,EAAf;AACD;AACF;AACF,KAlDD,MAkDO,IAAIvP,0BAAC,CAACgI,QAAF,CAAW0H,OAAX,CAAJ,EAAyB;AAC9B,UAAIA,OAAO,CAAChK,QAAZ,EAAsB;AACpB,YAAI4H,MAAM,KAAK,KAAf,EAAsB,MAAM,IAAIjL,KAAJ,CAAW,8CAA6CqN,OAAO,CAAChK,QAAS,0BAAyB4H,MAAO,GAAzG,CAAN;AACtB,YAAI,CAAC/K,OAAO,CAACqN,eAAR,CAAwBF,OAAO,CAAChK,QAAhC,CAAL,EAAgD,MAAM,IAAIrD,KAAJ,CAAW,8CAA6CqN,OAAO,CAAChK,QAAS,6BAA4B4H,MAAO,GAA5G,CAAN;AAChDgC,QAAAA,SAAS,CAACpJ,SAAV,CAAoB3I,IAApB,CAAyB;AACvBmF,UAAAA,IAAI,EAAEgN,OAAO,CAAChK,QADS;AAEvB2B,UAAAA,IAAI,EAAE,CAACqI,OAAO,CAACrI,IAAR,IAAgBrH,0BAAC,CAACiI,QAAF,CAAWyH,OAAO,CAACrI,IAAnB,CAAhB,GAA2C,CAACqI,OAAO,CAACrI,IAAT,CAA3C,GAA4DqI,OAAO,CAACrI,IAArE,KAA8E,EAF7D;AAGvB5D,UAAAA,GAAG,EAAE,CAAC,CAACiM,OAAO,CAACjM,GAHQ;AAIvB8J,UAAAA,QAAQ,EAAE,CAAC,CAACmC,OAAO,CAACnC;AAJG,SAAzB;AAMD,OATD,MASO,IAAImC,OAAO,CAACK,SAAR,IAAqBL,OAAO,CAAC7J,SAAjC,EAA4C;AACjD,cAAMmK,aAAa,GAAGN,OAAO,CAACK,SAAR,IAAqBL,OAAO,CAAC7J,SAAnD;AACA,YAAI,CAACtD,OAAO,CAACuN,gBAAR,CAAyBE,aAAzB,CAAL,EAA8C,MAAM,IAAI3N,KAAJ,CAAW,+CAA8C2N,aAAc,6BAA4B1C,MAAO,GAA1G,CAAN;AAC9CgC,QAAAA,SAAS,CAAClJ,UAAV,CAAqB7I,IAArB,CAA0B;AACxBmF,UAAAA,IAAI,EAAEsN,aADkB;AAExB3I,UAAAA,IAAI,EAAE,CAACqI,OAAO,CAACrI,IAAR,IAAgBrH,0BAAC,CAACiI,QAAF,CAAWyH,OAAO,CAACrI,IAAnB,CAAhB,GAA2C,CAACqI,OAAO,CAACrI,IAAT,CAA3C,GAA4DqI,OAAO,CAACrI,IAArE,KAA8E;AAF5D,SAA1B;AAID,OAPM,MAOA,IAAIqI,OAAO,CAACO,SAAR,IAAqBP,OAAO,CAAC5J,SAAjC,EAA4C;AACjD,cAAMoK,aAAa,GAAGR,OAAO,CAACO,SAAR,IAAqBP,OAAO,CAAC5J,SAAnD;AACA,YAAIwH,MAAM,KAAK,IAAf,EAAqB,MAAM,IAAIjL,KAAJ,CAAW,+CAA8C6N,aAAc,0BAAyB5C,MAAO,GAAvG,CAAN;AACrB,YAAI,CAAC/K,OAAO,CAACsN,gBAAR,CAAyBK,aAAzB,CAAL,EAA8C,MAAM,IAAI7N,KAAJ,CAAW,+CAA8C6N,aAAc,6BAA4B5C,MAAO,GAA1G,CAAN;AAC9CgC,QAAAA,SAAS,CAAChJ,UAAV,CAAqB/I,IAArB,CAA0B;AACxBmF,UAAAA,IAAI,EAAEwN,aADkB;AAExB7I,UAAAA,IAAI,EAAE,CAACqI,OAAO,CAACrI,IAAR,IAAgBrH,0BAAC,CAACiI,QAAF,CAAWyH,OAAO,CAACrI,IAAnB,CAAhB,GAA2C,CAACqI,OAAO,CAACrI,IAAT,CAA3C,GAA4DqI,OAAO,CAACrI,IAArE,KAA8E;AAF5D,SAA1B;AAID,OARM,MAQA;AACL,YAAI3E,IAAI,GAAGtC,MAAM,CAAC+H,IAAP,CAAYuH,OAAZ,EAAqB,CAArB,CAAX;AACA,cAAM/D,OAAO,GAAG+D,OAAO,CAAChN,IAAD,CAAvB;AACA,YAAI6K,QAAQ,GAAG,KAAf;AACA,YAAI9J,GAAG,GAAG,KAAV;;AACA,YAAIf,IAAI,CAACiM,UAAL,CAAgB,GAAhB,CAAJ,EAA0B;AACxBpB,UAAAA,QAAQ,GAAG,IAAX;AACA7K,UAAAA,IAAI,GAAGA,IAAI,CAACsG,MAAL,CAAY,CAAZ,CAAP;AACD,SAHD,MAGO,IAAItG,IAAI,CAACiM,UAAL,CAAgB,WAAhB,CAAJ,EAAkC;AACvCpB,UAAAA,QAAQ,GAAG,IAAX;AACA7K,UAAAA,IAAI,GAAGA,IAAI,CAACsG,MAAL,CAAY,CAAZ,CAAP;AACD;;AACD,YAAItG,IAAI,CAACiM,UAAL,CAAgB,GAAhB,CAAJ,EAA0B;AACxBlL,UAAAA,GAAG,GAAG,IAAN;AACAf,UAAAA,IAAI,GAAGA,IAAI,CAACsG,MAAL,CAAY,CAAZ,CAAP;AACD,SAHD,MAGO,IAAItG,IAAI,CAACiM,UAAL,CAAgB,MAAhB,CAAJ,EAA6B;AAClClL,UAAAA,GAAG,GAAG,IAAN;AACAf,UAAAA,IAAI,GAAGA,IAAI,CAACsG,MAAL,CAAY,CAAZ,CAAP;AACD;;AACD,YAAIsE,MAAM,KAAK,IAAX,IAAmB/K,OAAO,CAACqN,eAAR,CAAwBlN,IAAxB,CAAvB,EAAsD;AACpD4M,UAAAA,SAAS,CAACpJ,SAAV,CAAoB3I,IAApB,CAAyB;AACvBmF,YAAAA,IADuB;AAEvB2E,YAAAA,IAAI,EAAE,CAACsE,OAAO,IAAI3L,0BAAC,CAACiI,QAAF,CAAW0D,OAAX,CAAX,GAAiC,CAACA,OAAD,CAAjC,GAA6CA,OAA9C,KAA0D,EAFzC;AAGvBlI,YAAAA,GAHuB;AAIvB8J,YAAAA;AAJuB,WAAzB;AAMD,SAPD,MAOO,IAAID,MAAM,KAAK,IAAX,IAAmB/K,OAAO,CAACsN,gBAAR,CAAyBnN,IAAzB,CAAvB,EAAuD;AAC5D4M,UAAAA,SAAS,CAAChJ,UAAV,CAAqB/I,IAArB,CAA0B;AACxBmF,YAAAA,IADwB;AAExB2E,YAAAA,IAAI,EAAE,CAACsE,OAAO,IAAI3L,0BAAC,CAACiI,QAAF,CAAW0D,OAAX,CAAX,GAAiC,CAACA,OAAD,CAAjC,GAA6CA,OAA9C,KAA0D;AAFxC,WAA1B;AAID,SALM,MAKA,IAAIpJ,OAAO,CAACuN,gBAAR,CAAyBpN,IAAzB,CAAJ,EAAoC;AACzC4M,UAAAA,SAAS,CAAClJ,UAAV,CAAqB7I,IAArB,CAA0B;AACxBmF,YAAAA,IADwB;AAExB2E,YAAAA,IAAI,EAAE,CAACsE,OAAO,IAAI3L,0BAAC,CAACiI,QAAF,CAAW0D,OAAX,CAAX,GAAiC,CAACA,OAAD,CAAjC,GAA6CA,OAA9C,KAA0D;AAFxC,WAA1B;AAID,SALM,MAKA;AACL,gBAAM,IAAItJ,KAAJ,CAAW,sDAAqDqB,IAAI,CAACC,SAAL,CAAe+L,OAAf,CAAwB,GAAxF,CAAN;AACD;AACF;AACF,KAjEM,MAiEA;AACL,YAAM,IAAIrN,KAAJ,CAAW,sDAAqDqB,IAAI,CAACC,SAAL,CAAe+L,OAAf,CAAwB,GAAxF,CAAN;AACD;AACF,GAjI+E;;;AAoIhF,MAAIH,YAAY,CAACvL,MAAb,IAAuB,CAAvB,IAA4BwL,SAAS,CAACxL,MAAV,KAAqB,CAArD,EAAwD;AACtDwL,IAAAA,SAAS,CAACjS,IAAV,CAAe,GAAGgS,YAAlB;AACAA,IAAAA,YAAY,CAACY,GAAb;AACD;;AAED,MAAIX,SAAS,CAACxL,MAAV,GAAmB,CAAvB,EAA0B;AACxB,QAAIwL,SAAS,CAAC,CAAD,CAAT,CAAab,UAAb,CAAwB,GAAxB,CAAJ,EAAkC;AAChC,UAAI,CAACa,SAAS,CAAC,CAAD,CAAT,CAAab,UAAb,CAAwB,IAAxB,CAAL,EAAoC;AAClCW,QAAAA,SAAS,CAAC/B,QAAV,GAAqB,IAArB;AACD;;AACDiC,MAAAA,SAAS,CAAC,CAAD,CAAT,GAAeA,SAAS,CAAC,CAAD,CAAT,CAAaxG,MAAb,CAAoB,CAApB,CAAf;AACD;;AACD,QAAIwG,SAAS,CAAC,CAAD,CAAT,CAAab,UAAb,CAAwB,GAAxB,CAAJ,EAAkC;AAChC,UAAI,CAACa,SAAS,CAAC,CAAD,CAAT,CAAab,UAAb,CAAwB,IAAxB,CAAL,EAAoC;AAClCW,QAAAA,SAAS,CAAC7L,GAAV,GAAgB,IAAhB;AACD;;AACD+L,MAAAA,SAAS,CAAC,CAAD,CAAT,GAAeA,SAAS,CAAC,CAAD,CAAT,CAAaxG,MAAb,CAAoB,CAApB,CAAf;AACD;;AACD,UAAM2C,OAAO,GAAG6D,SAAS,CAAC3L,IAAV,CAAe,GAAf,CAAhB;;AACA,QAAIuM,0BAAM,CAACzE,OAAD,CAAV,EAAqB;AACnB2D,MAAAA,SAAS,CAAC1D,UAAV,GAAuBlI,IAAI,CAACkL,KAAL,CAAWjD,OAAX,CAAvB;AACD,KAFD,MAEO;;AAEL,UAAIyD,cAAJ,EAAoB;AAClBE,QAAAA,SAAS,CAACnP,WAAV,GAAwBqP,SAAS,CAAC,CAAD,CAAjC;AACD,OAFD,MAEO;AACL,YAAIL,GAAG,KAAK,IAAZ,EAAkB;AAChB,gBAAM,IAAI9M,KAAJ,CAAU,kBAAV,CAAN;AACD;;AACDiN,QAAAA,SAAS,CAACnP,WAAV,GAAwBqP,SAAS,CAAC3L,IAAV,CAAesL,GAAf,EAAoBjB,IAApB,EAAxB;AACD;AACF;AACF,GA3BD,MA2BO;;AAELoB,IAAAA,SAAS,CAACnP,WAAV,GAAwB,IAAxB;AACD,GAvK+E;;;AA0KhF,QAAMkQ,WAAW,GAAG,IAAIC,GAAJ,EAApB;;AACA,MAAIhB,SAAS,CAACnP,WAAd,EAA2B;AACzBkQ,IAAAA,WAAW,CAACE,GAAZ,CAAgBjB,SAAS,CAAC/B,QAA1B;AACD;;AACD,OAAK,MAAM7H,QAAX,IAAuB4J,SAAS,CAACpJ,SAAjC,EAA4C;AAC1CmK,IAAAA,WAAW,CAACE,GAAZ,CAAgB7K,QAAQ,CAAC6H,QAAzB;AACD;;AACD,MAAI8C,WAAW,CAACG,IAAZ,GAAmB,CAAvB,EAA0B;AACxB,UAAM,IAAInO,KAAJ,CAAW,+FAA8FqB,IAAI,CAACC,SAAL,CAAeb,KAAf,CAAsB,EAA/H,CAAN;AACD;;AAED,SAAOwM,SAAP;AACD,CAtLD;;AAwLA,MAAMmB,mBAAiB,GAAIC,IAAD,IAAU;AAClC,QAAM5L,MAAM,GAAG,EAAf;;AACA,MAAI4L,IAAI,CAACpD,MAAL,KAAgB,IAApB,EAA0B;AACxB,SAAK,MAAMqD,IAAX,IAAmB,CAACD,IAAI,CAACzE,KAAL,IAAc,EAAf,EAAmBmC,MAAnB,CAA0BuC,IAAI,IAAIA,IAAI,CAAC/D,KAAvC,CAAnB,EAAkE;AAChE9H,MAAAA,MAAM,CAACvH,IAAP,CAAY;AACV0S,QAAAA,SAAS,EAAE,MADD;AAEV5I,QAAAA,IAAI,EAAE,CAACsJ,IAAI,CAACjO,IAAN,EAAYiO,IAAI,CAAC/D,KAAjB;AAFI,OAAZ;AAID;;AACD,QAAI8D,IAAI,CAAC5E,OAAL,IAAgB4E,IAAI,CAAC5E,OAAL,CAAa9H,MAAb,GAAsB,CAA1C,EAA6C;AAC3C,YAAMiM,SAAS,GAAG;AAChBA,QAAAA,SAAS,EAAE,QADK;AAEhB5I,QAAAA,IAAI,EAAE;AAFU,OAAlB;;AAIA,UAAIqJ,IAAI,CAAC5E,OAAL,CAAa,CAAb,EAAgBP,OAApB,EAA6B;AAC3B0E,QAAAA,SAAS,CAAC5I,IAAV,CAAe9J,IAAf,CAAoBmT,IAAI,CAAC5E,OAAL,CAAa,CAAb,EAAgBP,OAApC;;AACA,YAAImF,IAAI,CAAC5E,OAAL,CAAa,CAAb,EAAgBnL,IAApB,EAA0B;AACxBsP,UAAAA,SAAS,CAAC5I,IAAV,CAAe9J,IAAf,CAAoBmT,IAAI,CAAC5E,OAAL,CAAa,CAAb,EAAgBnL,IAApC;AACD;AACF,OALD,MAKO;AACLsP,QAAAA,SAAS,CAAC5I,IAAV,CAAe9J,IAAf,CAAoBmT,IAAI,CAAC5E,OAAL,CAAa,CAAb,EAAgBnL,IAApC;AACD;;AACDmE,MAAAA,MAAM,CAACvH,IAAP,CAAY0S,SAAZ;AACD,KAdD,MAcO,IAAIS,IAAI,CAAC1E,KAAL,IAAc0E,IAAI,CAAC1E,KAAL,CAAWhI,MAAX,GAAoB,CAAtC,EAAyC;AAC9Cc,MAAAA,MAAM,CAACvH,IAAP,CAAY;AACV0S,QAAAA,SAAS,EAAE,OADD;AAEV5I,QAAAA,IAAI,EAAE,CAACqJ,IAAI,CAAC1E,KAAL,CAAW,CAAX,EAAclB,QAAf;AAFI,OAAZ;AAID,KALM,MAKA,IAAI4F,IAAI,CAACvQ,WAAT,EAAsB;AAC3B2E,MAAAA,MAAM,CAACvH,IAAP,CAAYmT,IAAI,CAACvQ,WAAjB;AACD;;AACD,SAAK,MAAM0F,SAAX,IAAwB6K,IAAI,CAACtK,UAAL,IAAmB,EAA3C,EAA+C;AAC7CtB,MAAAA,MAAM,CAACvH,IAAP,CAAY;AACVwS,QAAAA,SAAS,EAAElK,SAAS,CAACnD,IADX;AAEV2E,QAAAA,IAAI,EAAExB,SAAS,CAACwB,IAAV,IAAkB;AAFd,OAAZ;AAID;AACF,GAnCD,MAmCO;AACL,QAAIqJ,IAAI,CAACvQ,WAAT,EAAsB;AACpB,UAAIyQ,iBAAiB,GAAG,EAAxB;AACA,UAAIF,IAAI,CAACnD,QAAT,EAAmBqD,iBAAiB,IAAI,GAArB;AACnB,UAAIF,IAAI,CAACjN,GAAT,EAAcmN,iBAAiB,IAAI,GAArB;AACd9L,MAAAA,MAAM,CAACvH,IAAP,CAAYqT,iBAAiB,GAAGF,IAAI,CAACvQ,WAArC;AACD;;AACD,QAAIuQ,IAAI,CAAC5E,OAAL,IAAgB4E,IAAI,CAAC5E,OAAL,CAAa9H,MAAb,GAAsB,CAA1C,EAA6C;AAC3Cc,MAAAA,MAAM,CAACvH,IAAP,CAAY;AACVmI,QAAAA,QAAQ,EAAE,SADA;AAEV2B,QAAAA,IAAI,EAAEqJ,IAAI,CAAC5E,OAAL,CAAatH,GAAb,CAAiBiI,CAAC,IAAIwC,UAAU,CAACxC,CAAC,CAAC9L,IAAH,CAAhC;AAFI,OAAZ;AAID;;AACD,QAAI+P,IAAI,CAAC1E,KAAL,IAAc0E,IAAI,CAAC1E,KAAL,CAAWhI,MAAX,GAAoB,CAAtC,EAAyC;AACvCc,MAAAA,MAAM,CAACvH,IAAP,CAAY;AACVmI,QAAAA,QAAQ,EAAE,OADA;AAEV2B,QAAAA,IAAI,EAAEqJ,IAAI,CAAC1E,KAAL,CAAWxH,GAAX,CAAegI,CAAC,IAAI;AAAE,iBAAOA,CAAC,CAACvB,MAAF,IAAYuB,CAAC,CAACvB,MAAF,CAAS0D,UAAT,CAAoB,OAApB,CAAZ,GAA2C,OAA3C,GAAqDnC,CAAC,CAAC1B,QAA9D;AAAwE,SAA9F;AAFI,OAAZ;AAID;;AACD,QAAI4F,IAAI,CAACvE,KAAL,IAAcuE,IAAI,CAACvE,KAAL,CAAWnI,MAAX,GAAoB,CAAtC,EAAyC;AACvC0M,MAAAA,IAAI,CAACvE,KAAL,CAAWlJ,OAAX,CAAmB0J,CAAC,IAAI;AACtB,YAAIkE,SAAS,GAAG,EAAhB;AACA,YAAIlE,CAAC,CAAChM,IAAN,EAAYkQ,SAAS,GAAGA,SAAS,CAAChM,MAAV,CAAiB7E,0BAAC,CAACgD,OAAF,CAAU2J,CAAC,CAAChM,IAAZ,IAAoBgM,CAAC,CAAChM,IAAtB,GAA6B,CAACgM,CAAC,CAAChM,IAAH,CAA9C,CAAZ;AACZ,YAAIgM,CAAC,CAACjB,OAAN,EAAemF,SAAS,GAAGA,SAAS,CAAChM,MAAV,CAAiB7E,0BAAC,CAACgD,OAAF,CAAU2J,CAAC,CAACjB,OAAZ,IAAuBiB,CAAC,CAACjB,OAAzB,GAAmC,CAACiB,CAAC,CAACjB,OAAH,CAApD,CAAZ;AACf,YAAIiB,CAAC,CAAChB,OAAN,EAAekF,SAAS,GAAGA,SAAS,CAAChM,MAAV,CAAiB7E,0BAAC,CAACgD,OAAF,CAAU2J,CAAC,CAAChB,OAAZ,IAAuBgB,CAAC,CAAChB,OAAzB,GAAmC,CAACgB,CAAC,CAAChB,OAAH,CAApD,CAAZ;;AACf,YAAIkF,SAAS,CAAC7M,MAAV,GAAmB,CAAvB,EAA0B;AACxBc,UAAAA,MAAM,CAACvH,IAAP,CAAY;AACVmI,YAAAA,QAAQ,EAAE,OADA;AAEV2B,YAAAA,IAAI,EAAEwJ,SAAS,CAACrM,GAAV,CAAcmI,CAAC,IAAIsC,UAAU,CAACtC,CAAD,CAA7B;AAFI,WAAZ;AAID;;AAED,YAAIA,CAAC,CAACb,OAAF,IAAaa,CAAC,CAACb,OAAF,CAAU9H,MAAV,GAAmB,CAApC,EAAuC;AACrCc,UAAAA,MAAM,CAACvH,IAAP,CAAY;AACVmI,YAAAA,QAAQ,EAAE,SADA;AAEV2B,YAAAA,IAAI,EAAEsF,CAAC,CAACb,OAAF,CAAUtH,GAAV,CAAciI,CAAC,IAAIA,CAAC,CAAC9L,IAArB;AAFI,WAAZ;AAID;;AACD,YAAIgM,CAAC,CAACd,KAAN,EAAa;AACX/G,UAAAA,MAAM,CAACvH,IAAP,CAAY;AACVmI,YAAAA,QAAQ,EAAE,OADA;AAEV2B,YAAAA,IAAI,EAAEsF,CAAC,CAACd,KAAF,CAAQiF,OAFJ;AAGVrN,YAAAA,GAAG,EAAE,CAAC,CAACiN,IAAI,CAACjN;AAHF,WAAZ;AAKD;AACF,OAzBD;AA0BD;;AACD,SAAK,MAAMiC,QAAX,IAAuBgL,IAAI,CAACxK,SAAL,IAAkB,EAAzC,EAA6C;AAC3CpB,MAAAA,MAAM,CAACvH,IAAP,CAAY;AACVmI,QAAAA,QAAQ,EAAEA,QAAQ,CAAChD,IADT;AAEV2E,QAAAA,IAAI,EAAE3B,QAAQ,CAAC2B,IAAT,IAAiB,EAFb;AAGVkG,QAAAA,QAAQ,EAAE,CAAC,CAAC7H,QAAQ,CAAC6H,QAHX;AAIV9J,QAAAA,GAAG,EAAE,CAAC,CAACiC,QAAQ,CAACjC;AAJN,OAAZ;AAMD;;AACD,SAAK,MAAMoC,SAAX,IAAwB6K,IAAI,CAACtK,UAAL,IAAmB,EAA3C,EAA+C;AAC7CtB,MAAAA,MAAM,CAACvH,IAAP,CAAY;AACVwS,QAAAA,SAAS,EAAElK,SAAS,CAACnD,IADX;AAEV2E,QAAAA,IAAI,EAAExB,SAAS,CAACwB,IAAV,IAAkB;AAFd,OAAZ;AAID;AACF;;AACD,SAAOvC,MAAP;AACD,CApGD;;AAsGA,MAAMiM,cAAY,GAAG,CAAC,OAAD,EAAU,SAAV,EAAqB,IAArB,EAA2B,KAA3B,EAAkC,KAAlC,CAArB;;AAEA,MAAM1B,gBAAc,GAAI/B,MAAD,IAAY;AACjC,MAAIyD,cAAY,CAAChI,OAAb,CAAqBuE,MAArB,KAAgC,CAApC,EAAuC,OAAO,IAAP,CAAvC,KACK,OAAO,KAAP;AACN,CAHD;;AAKA,MAAM0D,eAAa,GAAItR,KAAD,IAAW;AAC/B,QAAMuR,gBAAgB,GAAG;AACvB7M,IAAAA,MAAM,EAAE;AADe,GAAzB;;AAGA,OAAK,IAAI8M,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGxR,KAAK,CAACyR,YAAN,CAAmBnN,MAAvC,EAA+CkN,CAAC,EAAhD,EAAoD;AAClD,UAAMR,IAAI,GAAGhR,KAAK,CAACyR,YAAN,CAAmBD,CAAnB,CAAb;;AACA,QAAIR,IAAI,CAACpD,MAAL,KAAgB,KAApB,EAA2B;;AAEzB,YAAM+C,WAAW,GAAG,IAAIC,GAAJ,EAApB;;AACA,UAAII,IAAI,CAACvQ,WAAT,EAAsB;AACpBkQ,QAAAA,WAAW,CAACE,GAAZ,CAAgBG,IAAI,CAACnD,QAArB;AACD;;AACD,UAAImD,IAAI,CAACxK,SAAT,EAAoB;AAClB,aAAK,MAAMR,QAAX,IAAuBgL,IAAI,CAACxK,SAA5B,EAAuC;AACrCmK,UAAAA,WAAW,CAACE,GAAZ,CAAgB7K,QAAQ,CAAC6H,QAAzB;AACD;AACF;;AACD,UAAI8C,WAAW,CAACG,IAAZ,GAAmB,CAAvB,EAA0B;AACxBS,QAAAA,gBAAgB,CAAC7M,MAAjB,CAAwB7G,IAAxB,CAA6B,IAAI8E,KAAJ,CAAW,QAAO6O,CAAC,GAAG,CAAE,yFAAxB,CAA7B;AACD;;AAED,UAAIb,WAAW,CAACG,IAAZ,KAAqB,CAArB,IAA0BH,WAAW,CAACe,GAAZ,CAAgB,IAAhB,CAA9B,EAAqD;AACnD,cAAMC,QAAQ,GAAG3R,KAAK,CAACyR,YAAN,CAAmBD,CAAC,GAAG,CAAvB,CAAjB;;AACA,YAAI,CAACG,QAAD,IAAaA,QAAQ,CAAC/D,MAAT,KAAoB,KAArC,EAA4C;AAC1C2D,UAAAA,gBAAgB,CAAC7M,MAAjB,CAAwB7G,IAAxB,CAA6B,IAAI8E,KAAJ,CAAW,QAAO6O,CAAC,GAAG,CAAE,mEAAxB,CAA7B;AACD;AACF;AACF;;AACD,QAAI,CAAC7B,gBAAc,CAACqB,IAAI,CAACpD,MAAN,CAAnB,EAAkC;AAChC2D,MAAAA,gBAAgB,CAAC7M,MAAjB,CAAwB7G,IAAxB,CAA6B,IAAI8E,KAAJ,CAAW,QAAO6O,CAAC,GAAG,CAAE,aAAYR,IAAI,CAACpD,MAAO,cAAhD,CAA7B;AACD;AACF;;AACD,SAAO2D,gBAAP;AACD,CAjCD;;AAmCA,MAAMK,gBAAgB,GAAI7E,CAAD,IAAO;AAC9B,MAAI8E,YAAY,GAAG,EAAnB;;AACA,MAAI9E,CAAC,CAAClB,OAAN,EAAe;AACbgG,IAAAA,YAAY,IAAIvR,0BAAC,CAACgI,QAAF,CAAWyE,CAAC,CAAClB,OAAb,IAAwB7H,IAAI,CAACC,SAAL,CAAe8I,CAAC,CAAClB,OAAjB,CAAxB,GAAoD0D,UAAU,CAACxC,CAAC,CAAClB,OAAH,CAA9E;;AACA,QAAIkB,CAAC,CAAC9L,IAAN,EAAY;AACV4Q,MAAAA,YAAY,IAAK,IAAGtC,UAAU,CAACxC,CAAC,CAAC9L,IAAH,CAAS,EAAvC;AACD;AACF,GALD,MAKO;AACL4Q,IAAAA,YAAY,IAAItC,UAAU,CAACxC,CAAC,CAAC9L,IAAH,CAA1B;AACD;;AACD,SAAO4Q,YAAP;AACD,CAXD;;AAaA,MAAMC,kBAAgB,GAAId,IAAD,IAAU;AACjC,QAAM5N,KAAK,GAAG,EAAd;;AACA,MAAI4N,IAAI,CAACpD,MAAL,KAAgB,IAApB,EAA0B;AACxBoD,IAAAA,IAAI,CAACzE,KAAL,IAAcyE,IAAI,CAACzE,KAAL,CAAWmC,MAAX,CAAkBuC,IAAI,IAAIA,IAAI,CAAC/D,KAA/B,EAAsC3J,OAAtC,CAA+C0N,IAAD,IAAU;AACpE7N,MAAAA,KAAK,CAACvF,IAAN,CAAY,QAAOoT,IAAI,CAACjO,IAAK,IAAGiO,IAAI,CAAC/D,KAAM,EAA3C;AACD,KAFa,CAAd;;AAGA,QAAI8D,IAAI,CAAC5E,OAAL,IAAgB4E,IAAI,CAAC5E,OAAL,CAAa9H,MAAb,GAAsB,CAA1C,EAA6C;AAC3ClB,MAAAA,KAAK,CAACvF,IAAN,CAAW,YAAY+T,gBAAgB,CAACZ,IAAI,CAAC5E,OAAL,CAAa,CAAb,CAAD,CAAvC;AACD,KAFD,MAEO,IAAI4E,IAAI,CAAC1E,KAAL,IAAc0E,IAAI,CAAC1E,KAAL,CAAWhI,MAAX,GAAoB,CAAtC,EAAyC;AAC9ClB,MAAAA,KAAK,CAACvF,IAAN,CAAW,WAAWmT,IAAI,CAAC1E,KAAL,CAAW,CAAX,EAAclB,QAApC;AACD,KAFM,MAEA,IAAI4F,IAAI,CAACvQ,WAAT,EAAsB;AAC3B2C,MAAAA,KAAK,CAACvF,IAAN,CAAWmT,IAAI,CAACvQ,WAAhB;AACD;;AACDuQ,IAAAA,IAAI,CAACpK,UAAL,IAAmBoK,IAAI,CAACpK,UAAL,CAAgBrD,OAAhB,CAAyB6C,SAAD,IAAe;AACxDhD,MAAAA,KAAK,CAACvF,IAAN,CAAWuI,SAAS,CAACpD,IAAV,IAAkBoD,SAAS,CAACuB,IAAV,GAAiB,MAAMvB,SAAS,CAACuB,IAAV,CAAexD,IAAf,CAAoB,GAApB,CAAvB,GAAkD,EAApE,CAAX;AACD,KAFkB,CAAnB;AAGA6M,IAAAA,IAAI,CAACtK,UAAL,IAAmBsK,IAAI,CAACtK,UAAL,CAAgBnD,OAAhB,CAAyB4C,SAAD,IAAe;AACxD/C,MAAAA,KAAK,CAACvF,IAAN,CAAWsI,SAAS,CAACnD,IAAV,IAAkBmD,SAAS,CAACwB,IAAV,GAAiB,MAAMxB,SAAS,CAACwB,IAAV,CAAexD,IAAf,CAAoB,GAApB,CAAvB,GAAkD,EAApE,CAAX;AACD,KAFkB,CAAnB;AAGD,GAjBD,MAiBO;AACL,QAAI6M,IAAI,CAACvQ,WAAT,EAAsB;AACpB2C,MAAAA,KAAK,CAACvF,IAAN,CAAW,CAACmT,IAAI,CAACnD,QAAL,GAAgB,GAAhB,GAAsB,EAAvB,KAA8BmD,IAAI,CAACjN,GAAL,GAAW,GAAX,GAAiB,EAA/C,IAAqDiN,IAAI,CAACvQ,WAArE;AACD;;AACD,QAAIuQ,IAAI,CAAC5E,OAAL,IAAgB4E,IAAI,CAAC5E,OAAL,CAAa9H,MAAb,GAAsB,CAA1C,EAA6ClB,KAAK,CAACvF,IAAN,CAAW,aAAamT,IAAI,CAAC5E,OAAL,CAAasC,MAAb,CAAoB3B,CAAC,IAAIA,CAAC,CAAC9L,IAA3B,EAAiC6D,GAAjC,CAAqCiI,CAAC,IAAIwC,UAAU,CAACxC,CAAC,CAAC9L,IAAH,CAApD,EAA8DkD,IAA9D,CAAmE,GAAnE,CAAxB;AAC7C,QAAI6M,IAAI,CAAC1E,KAAL,IAAc0E,IAAI,CAAC1E,KAAL,CAAWhI,MAAX,GAAoB,CAAtC,EAAyClB,KAAK,CAACvF,IAAN,CAAW,WAAWmT,IAAI,CAAC1E,KAAL,CAAWoC,MAAX,CAAkB5B,CAAC,IAAI,CAACA,CAAC,CAACvB,MAAH,IAAauB,CAAC,CAAC1B,QAAtC,EAAgDtG,GAAhD,CAAoDgI,CAAC,IAAIA,CAAC,CAAC1B,QAA3D,EAAqEjH,IAArE,CAA0E,GAA1E,CAAtB;;AACzC,QAAI6M,IAAI,CAACvE,KAAL,IAAcuE,IAAI,CAACvE,KAAL,CAAWnI,MAAX,GAAoB,CAAtC,EAAyC;AACvC0M,MAAAA,IAAI,CAACvE,KAAL,CAAWlJ,OAAX,CAAmB0J,CAAC,IAAI;AACtB,YAAIkE,SAAS,GAAG,EAAhB;AACA,YAAIlE,CAAC,CAAChM,IAAN,EAAYkQ,SAAS,GAAGA,SAAS,CAAChM,MAAV,CAAiB7E,0BAAC,CAACgD,OAAF,CAAU2J,CAAC,CAAChM,IAAZ,IAAoBgM,CAAC,CAAChM,IAAtB,GAA6B,CAACgM,CAAC,CAAChM,IAAH,CAA9C,CAAZ;AACZ,YAAIgM,CAAC,CAACjB,OAAN,EAAemF,SAAS,GAAGA,SAAS,CAAChM,MAAV,CAAiB7E,0BAAC,CAACgD,OAAF,CAAU2J,CAAC,CAACjB,OAAZ,IAAuBiB,CAAC,CAACjB,OAAzB,GAAmC,CAACiB,CAAC,CAACjB,OAAH,CAApD,CAAZ;AACf,YAAIiB,CAAC,CAAChB,OAAN,EAAekF,SAAS,GAAGA,SAAS,CAAChM,MAAV,CAAiB7E,0BAAC,CAACgD,OAAF,CAAU2J,CAAC,CAAChB,OAAZ,IAAuBgB,CAAC,CAAChB,OAAzB,GAAmC,CAACgB,CAAC,CAAChB,OAAH,CAApD,CAAZ;AACf,YAAIkF,SAAS,CAAC7M,MAAV,GAAmB,CAAvB,EAA0BlB,KAAK,CAACvF,IAAN,CAAW,WAAWsT,SAAS,CAACrM,GAAV,CAAcmI,CAAC,IAAIsC,UAAU,CAACtC,CAAD,CAA7B,EAAkC9I,IAAlC,CAAuC,GAAvC,CAAtB;AAE1B,YAAI8I,CAAC,CAACb,OAAF,IAAaa,CAAC,CAACb,OAAF,CAAU9H,MAAV,GAAmB,CAApC,EAAuClB,KAAK,CAACvF,IAAN,CAAW,aAAaoP,CAAC,CAACb,OAAF,CAAUsC,MAAV,CAAiB3B,CAAC,IAAIA,CAAC,CAAC9L,IAAxB,EAA8B6D,GAA9B,CAAkCiI,CAAC,IAAIwC,UAAU,CAACxC,CAAC,CAAC9L,IAAH,CAAjD,EAA2DkD,IAA3D,CAAgE,GAAhE,CAAxB;AACvC,YAAI8I,CAAC,CAACd,KAAF,IAAW,CAACc,CAAC,CAACd,KAAF,CAAQZ,MAApB,IAA8B0B,CAAC,CAACd,KAAF,CAAQf,QAA1C,EAAoDhI,KAAK,CAACvF,IAAN,CAAW,WAAWoP,CAAC,CAACd,KAAF,CAAQf,QAA9B;AACrD,OATD;AAUD;;AACD4F,IAAAA,IAAI,CAACxK,SAAL,IAAkBwK,IAAI,CAACxK,SAAL,CAAejD,OAAf,CAAwByC,QAAD,IAAc;AACrD5C,MAAAA,KAAK,CAACvF,IAAN,CAAW,CAACmI,QAAQ,CAAC6H,QAAT,GAAoB,GAApB,GAA0B,EAA3B,KAAkC7H,QAAQ,CAACjC,GAAT,GAAe,GAAf,GAAqB,EAAvD,IAA6DiC,QAAQ,CAAChD,IAAtE,IAA8EgD,QAAQ,CAAC2B,IAAT,GAAgB,MAAM3B,QAAQ,CAAC2B,IAAT,CAAcxD,IAAd,CAAmB,GAAnB,CAAtB,GAAgD,EAA9H,CAAX;AACD,KAFiB,CAAlB;AAGA6M,IAAAA,IAAI,CAACtK,UAAL,IAAmBsK,IAAI,CAACtK,UAAL,CAAgBnD,OAAhB,CAAyB4C,SAAD,IAAe;AACxD/C,MAAAA,KAAK,CAACvF,IAAN,CAAWsI,SAAS,CAACnD,IAAV,IAAkBmD,SAAS,CAACwB,IAAV,GAAiB,MAAMxB,SAAS,CAACwB,IAAV,CAAexD,IAAf,CAAoB,GAApB,CAAvB,GAAkD,EAApE,CAAX;AACD,KAFkB,CAAnB;AAGD;;AACD,SAAOf,KAAK,CAAC0B,GAAN,CAAUiN,CAAC,IAAIA,CAAC,CAACvD,IAAF,EAAf,CAAP;AACD,CA7CD;;AA+CA,UAAc,GAAG;AACfN,iBAAAA,eADe;AAEfO,8BAAAA,4BAFe;AAGfE,qBAAAA,mBAHe;AAIf5J,YAAAA,UAJe;AAKfwK,EAAAA,UALe;AAMfX,iBAAAA,eANe;AAOfY,oBAAAA,kBAPe;AAQfsC,oBAAAA,kBARe;AASff,qBAAAA,mBATe;AAUfM,gBAAAA,cAVe;AAWf1B,kBAAAA,gBAXe;AAYf2B,iBAAAA;AAZe,CAAjB;;AChdA,MAAM1L,OAAK,GAAGD,yBAAgB,CAAC,6BAAD,CAA9B;AAEA,MAAM;AAAEqM,EAAAA,EAAE,EAAEC;AAAN,IAAiBpM,wBAAvB;AAEA,MAAM;AAAEH,UAAAA;AAAF,IAAaI,uBAAnB;AAMA,MAAM;AAAE6I,qBAAAA,mBAAF;AAAqB5J,YAAAA;AAArB,IAAkCgB,MAAxC;AACA,MAAM;AAAErD,eAAAA;AAAF,IAAkBwP,aAAxB;;;;;;AAOA,MAAMC,uBAAuB,GAAG;AAC9BC,EAAAA,IAAI,EAAE,MAAM;AACV,WAAO,IAAIC,IAAJ,GAAWC,cAAX,EAAP;AACD,GAH6B;AAI9BC,EAAAA,OAAO,EAAE,MAAM;AACb,WAAO,IAAIF,IAAJ,GAAWC,cAAX,CAA0B,OAA1B,CAAP;AACD,GAN6B;AAO9BE,EAAAA,OAAO,EAAE,MAAM;AACb,WAAOC,0BAAM,GAAGC,MAAT,CAAgB,sBAAhB,CAAP;AACD,GAT6B;AAU9BC,EAAAA,QAAQ,EAAE,MAAM;AACd,WAAO,IAAIN,IAAJ,GAAWO,WAAX,EAAP;AACD,GAZ6B;AAc9BC,EAAAA,KAAK,EAAGC,OAAD,IAAa;AAClB,QAAIA,OAAJ,EAAa;AACX,aAAOL,0BAAM,GAAGC,MAAT,CAAgBI,OAAhB,CAAP;AACD;;AACD,WAAO,IAAIT,IAAJ,GAAWU,kBAAX,EAAP;AACD,GAnB6B;AAoB9BC,EAAAA,QAAQ,EAAE,MAAM;AACd,WAAO,IAAIX,IAAJ,GAAWU,kBAAX,CAA8B,OAA9B,CAAP;AACD,GAtB6B;AAuB9BE,EAAAA,QAAQ,EAAE,MAAM;AACd,WAAOR,0BAAM,GAAGC,MAAT,CAAgB,YAAhB,CAAP;AACD,GAzB6B;AA0B9BQ,EAAAA,SAAS,EAAE,MAAM;AACf,WAAOT,0BAAM,GAAGC,MAAT,CAAgB,YAAhB,CAAP;AACD,GA5B6B;AA8B9BS,EAAAA,KAAK,EAAE,MAAM;AACX,WAAO,IAAId,IAAJ,GAAWe,kBAAX,EAAP;AACD,GAhC6B;AAiC9BC,EAAAA,QAAQ,EAAE,MAAM;AACd,WAAO,IAAIhB,IAAJ,GAAWe,kBAAX,CAA8B,OAA9B,CAAP;AACD,GAnC6B;AAoC9BE,EAAAA,QAAQ,EAAE,MAAM;AACd,WAAOb,0BAAM,GAAGC,MAAT,CAAgB,UAAhB,CAAP;AACD,GAtC6B;AAuC9Ba,EAAAA,SAAS,EAAE,MAAM;AACf,WAAOd,0BAAM,GAAGC,MAAT,CAAgB,UAAhB,CAAP;AACD,GAzC6B;AA0C9Bc,EAAAA,WAAW,EAAE,MAAM;AACjB,WAAOf,0BAAM,GAAGC,MAAT,CAAgB,OAAhB,CAAP;AACD,GA5C6B;AA6C9Be,EAAAA,QAAQ,EAAE,MAAM;AACd,WAAOhB,0BAAM,GAAGC,MAAT,CAAgB,IAAhB,CAAP;AACD,GA/C6B;AAgD9BgB,EAAAA,SAAS,EAAE,MAAM;AACf,WAAOjB,0BAAM,GAAGC,MAAT,CAAgB,KAAhB,CAAP;AACD,GAlD6B;AAoD9BiB,EAAAA,UAAU,EAAE,MAAM;AAChB,WAAOtB,IAAI,CAACuB,GAAL,EAAP;AACD,GAtD6B;AAwD9BC,EAAAA,KAAK,EAAE,MAAM;AACX,WAAO,IAAIxB,IAAJ,GAAWyB,WAAX,EAAP;AACD,GA1D6B;AA2D9BC,EAAAA,MAAM,EAAE,MAAM;AACZ,WAAOtB,0BAAM,GAAGC,MAAT,CAAgB,MAAhB,CAAP;AACD,GA7D6B;AA8D9BsB,EAAAA,SAAS,EAAE,MAAM;AACf,WAAOvB,0BAAM,GAAGC,MAAT,CAAgB,IAAhB,CAAP;AACD,GAhE6B;AAiE9BuB,EAAAA,aAAa,EAAE,MAAM;AACnB,WAAO,IAAI5B,IAAJ,GAAW6B,OAAX,EAAP;AACD,GAnE6B;AAoE9BC,EAAAA,YAAY,EAAE,MAAM;AAClB,WAAO1B,0BAAM,GAAGC,MAAT,CAAgB,MAAhB,CAAP;AACD,GAtE6B;AAwE9B0B,EAAAA,OAAO,EAAG9P,MAAD,IAAY;AACnB,QAAIA,MAAM,IAAI,IAAd,EAAoB;AAClB,YAAM3B,KAAK,CAAC,oCAAD,CAAX;AACD;;AACD,WAAO0R,8BAAS,CAAC,GAAD,EAAM/P,MAAN,CAAhB;AACD,GA7E6B;AA8E9BgQ,EAAAA,SAAS,EAAE,MAAM;AACf,WAAOD,8BAAS,CAAC,GAAD,EAAM,EAAN,CAAhB;AACD,GAhF6B;AAkF9BE,EAAAA,OAAO,EAAE,MAAM;AACb,WAAOtC,MAAM,EAAb;AACD,GApF6B;AAsF9BuC,EAAAA,YAAY,EAAE;AACZC,IAAAA,OAAO,EAAGlO,IAAD,IAAU;AACjB,aAAOA,IAAI,CAACtJ,YAAY,CAACzI,WAAd,CAAX;AACD;AAHW,GAtFgB;AA4F9BkgB,EAAAA,gBAAgB,EAAE;AAChBD,IAAAA,OAAO,EAAGlO,IAAD,IAAU;AACjB,aAAOA,IAAI,CAACtJ,YAAY,CAACxI,eAAd,CAAX;AACD;AAHe,GA5FY;AAkG9BkgB,EAAAA,aAAa,EAAE;AACbF,IAAAA,OAAO,EAAGlO,IAAD,IAAU;AACjB,aAAOA,IAAI,CAACtJ,YAAY,CAACvI,YAAd,CAAX;AACD;AAHY,GAlGe;AAwG9BkgB,EAAAA,IAAI,EAAE;AACJH,IAAAA,OAAO,EAAE,CAAClO,IAAD,EAAOvD,IAAP,KAAgB;AACvB,UAAI,CAACA,IAAL,EAAW;AACT,cAAML,KAAK,CAAC,iCAAD,CAAX;AACD;;AACD,aAAOqH,OAAO,CAAC6K,GAAR,CAAY7R,IAAZ,CAAP;AACD,KANG;AAOJ8R,IAAAA,iBAAiB,EAAE,CAPf;AAQJC,IAAAA,MAAM,EAAE;AARJ,GAxGwB;AAmH9BC,EAAAA,IAAI,EAAE;AACJP,IAAAA,OAAO,EAAE,CAAClO,IAAD,EAAOvD,IAAP,KAAgB;AACvB,UAAI,CAACA,IAAL,EAAW;AACT,cAAML,KAAK,CAAC,iCAAD,CAAX;AACD;;AACD,aAAO4D,IAAI,CAACvD,IAAD,CAAX;AACD,KANG;AAOJ8R,IAAAA,iBAAiB,EAAE;AAPf,GAnHwB;AA6H9BG,EAAAA,IAAI,EAAE;AACJR,IAAAA,OAAO,EAAE,CAAClO,IAAD,EAAO2O,QAAP,EAAiBC,OAAjB,KAA6B;AACpC,UAAI,CAACD,QAAL,EAAe;AACb,cAAMvS,KAAK,CAAC,qCAAD,CAAX;AACD;;AACD,UAAI,CAACwS,OAAL,EAAc;AACZ,cAAMxS,KAAK,CAAC,wCAAD,CAAX;AACD;;AACD,YAAMyS,IAAI,GAAGC,4BAAE,CAACC,KAAH,CAASH,OAAT,EAAkBD,QAAlB,CAAb;AACA,UAAIE,IAAI,IAAIA,IAAI,CAAC9Q,MAAL,GAAc,CAA1B,EAA6B,OAAO8Q,IAAI,CAAC,CAAD,CAAX,CAA7B,KACK,OAAO,EAAP;AACN,KAXG;AAYJN,IAAAA,iBAAiB,EAAE;AAZf,GA7HwB;AA4I9BS,EAAAA,KAAK,EAAE;AACLd,IAAAA,OAAO,EAAE,CAAClO,IAAD,EAAOiP,IAAP,KAAgB;AACvB,UAAIA,IAAI,IAAI,IAAZ,EAAkB;AAChB,cAAM7S,KAAK,CAAC,kCAAD,CAAX;AACD;;AACD,UAAI;AACF,cAAMkG,EAAE,GAAG,IAAInD,QAAJ,CAAW;AACpBoD,UAAAA,IAAI,EAAE,KADc;AAEpB5C,UAAAA,OAAO,EAAE,KAFW;AAGpB2O,UAAAA,GAAG,EAAEtO,IAAI,CAACtJ,YAAY,CAACR,qBAAd,CAAJ,GAA2CuN,OAAO,CAAC6K,GAAnD,GAAyD,EAH1C;AAIpB9L,UAAAA,OAAO,EAAE;AACPxC,YAAAA;AADO;AAJW,SAAX,CAAX;AAQA,eAAOsC,EAAE,CAACG,GAAH,CAAQ,qBAAoBwM,IAAK,GAAjC,CAAP;AACD,OAVD,CAUE,OAAOpX,GAAP,EAAY;AACZ,cAAMuE,KAAK,CAAE,oCAAmCvE,GAAI,EAAzC,CAAX;AACD;AACF,KAlBI;AAmBL0W,IAAAA,iBAAiB,EAAE;AAnBd;AA5IuB,CAAhC;;AAmKA,MAAMW,qBAAmB,GAAGnV,0BAAC,CAACoV,SAAF,CAAYvD,uBAAZ,EAAqC,CAACwD,YAAD,EAAe3S,IAAf,KAAwB;AACvF,QAAM4S,IAAI,GAAGD,YAAY,CAAClB,OAAb,IAAwBkB,YAArC;AACA,QAAMb,iBAAiB,GAAGa,YAAY,CAAClB,OAAb,GAAuBkB,YAAY,CAACb,iBAAb,IAAkC,CAAzD,GAA6Da,YAAY,CAACrR,MAApG;AAEA,SAAO;AACLmQ,IAAAA,OAAO,EAAE,CAAClO,IAAD,EAAO,GAAGsP,IAAV,KAAmB;AAC1B,UAAI,CAACtP,IAAI,CAACtJ,YAAY,CAACR,qBAAd,CAAL,IAA6CkZ,YAAY,CAACZ,MAA9D,EAAsE;AACpE,cAAM,IAAIrS,aAAJ,CACH,0DAAyDM,IAAK,iBAD3D,EAEJ;AACES,UAAAA,IAAI,EAAE,UADR;AAEEG,UAAAA,OAAO,EAAE,cAFX;AAGED,UAAAA,MAAM,EAAEoE,wBAAI,CAACC,QAAL,CAAcC,UAAd,CAHV;AAIEpE,UAAAA,KAAK,EAAE;AACLpH,YAAAA,qBAAqB,EAAE8J,IAAI,CAACtJ,YAAY,CAACR,qBAAd,CADtB;AAELqZ,YAAAA,YAAY,EAAE9S;AAFT;AAJT,SAFI,CAAN;AAYD;;AACD,UAAI2S,YAAY,CAAClB,OAAjB,EAA0B;AACxB,eAAOmB,IAAI,CAACrP,IAAD,EAAO,GAAGsP,IAAV,CAAX;AACD,OAFD,MAEO;AACL,eAAOD,IAAI,CAAC,GAAGC,IAAJ,CAAX;AACD;AACF,KArBI;AAsBLf,IAAAA;AAtBK,GAAP;AAwBD,CA5B2B,CAA5B;;AA6BA,MAAMiB,cAAc,GAAGrV,MAAM,CAAC+H,IAAP,CAAYgN,qBAAZ,CAAvB;;AAEA,MAAMO,KAAK,GAAG,CAACtY,SAAD,EAAYuY,eAAZ,EAA6B9H,GAA7B,EAAkCgH,OAAlC,KAA8C;AAC1D,MAAIzX,SAAS,CAAC6I,IAAV,CAAetJ,YAAY,CAAC/B,uBAA5B,CAAJ,EAA0D;AACxDiT,IAAAA,GAAG,GAAG+H,MAAM,CAACD,eAAD,EAAkB9H,GAAlB,EAAuBzQ,SAAS,CAAC6I,IAAjC,EAAuC4O,OAAvC,CAAZ;AACD;;AACD,SAAOhH,GAAP;AACD,CALD;;AAOA,MAAMgI,WAAW,GAAG,CAACxO,IAAD,EAAOsO,eAAP,EAAwB1P,IAAxB,EAA8B4O,OAA9B,KAA0C;AAC5D,SAAO,CAACxN,IAAI,IAAI,EAAT,EAAa7C,GAAb,CAAiBsR,GAAG,IAAI;AAC7B,WAAOF,MAAM,CAACD,eAAD,EAAkBG,GAAlB,EAAuB7P,IAAvB,EAA6B4O,OAA7B,CAAb;AACD,GAFM,CAAP;AAGD,CAJD;;;AAOA,MAAMkB,aAAa,GAAG,CAAChK,CAAD,EAAIU,CAAJ,KAAUA,CAAC,CAACzI,MAAF,GAAW+H,CAAC,CAAC/H,MAA7C;;AAEA,MAAM4R,MAAM,GAAG,CAACD,eAAD,EAAkB9H,GAAlB,EAAuB5H,IAAvB,EAA6B4O,OAA7B,KAAyC;AACtD,MAAIhH,GAAJ,EAAS;AACP8H,IAAAA,eAAe,GAAGA,eAAe,IAAI,EAArC;AACA9H,IAAAA,GAAG,GAAGpJ,UAAQ,CAACoJ,GAAD,CAAd,CAFO;;;AAMP,UAAMmI,OAAO,GAAG5V,MAAM,CAAC+H,IAAP,CAAYgN,qBAAZ,EAAiCtQ,MAAjC,CAAwCzE,MAAM,CAAC+H,IAAP,CAAYwN,eAAZ,CAAxC,EAAsEM,IAAtE,CAA2EF,aAA3E,CAAhB;;AACA,SAAK,MAAM1N,GAAX,IAAkB2N,OAAlB,EAA2B;;AAEzB,UAAIhW,0BAAC,CAACoR,GAAF,CAAMuE,eAAN,EAAuBtN,GAAvB,CAAJ,EAAiC;AAC/B,cAAM6N,SAAS,GAAG,IAAIC,MAAJ,CAAY,KAAI9N,GAAI,EAApB,EAAuB,GAAvB,CAAlB;AACAwF,QAAAA,GAAG,GAAGA,GAAG,CAACE,OAAJ,CAAYmI,SAAZ,EAAuBP,eAAe,CAACtN,GAAD,CAAtC,CAAN;AACD,OAHD,MAGO;AACL,cAAM+N,KAAK,GAAI,KAAI/N,GAAI,uBAAvB;AACA,cAAMgO,OAAO,GAAGxI,GAAG,CAACyI,KAAJ,CAAU,IAAIH,MAAJ,CAAWC,KAAX,EAAkB,GAAlB,CAAV,KAAqC,EAArD;;AACA,aAAK,MAAME,KAAX,IAAoBD,OAApB,EAA6B;AAC3B,cAAIC,KAAK,CAACvN,OAAN,CAAc,GAAd,IAAqB,CAAzB,EAA4B;AAC1B,kBAAM+M,GAAG,GAAGQ,KAAK,CAACC,SAAN,CAAgBD,KAAK,CAACvN,OAAN,CAAc,GAAd,IAAqB,CAArC,EAAwCuN,KAAK,CAACrN,WAAN,CAAkB,GAAlB,CAAxC,EAAgE8E,OAAhE,CAAwE,OAAxE,EAAiF,GAAjF,CAAZ;AACAF,YAAAA,GAAG,GAAGA,GAAG,CAACE,OAAJ,CAAYuI,KAAZ,EAAmBnB,qBAAmB,CAAC9M,GAAD,CAAnB,CAAyB8L,OAAzB,CAAiClO,IAAjC,EAAuC6P,GAAvC,EAA4CjB,OAA5C,CAAnB,CAAN;AACD,WAHD,MAGO;AACLhH,YAAAA,GAAG,GAAGA,GAAG,CAACE,OAAJ,CAAYuI,KAAZ,EAAmBnB,qBAAmB,CAAC9M,GAAD,CAAnB,CAAyB8L,OAAzB,CAAiClO,IAAjC,CAAnB,CAAN;AACD;AACF;AACF;AACF;AACF;;AACD,SAAO4H,GAAP;AACD,CA5BD;;AA8BA,MAAM2I,eAAe,GAAI7V,IAAD,IAAU;AAChC,SAAQ,CAACX,0BAAC,CAACiI,QAAF,CAAWtH,IAAX,IAAmBA,IAAI,CAAC2V,KAAL,CAAW,gBAAX,CAAnB,GAAkD,KAAnD,KAA6D,EAArE;AACD,CAFD;;AAIA,MAAMG,IAAI,GAAG,CAACrZ,SAAD,EAAYuY,eAAZ,EAA6B7Q,MAA7B,EAAqC4R,SAArC,EAAgDtX,eAAhD,KAAoE;AAC/EkG,EAAAA,OAAK,CAAE,eAAcqR,wBAAI,CAACC,OAAL,CAAajB,eAAb,CAA8B,EAA9C,CAAL;AACA,MAAIkB,QAAJ;;AACA,UAAQzZ,SAAS,CAAC6I,IAAV,CAAetJ,YAAY,CAACpB,8BAA5B,CAAR;AACE,SAAK,MAAL;AACEsb,MAAAA,QAAQ,GAAG,QAAX;AACA;;AACF,SAAK,OAAL;AACEA,MAAAA,QAAQ,GAAG,aAAX;AACA;;AACF;AACEA,MAAAA,QAAQ,GAAG,QAAX;AACA;AATJ;;AAYA,MAAI/R,MAAM,IAAI9E,0BAAC,CAACiI,QAAF,CAAWnD,MAAX,CAAV,IAAgC4R,SAAhC,IAA6CtZ,SAAS,CAAC6I,IAAV,CAAetJ,YAAY,CAAC/B,uBAA5B,CAAjD,EAAuG;AACrG,UAAMkc,UAAU,GAAG1X,eAAe,CAAC2X,gBAAhB,CAAiC;AAAEL,MAAAA;AAAF,KAAjC,CAAnB;AACAI,IAAAA,UAAU,CAAC7T,OAAX,CAAmBO,QAAQ,IAAI;AAC7B,UAAIxD,0BAAC,CAAC6O,WAAF,CAAcrL,QAAd,CAAJ,EAA6B;AAC7BA,MAAAA,QAAQ,GAAGiB,UAAQ,CAACjB,QAAD,CAAnB;AAEA,UAAIwT,UAAU,GAAGxT,QAAjB;;AACA,UAAIpG,SAAS,CAAC6I,IAAV,CAAetJ,YAAY,CAAC5B,uBAA5B,MAAyD,QAAzD,IAAqEqC,SAAS,CAAC6I,IAAV,CAAetJ,YAAY,CAAC5B,uBAA5B,MAAyD,kBAAlI,EAAsJ;AACpJic,QAAAA,UAAU,GAAGhX,0BAAC,CAACiI,QAAF,CAAWzE,QAAX,IAAuB6K,mBAAiB,CAAC7K,QAAD,CAAjB,CAA4BuK,OAA5B,CAAoC,OAApC,EAA6C,GAA7C,CAAvB,GAA2EvK,QAAxF;AACD;;AACD,YAAMyT,UAAU,GAAGT,eAAe,CAAChT,QAAD,CAAlC;;AACA,WAAK,IAAI0N,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+F,UAAU,CAACjT,MAA/B,EAAuCkN,CAAC,EAAxC,EAA4C;AAC1C,cAAMgG,gBAAgB,GAAG,IAAIf,MAAJ,CAAY,KAAIc,UAAU,CAAC/F,CAAD,CAAI,EAA9B,EAAiC,GAAjC,CAAzB;AACA8F,QAAAA,UAAU,GAAGA,UAAU,CAACjJ,OAAX,CAAmBmJ,gBAAnB,EAAqCL,QAArC,CAAb;AACD;;AACD,YAAMM,aAAa,GAAGrS,MAAM,CAACwR,KAAP,CAAaU,UAAb,KAA4B,EAAlD;;AACA,WAAK,IAAI9F,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiG,aAAa,CAACnT,MAAlC,EAA0CkN,CAAC,EAA3C,EAA+C;AAC7C,YAAIA,CAAC,IAAI+F,UAAU,CAACjT,MAApB,EAA4B;AAC1B,gBAAMoT,OAAO,GAAGH,UAAU,CAAC/F,CAAC,GAAG,CAAL,CAA1B;;AACA,cAAIuE,cAAc,CAAC1M,OAAf,CAAuBqO,OAAvB,KAAmC,CAAvC,EAA0C;AACxC9R,YAAAA,OAAK,CAAE,kBAAiB8R,OAAQ,qDAA3B,CAAL;AACD,WAFD,MAEO;AACLzB,YAAAA,eAAe,CAACyB,OAAD,CAAf,GAA2BD,aAAa,CAACjG,CAAD,CAAxC;AACD;AACF;AACF;AACF,KAxBD;AAyBA5L,IAAAA,OAAK,CAAE,aAAYqR,wBAAI,CAACC,OAAL,CAAajB,eAAb,CAA8B,EAA5C,CAAL;AACD;AACF,CA5CD;;AA8CA,mBAAc,GAAG;AACfD,EAAAA,KADe;AAEfG,EAAAA,WAFe;AAGfY,EAAAA,IAHe;AAIfD,EAAAA,eAJe;AAKff,EAAAA,cALe;AAMfN,uBAAAA;AANe,CAAjB;;;;;;;;ACnTA,MAAM7P,OAAK,GAAGD,yBAAgB,CAAC,mBAAD,CAA9B;AAMA,MAAM;AAAEjD,eAAAA,aAAF;AAAeiC,sBAAAA,oBAAf;AAAmCC,uBAAAA;AAAnC,IAA2DiB,aAAjE;AACA,MAAM;AAAEqI,EAAAA,aAAF;AAAiBnJ,YAAAA,UAAjB;AAA2B6J,EAAAA,aAA3B;AAA0CH,EAAAA;AAA1C,IAAyE3I,MAA/E;AAEA,MAAM;AAAET,EAAAA;AAAF,IAAyBU,eAA/B;;AAEA,MAAM4R,aAAN,CAAkB;AAChBpa,EAAAA,WAAW,CAAEwN,QAAQ,GAAG,EAAb,EAAiB;AAC1B,SAAK/H,IAAL,GAAY+H,QAAQ,CAAC/H,IAArB;AACA,SAAK4U,WAAL,GAAmB7M,QAAQ,CAAC6M,WAA5B;AACA,SAAKC,eAAL,GAAuB9M,QAAQ,CAAC8M,eAAhC;AACA,SAAKtB,IAAL,GAAYxL,QAAQ,CAACwL,IAArB;AACA,SAAKuB,KAAL,GAAa/M,QAAQ,CAAC+M,KAAtB;AACA,SAAKC,WAAL,GAAmBhN,QAAQ,CAACgN,WAA5B;AACArX,IAAAA,MAAM,CAACC,MAAP,CAAc,IAAd,EAAoBoK,QAApB;AACD;;AAEDhG,EAAAA,QAAQ,GAAI;AACV,WAAO,KAAK+S,KAAL,GAAa,GAAb,GAAmB,KAAK9U,IAAxB,IAAgC,KAAK+U,WAAL,GAAoB,KAAI,KAAKA,WAAY,GAAzC,GAA8C,EAA9E,CAAP;AACD;;AAbe;;AAgBlB,MAAMC,eAAN,CAAsB;AACpBza,EAAAA,WAAW,CAAEwN,QAAQ,GAAG,EAAb,EAAiB;AAC1B,SAAK/H,IAAL,GAAY+H,QAAQ,CAAC/H,IAArB;AACA,SAAK2E,IAAL,GAAYoD,QAAQ,CAACpD,IAArB;AACA,SAAK5D,GAAL,GAAWgH,QAAQ,CAAChH,GAApB;AACA,SAAK8J,QAAL,GAAgB9C,QAAQ,CAAC8C,QAAzB;AACD;;AAED9I,EAAAA,QAAQ,GAAI;AACV,WAAO,CAAC,KAAK8I,QAAL,GAAgB,GAAhB,GAAsB,EAAvB,KAA8B,KAAK9J,GAAL,GAAW,GAAX,GAAiB,EAA/C,IAAqD,KAAKf,IAA1D,GAAiE,GAAjE,IAAwE,KAAK2E,IAAL,GAAY,KAAKA,IAAL,CAAUxD,IAAV,CAAe,GAAf,CAAZ,GAAkC,SAA1G,IAAuH,GAA9H;AACD;;AAVmB;;AAatB,MAAM8T,kBAAN,CAAyB;AACvB1a,EAAAA,WAAW,CAAEwN,QAAQ,GAAG,EAAb,EAAiB;AAC1B,SAAK/H,IAAL,GAAY+H,QAAQ,CAAC/H,IAArB;AACA,SAAK2E,IAAL,GAAYoD,QAAQ,CAACpD,IAArB;AACD;;AAED5C,EAAAA,QAAQ,GAAI;AACV,WAAO,KAAK/B,IAAL,GAAY,GAAZ,IAAmB,KAAK2E,IAAL,GAAY,KAAKA,IAAL,CAAUxD,IAAV,CAAe,GAAf,CAAZ,GAAkC,SAArD,IAAkE,GAAzE;AACD;;AARsB;;AAWzB,MAAM+T,kBAAN,CAAyB;AACvB3a,EAAAA,WAAW,CAAEwN,QAAQ,GAAG,EAAb,EAAiB;AAC1B,SAAK/H,IAAL,GAAY+H,QAAQ,CAAC/H,IAArB;AACA,SAAK2E,IAAL,GAAYoD,QAAQ,CAACpD,IAArB;AACD;;AAED5C,EAAAA,QAAQ,GAAI;AACV,WAAO,KAAK/B,IAAL,GAAY,GAAZ,IAAmB,KAAK2E,IAAL,GAAY,KAAKA,IAAL,CAAUxD,IAAV,CAAe,GAAf,CAAZ,GAAkC,SAArD,IAAkE,GAAzE;AACD;;AARsB;;AAWzB,MAAMgU,WAAN,CAAgB;AACd5a,EAAAA,WAAW,CAAEwN,QAAQ,GAAG,EAAb,EAAiB;AAC1B,SAAK6C,MAAL,GAAc7C,QAAQ,CAAC6C,MAAvB;AACA,SAAK/O,OAAL,GAAekM,QAAQ,CAAClM,OAAxB;AACA,SAAK4B,WAAL,GAAmBsK,QAAQ,CAACtK,WAA5B;AACA,SAAKyL,UAAL,GAAkBnB,QAAQ,CAACmB,UAA3B;AACA,SAAKkM,OAAL,GAAerN,QAAQ,CAACqN,OAAxB;AACA,SAAKrU,GAAL,GAAWgH,QAAQ,CAAChH,GAApB;AACA,SAAK8J,QAAL,GAAgB9C,QAAQ,CAAC8C,QAAzB;AACA,SAAKrH,SAAL,GAAiBlG,0BAAC,CAACwE,GAAF,CAAMiG,QAAQ,CAACvE,SAAf,EAA2BR,QAAD,IAAc,IAAIgS,eAAJ,CAAoBhS,QAApB,CAAxC,CAAjB;AACA,SAAKU,UAAL,GAAkBpG,0BAAC,CAACwE,GAAF,CAAMiG,QAAQ,CAACrE,UAAf,EAA4BP,SAAD,IAAe,IAAI8R,kBAAJ,CAAuB9R,SAAvB,CAA1C,CAAlB;AACA,SAAKS,UAAL,GAAkBtG,0BAAC,CAACwE,GAAF,CAAMiG,QAAQ,CAACnE,UAAf,EAA4BR,SAAD,IAAe,IAAI8R,kBAAJ,CAAuB9R,SAAvB,CAA1C,CAAlB;AACD;;AAEDiS,EAAAA,cAAc,GAAI;AAChB,WAAQ,KAAK5X,WAAL,IAAoB,KAAKA,WAAL,CAAiB6D,MAAjB,GAA0B,CAA/C,IACN,KAAK4H,UADC,IAEL,KAAK1F,SAAL,IAAkB,KAAKA,SAAL,CAAelC,MAAf,GAAwB,CAFrC,IAGL,KAAKoC,UAAL,IAAmB,KAAKA,UAAL,CAAgB4R,SAAhB,CAA0BvG,CAAC,IAAIA,CAAC,CAAC/O,IAAF,KAAWqC,kBAA1C,KAAiE,CAH/E,IAIL,KAAKuB,UAAL,IAAmB,KAAKA,UAAL,CAAgBtC,MAAhB,GAAyB,CAJ9C;AAKD;;AAEDS,EAAAA,QAAQ,GAAI;AACV,WAAO,CAAC,KAAKqT,OAAL,GAAe,KAAKA,OAAL,GAAe,IAA9B,GAAqC,EAAtC,IACL,GADK,GACC,KAAKxK,MADN,GAEL,KAFK,IAEI,KAAKC,QAAL,GAAgB,GAAhB,GAAsB,EAF1B,KAEiC,KAAK9J,GAAL,GAAW,GAAX,GAAiB,EAFlD,KAGJ,KAAKtD,WAAL,IAAoB,EAHhB,KAIJ,KAAK+F,SAAL,IAAkB,KAAKA,SAAL,CAAelC,MAAf,GAAwB,CAA1C,GAA8C,MAAM,KAAKkC,SAAL,CAAe1B,GAAf,CAAmBuH,CAAC,IAAIA,CAAC,CAACtH,QAAF,EAAxB,EAAsCZ,IAAtC,CAA2C,QAA3C,CAApD,GAA2G,EAJvG,KAKJ,KAAKuC,UAAL,IAAmB,KAAKA,UAAL,CAAgBpC,MAAhB,GAAyB,CAA5C,GAAgD,MAAM,KAAKoC,UAAL,CAAgB5B,GAAhB,CAAoBiN,CAAC,IAAIA,CAAC,CAAChN,QAAF,EAAzB,EAAuCZ,IAAvC,CAA4C,OAA5C,CAAtD,GAA6G,EALzG,KAMJ,KAAKyC,UAAL,IAAmB,KAAKA,UAAL,CAAgBtC,MAAhB,GAAyB,CAA5C,GAAgD,MAAM,KAAKsC,UAAL,CAAgB9B,GAAhB,CAAoByT,CAAC,IAAIA,CAAC,CAACxT,QAAF,EAAzB,EAAuCZ,IAAvC,CAA4C,OAA5C,CAAtD,GAA6G,EANzG,CAAP;AAOD;;AA9Ba;;AAiChB,MAAMqU,UAAN,CAAiB;AACfjb,EAAAA,WAAW,CAAE;AAAEkb,IAAAA,KAAF;AAASzK,IAAAA,WAAT;AAAsBiI,IAAAA,eAAtB;AAAuCyC,IAAAA,UAAvC;AAAmDC,IAAAA,QAAnD;AAA6Dva,IAAAA;AAA7D,GAAF,EAAsE;AAC/E,SAAKqa,KAAL,GAAaA,KAAb;AACA,SAAKzK,WAAL,GAAmBA,WAAnB;AACA,SAAKiI,eAAL,GAAuBA,eAAvB;AACA,SAAKyC,UAAL,GAAkBA,UAAlB;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKva,GAAL,GAAWA,GAAX;AACD;;AAEDwa,EAAAA,cAAc,GAAI;AAChB,UAAMC,eAAe,GAAG,KAAKJ,KAAL,CAAW3T,GAAX,CAAekM,IAAI,IAAI;AAC7C,UAAIA,IAAI,CAAC9M,MAAL,IAAe8M,IAAI,CAAC9M,MAAL,CAAYhB,QAA/B,EAAyC;AACvC,eAAO8N,IAAI,CAAC9M,MAAL,CAAYhB,QAAZ,EAAP;AACD,OAFD,MAEO;AACL,eAAO,2BAAP;AACD;AACF,KANuB,CAAxB;AAOA,WAAO2V,eAAe,CAAC1U,IAAhB,CAAqB,IAArB,CAAP;AACD;;AAnBc;;AA+BjB,MAAM2U,cAAN,CAAqB;AACnBvb,EAAAA,WAAW,CAAE;AAAEuG,IAAAA,QAAF;AAAYC,IAAAA,GAAZ;AAAiB8J,IAAAA,QAAjB;AAA2B3J,IAAAA,MAA3B;AAAmC6U,IAAAA,SAAnC;AAA8CC,IAAAA,OAA9C;AAAuDC,IAAAA,QAAvD;AAAiEC,IAAAA,MAAjE;AAAyE9a,IAAAA;AAAzE,GAAF,EAAkF;AAC3F,SAAK0F,QAAL,GAAgBA,QAAhB;AACA,SAAKC,GAAL,GAAWA,GAAX;AACA,SAAK8J,QAAL,GAAgBA,QAAhB;AACA,SAAK3J,MAAL,GAAcA,MAAd;AACA,SAAK6U,SAAL,GAAiBA,SAAjB;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAK9a,GAAL,GAAWA,GAAX;AACD;;AAXkB;;AAcrB,MAAM+a,eAAN,SAA8BxW,KAA9B,CAAoC;AAClCpF,EAAAA,WAAW,CAAEa,GAAF,EAAOiG,UAAP,EAAmB;AAC5B,UAAMjG,GAAG,CAACwE,OAAV;AACA,SAAKI,IAAL,GAAY,KAAKzF,WAAL,CAAiByF,IAA7B;AACA,SAAKqB,UAAL,GAAkBA,UAAlB;AACA,SAAKR,KAAL,GAAazF,GAAb;AACAuE,IAAAA,KAAK,CAACM,iBAAN,CAAwB,IAAxB,EAA8B,KAAK1F,WAAnC;AACD;;AAPiC;;AAUpC,MAAM6b,OAAN,CAAY;AACV7b,EAAAA,WAAW,CAAEsF,OAAF,EAAWkI,QAAQ,GAAG,EAAtB,EAA0B;AACnC,QAAIA,QAAQ,YAAYqO,OAAxB,EAA+B;AAC7BxT,MAAAA,OAAK,CAAC,gEAAD,CAAL;AACD,KAFD,MAEO,IAAImF,QAAQ,CAACsO,aAAb,EAA4B;;AAEjCzT,MAAAA,OAAK,CAAC,4FAAD,CAAL;AACD;;AAED,SAAKlG,eAAL,GAAuBmD,OAAO,CAACnD,eAA/B;AACA,SAAKmD,OAAL,GAAeA,OAAf;AACA,SAAKyW,MAAL,GAAc,IAAI3B,aAAJ,CAAgB5M,QAAQ,CAACuO,MAAzB,CAAd;;AACA,QAAIvO,QAAQ,CAAC0G,YAAT,IAAyBnR,0BAAC,CAACgD,OAAF,CAAUyH,QAAQ,CAAC0G,YAAnB,CAA7B,EAA+D;AAC7D,WAAKA,YAAL,GAAoBnR,0BAAC,CAACwE,GAAF,CAAMiG,QAAQ,CAAC0G,YAAf,EAA8BT,IAAD,IAAU,IAAImH,WAAJ,CAAcnH,IAAd,CAAvC,CAApB;AACD,KAFD,MAEO;AACL,WAAKS,YAAL,GAAoB,EAApB;AACD;;AACD,SAAK8H,SAAL,GAAiBxO,QAAQ,CAACwO,SAA1B;AACA,UAAM;AAAEF,MAAAA,aAAF;AAAiBG,MAAAA;AAAjB,QAAiC,KAAKC,2BAAL,CAAiC1O,QAAjC,CAAvC;AACA,SAAKsO,aAAL,GAAqBA,aAArB;AACA,SAAKG,WAAL,GAAmBA,WAAnB;AACA,UAAM;AAAEE,MAAAA,cAAF;AAAkBC,MAAAA;AAAlB,QAAmC,KAAKC,4BAAL,CAAkC7O,QAAlC,CAAzC;AACA,SAAK2O,cAAL,GAAsBA,cAAtB;AACA,SAAKC,YAAL,GAAoBA,YAApB;AACA,SAAKE,qBAAL,GAA6B,IAA7B;AACD;;AAEDJ,EAAAA,2BAA2B,CAAE1O,QAAF,EAAY;AACrC,UAAMsO,aAAa,GAAGtO,QAAQ,CAAC0G,YAAT,CACnB/C,MADmB,CACZH,CAAC,IAAIA,CAAC,CAACX,MAAF,KAAa,OAAb,IAAwBW,CAAC,CAAC/H,SAA1B,IAAuC+H,CAAC,CAAC/H,SAAF,CAAYlC,MAAZ,GAAqB,CADrD,EAEnBQ,GAFmB,CAEfyJ,CAAC,IAAIA,CAAC,CAAC/H,SAFQ,EAGnBkC,MAHmB,CAGZ,CAACoR,GAAD,EAAMC,GAAN,KAAcD,GAAG,CAAC3U,MAAJ,CAAW4U,GAAX,CAHF,EAGmB,EAHnB,CAAtB;AAKA,UAAMP,WAAW,GAAGzO,QAAQ,CAAC0G,YAAT,CACjB/C,MADiB,CACVH,CAAC,IAAIA,CAAC,CAACX,MAAF,KAAa,KAAb,IAAsBW,CAAC,CAAC/H,SAAxB,IAAqC+H,CAAC,CAAC/H,SAAF,CAAYlC,MAAZ,GAAqB,CADrD,EAEjBQ,GAFiB,CAEbyJ,CAAC,IAAIA,CAAC,CAAC/H,SAFM,EAGjBkC,MAHiB,CAGV,CAACoR,GAAD,EAAMC,GAAN,KAAcD,GAAG,CAAC3U,MAAJ,CAAW4U,GAAX,CAHJ,EAGqB,EAHrB,CAApB;AAKA,WAAO;AAAEV,MAAAA,aAAF;AAAiBG,MAAAA;AAAjB,KAAP;AACD;;AAEDI,EAAAA,4BAA4B,CAAE7O,QAAF,EAAY;AACtC,UAAM2O,cAAc,GAAG3O,QAAQ,CAAC0G,YAAT,CACpB/C,MADoB,CACbH,CAAC,IAAIA,CAAC,CAACX,MAAF,KAAa,OAAb,IAAwBW,CAAC,CAAC7H,UAA1B,IAAwC6H,CAAC,CAAC7H,UAAF,CAAapC,MAAb,GAAsB,CADtD,EAEpBQ,GAFoB,CAEhByJ,CAAC,IAAIA,CAAC,CAAC7H,UAFS,EAGpBgC,MAHoB,CAGb,CAACoR,GAAD,EAAMC,GAAN,KAAcD,GAAG,CAAC3U,MAAJ,CAAW4U,GAAX,CAHD,EAGkB,EAHlB,CAAvB;AAKA,UAAMJ,YAAY,GAAG5O,QAAQ,CAAC0G,YAAT,CAClB/C,MADkB,CACXH,CAAC,IAAIA,CAAC,CAACX,MAAF,KAAa,KAAb,IAAsBW,CAAC,CAAC7H,UAAxB,IAAsC6H,CAAC,CAAC7H,UAAF,CAAapC,MAAb,GAAsB,CADtD,EAElBQ,GAFkB,CAEdyJ,CAAC,IAAIA,CAAC,CAAC7H,UAFO,EAGlBgC,MAHkB,CAGX,CAACoR,GAAD,EAAMC,GAAN,KAAcD,GAAG,CAAC3U,MAAJ,CAAW4U,GAAX,CAHH,EAGoB,EAHpB,CAArB;AAKA,WAAO;AAAEL,MAAAA,cAAF;AAAkBC,MAAAA;AAAlB,KAAP;AACD;;AAED5U,EAAAA,QAAQ,GAAI;AACV,WAAO,KAAKuU,MAAL,CAAYvU,QAAZ,MAA0B,KAAKwU,SAAL,GAAkB,KAAItC,wBAAI,CAACC,OAAL,CAAa,KAAKqC,SAAlB,CAA6B,GAAnD,GAAwD,EAAlF,IAAwF,IAAxF,GAA+F,KAAK9H,YAAL,CAAkB3M,GAAlB,CAAuBmI,CAAD,IAAOA,CAAC,CAAClI,QAAF,EAA7B,EAA2CZ,IAA3C,CAAgD,KAAhD,CAAtG;AACD;;AAEQ,QAAHjE,GAAG,CAAExC,SAAF,EAAa;AACpB,UAAM2G,UAAU,GAAG,IAAImU,UAAJ,CAAe;AAChCC,MAAAA,KAAK,EAAE,EADyB;AAEhCzK,MAAAA,WAAW,EAAE,EAFmB;AAGhC0K,MAAAA,UAAU,EAAE,IAAIrG,IAAJ,EAHoB;AAIhCsG,MAAAA,QAAQ,EAAE,IAJsB;AAKhCva,MAAAA,GAAG,EAAE;AAL2B,KAAf,CAAnB;AAOA,UAAM6X,eAAe,GAAG,EAAxB;AAEAvY,IAAAA,SAAS,CAAC6I,IAAV,CAAetJ,YAAY,CAACvI,YAA5B,IAA4C,KAAK4kB,MAAL,CAAYtW,IAAxD;;AACA,QAAI;AACF,UAAI;;AAEF,cAAM,KAAKtD,eAAL,CAAqBsa,YAArB,CAAkC;AAAEha,UAAAA,KAAK,EAAE,IAAT;AAAe4P,UAAAA,SAAS,EAAE;AAAEwI,YAAAA,OAAO,EAAE;AAAX,WAA1B;AAAiD1a,UAAAA,SAAjD;AAA4D2G,UAAAA,UAA5D;AAAwE4R,UAAAA;AAAxE,SAAlC,CAAN;AACD,OAHD,CAGE,OAAO7X,GAAP,EAAY;AACZ,cAAM,IAAI+a,eAAJ,CAAoBxU,oBAAkB,CAAE,GAAE,KAAK2U,MAAL,CAAYtW,IAAK,KAAI5E,GAAG,CAACwE,OAAQ,EAArC,EAAwCxE,GAAxC,CAAtC,EAAoFiG,UAApF,CAAN;AACD;;AACD,UAAI;AACF,cAAM,KAAK3E,eAAL,CAAqBua,gBAArB,CAAsC;AAAEja,UAAAA,KAAK,EAAE,IAAT;AAAe4P,UAAAA,SAAS,EAAE;AAAEwI,YAAAA,OAAO,EAAE;AAAX,WAA1B;AAAiD1a,UAAAA,SAAjD;AAA4DuY,UAAAA;AAA5D,SAAtC,CAAN;AACD,OAFD,CAEE,OAAO7X,GAAP,EAAY;AACZ,cAAM,IAAI+a,eAAJ,CAAoBxU,oBAAkB,CAAE,GAAE,KAAK2U,MAAL,CAAYtW,IAAK,KAAI5E,GAAG,CAACwE,OAAQ,EAArC,EAAwCxE,GAAxC,CAAtC,EAAoFiG,UAApF,CAAN;AACD;;AACD,YAAM,KAAK6V,eAAL,CAAqBxc,SAArB,EAAgCuY,eAAhC,EAAiD5R,UAAjD,CAAN;AACA,YAAM,KAAK8V,wBAAL,CAA8Bzc,SAA9B,CAAN;;AACA,UAAI;AACF,cAAM,KAAKgC,eAAL,CAAqB0a,UAArB,CAAgC;AAAEpa,UAAAA,KAAK,EAAE,IAAT;AAAe4P,UAAAA,SAAS,EAAE;AAAEwI,YAAAA,OAAO,EAAE;AAAX,WAA1B;AAA+C1a,UAAAA,SAA/C;AAA0D2G,UAAAA,UAA1D;AAAsE4R,UAAAA,eAAe,EAAEA;AAAvF,SAAhC,CAAN;AACD,OAFD,CAEE,OAAO7X,GAAP,EAAY;AACZ,cAAM,IAAI+a,eAAJ,CAAoBxU,oBAAkB,CAAE,GAAE,KAAK2U,MAAL,CAAYtW,IAAK,KAAI5E,GAAG,CAACwE,OAAQ,EAArC,EAAwCxE,GAAxC,CAAtC,EAAoFiG,UAApF,CAAN;AACD;;AACD,UAAIA,UAAU,CAACjG,GAAX,IAAkBV,SAAS,CAAC6I,IAAV,CAAetJ,YAAY,CAAC9B,uCAA5B,CAAtB,EAA4F;AAC1F,YAAIkf,iBAAiB,GAAG,IAAxB;;AACA,YAAI;AACF,gBAAM,KAAK3a,eAAL,CAAqB4a,cAArB,CAAoC;AAAEta,YAAAA,KAAK,EAAE,IAAT;AAAe4P,YAAAA,SAAS,EAAE;AAAEwI,cAAAA,OAAO,EAAE;AAAX,aAA1B;AAA+C1a,YAAAA,SAA/C;AAA0D2G,YAAAA,UAA1D;AAAsE4R,YAAAA,eAAe,EAAEA;AAAvF,WAApC,CAAN;AACD,SAFD,CAEE,OAAO7X,GAAP,EAAY;AACZic,UAAAA,iBAAiB,GAAG1V,oBAAkB,CAAE,GAAE,KAAK2U,MAAL,CAAYtW,IAAK,KAAI5E,GAAG,CAACwE,OAAQ,EAArC,EAAwCxE,GAAxC,CAAtC;AACD;;AACD,YAAIic,iBAAJ,EAAuB;AACrB,gBAAMjc,GAAG,GAAGiG,UAAU,CAACjG,GAAvB;AACAiG,UAAAA,UAAU,CAACjG,GAAX,GAAiBwG,qBAAmB,CAAC,CAACP,UAAU,CAACjG,GAAZ,EAAiBic,iBAAjB,CAAD,EAAsC,EAAtC,CAApC;AACAhW,UAAAA,UAAU,CAACjG,GAAX,CAAeyE,OAAf,CAAuBuB,KAAvB,GAA+BhG,GAAG,CAACyE,OAAJ,CAAYuB,KAA3C;AACAC,UAAAA,UAAU,CAACjG,GAAX,CAAeyE,OAAf,CAAuBwB,UAAvB,GAAoCjG,GAAG,CAACyE,OAAJ,CAAYwB,UAAhD;AACD;;AACD,cAAM,IAAI8U,eAAJ,CAAoB9U,UAAU,CAACjG,GAA/B,EAAoCiG,UAApC,CAAN;AACD,OAdD,MAcO,IAAIA,UAAU,CAACjG,GAAf,EAAoB;AACzB,cAAM,IAAI+a,eAAJ,CAAoB9U,UAAU,CAACjG,GAA/B,EAAoCiG,UAApC,CAAN;AACD;;AACD,UAAI;AACF,cAAM,KAAK3E,eAAL,CAAqB4a,cAArB,CAAoC;AAAEta,UAAAA,KAAK,EAAE,IAAT;AAAe4P,UAAAA,SAAS,EAAE;AAAEwI,YAAAA,OAAO,EAAE;AAAX,WAA1B;AAA+C1a,UAAAA,SAA/C;AAA0D2G,UAAAA,UAA1D;AAAsE4R,UAAAA,eAAe,EAAEA;AAAvF,SAApC,CAAN;AACD,OAFD,CAEE,OAAO7X,GAAP,EAAY;AACZiG,QAAAA,UAAU,CAACjG,GAAX,GAAiBuG,oBAAkB,CAAE,GAAE,KAAK2U,MAAL,CAAYtW,IAAK,KAAI5E,GAAG,CAACwE,OAAQ,EAArC,EAAwCxE,GAAxC,CAAnC;AACA,cAAM,IAAI+a,eAAJ,CAAoB9U,UAAU,CAACjG,GAA/B,EAAoCiG,UAApC,CAAN;AACD;;AACD,aAAOA,UAAP;AACD,KA3CD,SA2CU;AACR3G,MAAAA,SAAS,CAAC6c,YAAV,CAAuBC,IAAvB,CAA4BC,MAAM,CAACjY,kBAAnC,EAAuD9E,SAAvD,EAAkE2G,UAAlE;AACD;AACF;;AAEoB,QAAf6V,eAAe,CAAExc,SAAF,EAAauY,eAAb,EAA8B5R,UAA9B,EAA0C;AAC7D,UAAMqW,eAAe,GAAG,EAAxB;;AACA,QAAI;AACF,UAAIC,eAAe,GAAG,IAAtB;AACA,UAAI5Z,MAAM,GAAG,IAAb;AACA,UAAI6Z,cAAc,GAAG,IAArB;AACA,UAAIC,kBAAkB,GAAG,KAAzB;;AACA,WAAK,IAAIrJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,YAAL,CAAkBnN,MAAtC,EAA8CkN,CAAC,EAA/C,EAAmD;AACjD,cAAM5B,SAAS,GAAG,KAAK6B,YAAL,CAAkBD,CAAlB,CAAlB;AACA,cAAMsJ,gBAAgB,GAAGtJ,CAAzB;AACAqJ,QAAAA,kBAAkB,GAAG,KAArB;AACA,cAAMtW,cAAc,GAAG,IAAIuU,cAAJ,CAAmB;AACxChV,UAAAA,QAAQ,EAAE,IAAI6J,mBAAJ,CAAsBiC,SAAtB,CAD8B;AAExC7L,UAAAA,GAAG,EAAE6L,SAAS,CAAC7L,GAFyB;AAGxC8J,UAAAA,QAAQ,EAAE+B,SAAS,CAAC/B,QAHoB;AAIxC3J,UAAAA,MAAM,EAAE,IAJgC;AAKxC6U,UAAAA,SAAS,EAAE,IAAI1G,IAAJ,EAL6B;AAMxC2G,UAAAA,OAAO,EAAE,IAN+B;AAOxCC,UAAAA,QAAQ,EAAE,IAP8B;AAQxCC,UAAAA,MAAM,EAAE,IARgC;AASxC9a,UAAAA,GAAG,EAAE;AATmC,SAAnB,CAAvB;;AAYA,YAAI;AACF,cAAIwR,SAAS,CAAChC,MAAV,KAAqB,OAArB,IAAgCgC,SAAS,CAAChC,MAAV,KAAqB,KAAzD,EAAgE;AAC9D;AACD,WAFD,MAEO,IAAIgC,SAAS,CAAChC,MAAV,KAAqB,IAAzB,EAA+B;AACpC,kBAAMmN,KAAK,GAAG,IAAIpN,mBAAJ,CAAsBiC,SAAtB,CAAd;AACAmL,YAAAA,KAAK,CAACta,WAAN,GAAoBua,eAAe,CAAChF,KAAhB,CAAsBtY,SAAtB,EAAiCuY,eAAjC,EAAkD8E,KAAK,CAACta,WAAxD,EAAqEsa,KAArE,CAApB,CAFoC;;;AAKpC,gBAAI/Q,OAAO,CAAC6K,GAAR,CAAYoG,sCAAhB,EAAwD;;;AAGtDrL,cAAAA,SAAS,CAACnP,WAAV,GAAwBsa,KAAK,CAACta,WAA9B;AACD;;AACD8D,YAAAA,cAAc,CAACL,MAAf,GAAwB6W,KAAxB;;AAEA,gBAAI;AACF,oBAAM,KAAKrb,eAAL,CAAqBwb,YAArB,CAAkC;AAAElb,gBAAAA,KAAK,EAAE,IAAT;AAAe4P,gBAAAA,SAAf;AAA0BlS,gBAAAA,SAA1B;AAAqCuY,gBAAAA,eAArC;AAAsD8E,gBAAAA,KAAtD;AAA6D1W,gBAAAA,UAA7D;AAAyEE,gBAAAA;AAAzE,eAAlC,CAAN;AACA,oBAAM,KAAK7E,eAAL,CAAqByb,SAArB,CAA+B;AAAEnb,gBAAAA,KAAK,EAAE,IAAT;AAAe4P,gBAAAA,SAAf;AAA0BlS,gBAAAA,SAA1B;AAAqCuY,gBAAAA,eAArC;AAAsD8E,gBAAAA,KAAtD;AAA6D1W,gBAAAA,UAA7D;AAAyEE,gBAAAA;AAAzE,eAA/B,CAAN;AACA,oBAAM,KAAK7E,eAAL,CAAqB0b,WAArB,CAAiC;AAAEpb,gBAAAA,KAAK,EAAE,IAAT;AAAe4P,gBAAAA,SAAf;AAA0BlS,gBAAAA,SAA1B;AAAqCuY,gBAAAA,eAArC;AAAsD8E,gBAAAA,KAAtD;AAA6D1W,gBAAAA,UAA7D;AAAyEE,gBAAAA;AAAzE,eAAjC,CAAN;AAEA,oBAAM,KAAK4V,wBAAL,CAA8Bzc,SAA9B,CAAN;;AAEA,oBAAM2d,OAAO,GAAG/a,0BAAC,CAACgb,IAAF,CAAO1M,aAAa,CAACmM,KAAD,CAApB,EAA6B,CAAC,YAAD,CAA7B,CAAhB;;AACAnV,cAAAA,OAAK,CAAE,GAAE,KAAK0T,MAAL,CAAYtW,IAAK,IAAG4M,SAAS,CAACwI,OAAQ,kEAAiEpU,IAAI,CAACC,SAAL,CAAeoX,OAAf,EAAwB,IAAxB,EAA8B,CAA9B,CAAiC,EAA5I,CAAL;AACA,oBAAM,IAAIvd,OAAJ,CAAYC,OAAO,IAAI;AAC3B,oBAAIL,SAAS,CAAC6I,IAAV,CAAevR,sBAAf,IAAyC+lB,KAAK,CAACta,WAA/C,IAA8Dsa,KAAK,CAACta,WAAN,CAAkB6D,MAApF,EAA4F;AAC1FiX,kBAAAA,UAAU,CAAC,MAAMxd,OAAO,EAAd,EAAkBL,SAAS,CAAC6I,IAAV,CAAevR,sBAAf,GAAwC+lB,KAAK,CAACta,WAAN,CAAkB6D,MAA5E,CAAV;AACD,iBAFD,MAEO;AACLvG,kBAAAA,OAAO;AACR;AACF,eANK,CAAN;AAOA4c,cAAAA,eAAe,GAAG/K,SAAlB;AACArL,cAAAA,cAAc,CAAC0U,QAAf,GAA0B,IAAI5G,IAAJ,EAA1B;;AACA,kBAAI,CAAC/R,0BAAC,CAACkb,MAAF,CAAST,KAAK,CAACta,WAAf,CAAD,IAAgCsa,KAAK,CAAC7O,UAAtC,IAAqD6O,KAAK,CAACnU,UAAN,IAAoBmU,KAAK,CAACnU,UAAN,CAAiBtC,MAA1F,IAAsGyW,KAAK,CAACrU,UAAN,IAAoBqU,KAAK,CAACrU,UAAN,CAAiBpC,MAA/I,EAAwJ;AACtJ,oBAAI;AACF5D,kBAAAA,MAAM,CAACC,MAAP,CAAcoa,KAAd,EAAqB;AAAEzB,oBAAAA,MAAM,EAAE,KAAKA,MAAf;AAAuB7H,oBAAAA,YAAY,EAAE,KAAKA,YAA1C;AAAwDqJ,oBAAAA,gBAAxD;AAA0E7E,oBAAAA;AAA1E,mBAArB;AACA,wBAAMvY,SAAS,CAAC8C,QAAV,CAAmBua,KAAnB,CAAN;AACD,iBAHD,SAGU;AACR,yBAAOA,KAAK,CAACzB,MAAb;AACA,yBAAOyB,KAAK,CAACtJ,YAAb;AACA,yBAAOsJ,KAAK,CAAC9E,eAAb;AACD;;AAED1R,gBAAAA,cAAc,CAAC2U,MAAf,GAAwB,IAAI7G,IAAJ,EAAxB;AACA,sBAAM,KAAK3S,eAAL,CAAqB+b,OAArB,CAA6B;AAAEzb,kBAAAA,KAAK,EAAE,IAAT;AAAe4P,kBAAAA,SAAf;AAA0BlS,kBAAAA,SAA1B;AAAqCuY,kBAAAA,eAArC;AAAsD8E,kBAAAA,KAAtD;AAA6D1W,kBAAAA,UAA7D;AAAyEE,kBAAAA;AAAzE,iBAA7B,CAAN;AACA;AACD,eAbD,MAaO;AACLqB,gBAAAA,OAAK,CAAE,GAAE,KAAK0T,MAAL,CAAYtW,IAAK,IAAG4M,SAAS,CAACwI,OAAQ,qEAAoEnB,wBAAI,CAACC,OAAL,CAAatH,SAAb,CAAwB,EAAtI,CAAL;AACArL,gBAAAA,cAAc,CAAC2U,MAAf,GAAwB,IAAI7G,IAAJ,EAAxB;AACA,sBAAM,KAAK3S,eAAL,CAAqB+b,OAArB,CAA6B;AAAEzb,kBAAAA,KAAK,EAAE,IAAT;AAAe4P,kBAAAA,SAAf;AAA0BlS,kBAAAA,SAA1B;AAAqCuY,kBAAAA,eAArC;AAAsD8E,kBAAAA,KAAtD;AAA6D1W,kBAAAA,UAA7D;AAAyEE,kBAAAA;AAAzE,iBAA7B,CAAN;AACA;AACD;AACF,aArCD,CAqCE,OAAOnG,GAAP,EAAY;AACZmG,cAAAA,cAAc,CAAC2U,MAAf,GAAwB,IAAI7G,IAAJ,EAAxB;AAEA,oBAAMqJ,OAAO,GAAG/W,oBAAkB,CAAE,GAAE,KAAK2U,MAAL,CAAYtW,IAAK,IAAG4M,SAAS,CAACwI,OAAQ,4BAA2Bha,GAAG,CAACwE,OAAJ,IAAexE,GAAI,EAAxF,EAA2FA,GAA3F,CAAlC;AACAwH,cAAAA,OAAK,CAAC8V,OAAD,CAAL;;AACA,kBAAI;AACF,qBAAKhc,eAAL,CAAqBG,IAArB,IAA6B,KAAKH,eAAL,CAAqBG,IAArB,CAA0B6b,OAA1B,CAA7B;AACD,eAFD,CAEE,OAAOA,OAAP,EAAgB;;AAElB,oBAAMA,OAAN;AACD;AACF,WA5DM,MA4DA,IAAI9L,SAAS,CAAChC,MAAV,KAAqB,KAAzB,EAAgC;AACrC,gBAAIgN,cAAJ,EAAoB;AAClB7Z,cAAAA,MAAM,GAAG,IAAT;AACD,aAFD,MAEO;AACL6Z,cAAAA,cAAc,GAAG,IAAjB;AACD;;AAED,gBAAI;AACFhV,cAAAA,OAAK,CAAE,GAAE,KAAK0T,MAAL,CAAYtW,IAAK,iBAAgB4M,SAAS,CAAC/Q,OAAV,IAAqB,EAAG,EAA7D,CAAL;AACA,oBAAM,KAAKa,eAAL,CAAqBic,UAArB,CAAgC;AAAE3b,gBAAAA,KAAK,EAAE,IAAT;AAAe4P,gBAAAA,SAAf;AAA0BlS,gBAAAA,SAA1B;AAAqCuY,gBAAAA,eAArC;AAAsD5R,gBAAAA,UAAtD;AAAkEE,gBAAAA;AAAlE,eAAhC,CAAN;AACAA,cAAAA,cAAc,CAAC0U,QAAf,GAA0B,IAAI5G,IAAJ,EAA1B;;AACA,kBAAI,CAACtR,MAAL,EAAa;AACXA,gBAAAA,MAAM,GAAG,MAAMrD,SAAS,CAACkD,WAAV,CAAsBgP,SAAS,CAAC/Q,OAAhC,CAAf;AACD;;AACD0F,cAAAA,cAAc,CAAC2U,MAAf,GAAwB,IAAI7G,IAAJ,EAAxB;AACA9N,cAAAA,cAAc,CAACL,MAAf,GAAwB,IAAIyJ,mBAAJ,CAAsB5M,MAAtB,CAAxB;;AAEA,oBAAMsa,OAAO,GAAG/a,0BAAC,CAACgb,IAAF,CAAO1M,aAAa,CAAC7N,MAAD,CAApB,EAA8B,CAAC,YAAD,CAA9B,CAAhB;;AACA6E,cAAAA,OAAK,CAAE,GAAE,KAAK0T,MAAL,CAAYtW,IAAK,iEAAgEgB,IAAI,CAACC,SAAL,CAAeoX,OAAf,EAAwB,IAAxB,EAA8B,CAA9B,CAAiC,EAAtH,CAAL;AACD,aAZD,CAYE,OAAOjd,GAAP,EAAY;AACZmG,cAAAA,cAAc,CAAC2U,MAAf,GAAwB,IAAI7G,IAAJ,EAAxB;AAEA,oBAAMqJ,OAAO,GAAG/W,oBAAkB,CAAE,GAAE,KAAK2U,MAAL,CAAYtW,IAAK,IAAG4M,SAAS,CAACwI,OAAQ,6BAA4Bha,GAAG,CAACwE,OAAQ,EAAlF,EAAqFxE,GAArF,CAAlC;AACAwH,cAAAA,OAAK,CAAC8V,OAAD,CAAL;;AACA,kBAAI;AACF,qBAAKhc,eAAL,CAAqBG,IAArB,IAA6B,KAAKH,eAAL,CAAqBG,IAArB,CAA0B6b,OAA1B,EAAmCf,eAAnC,CAA7B;AACD,eAFD,CAEE,OAAOe,OAAP,EAAgB;;AAElB,oBAAMA,OAAN;AACD;;AAED,gBAAI;AACF,oBAAME,QAAQ,GAAG,MAAM,KAAKlc,eAAL,CAAqBmc,YAArB,CAAkC;AAAE7b,gBAAAA,KAAK,EAAE,IAAT;AAAe4P,gBAAAA,SAAf;AAA0BlS,gBAAAA,SAA1B;AAAqCuY,gBAAAA,eAArC;AAAsDlV,gBAAAA,MAAtD;AAA8DsD,gBAAAA,UAA9D;AAA0EE,gBAAAA;AAA1E,eAAlC,CAAvB;;AACA,kBAAIqX,QAAJ,EAAc;AACZrX,gBAAAA,cAAc,CAACL,MAAf,GAAwB,IAAIyJ,mBAAJ,CAAsB5M,MAAtB,CAAxB;;AAEA,sBAAMsa,OAAO,GAAG/a,0BAAC,CAACgb,IAAF,CAAO1M,aAAa,CAAC7N,MAAD,CAApB,EAA8B,CAAC,YAAD,CAA9B,CAAhB;;AACA6E,gBAAAA,OAAK,CAAE,GAAE,KAAK0T,MAAL,CAAYtW,IAAK,qEAAoEgB,IAAI,CAACC,SAAL,CAAeoX,OAAf,EAAwB,IAAxB,EAA8B,CAA9B,CAAiC,EAA1H,CAAL;AACD;AACF,aARD,CAQE,OAAOjd,GAAP,EAAY;AACZ,oBAAMsd,OAAO,GAAG/W,oBAAkB,CAAE,GAAE,KAAK2U,MAAL,CAAYtW,IAAK,IAAG4M,SAAS,CAACwI,OAAQ,0BAAyBha,GAAG,CAACwE,OAAJ,IAAexE,GAAI,EAAtF,EAAyFA,GAAzF,CAAlC;AACAwH,cAAAA,OAAK,CAAC8V,OAAD,CAAL;;AACA,kBAAI;AACF,qBAAKhc,eAAL,CAAqBG,IAArB,IAA6B,KAAKH,eAAL,CAAqBG,IAArB,CAA0B6b,OAA1B,EAAmCf,eAAnC,CAA7B;AACD,eAFD,CAEE,OAAOe,OAAP,EAAgB;;AAElB,oBAAMA,OAAN;AACD;;AAED,gBAAI,CAAC3a,MAAD,IAAY,CAACA,MAAM,CAACN,WAAR,IAAuB,CAACM,MAAM,CAACuL,KAA/B,IAAwC,CAACvL,MAAM,CAACqL,OAAhD,IAA2D,CAACrL,MAAM,CAAC0L,KAAnE,IAA4E,CAAC1L,MAAM,CAACmL,UAApF,IAAkG,CAACnL,MAAM,CAAC+M,GAA1H,EAAgI;AAC9H,oBAAM4N,OAAO,GAAG,IAAIhZ,aAAJ,CAAiB,GAAE,KAAK4W,MAAL,CAAYtW,IAAK,IAAG4M,SAAS,CAACwI,OAAQ,oBAAzD,CAAhB;AACAxS,cAAAA,OAAK,CAAC8V,OAAD,CAAL;;AACA,kBAAI;AACF,qBAAKhc,eAAL,CAAqBG,IAArB,IAA6B,KAAKH,eAAL,CAAqBG,IAArB,CAA0B6b,OAA1B,EAAmCf,eAAnC,CAA7B;AACD,eAFD,CAEE,OAAOe,OAAP,EAAgB;;AAElB,oBAAMA,OAAN;AACD;;AACD,kBAAMI,iCAAiC,GAAI1d,GAAD,IAAS;AACjD,oBAAM2d,aAAa,GAAG,KAAKtK,YAAL,CAAkBD,CAAC,GAAG,CAAtB,CAAtB;;AACA,kBAAI5B,SAAS,CAAC/B,QAAV,IAAsBkO,aAAtB,IAAuCA,aAAa,CAACnO,MAAd,KAAyB,KAApE,EAA2E;AACzEgN,gBAAAA,cAAc,GAAG,KAAjB;AACAC,gBAAAA,kBAAkB,GAAG,IAArB;AACA,uBAAO,IAAP;AACD;;AACD,kBAAInd,SAAS,CAAC6I,IAAV,CAAetJ,YAAY,CAAC9B,uCAA5B,CAAJ,EAA0E;AACxE6gB,gBAAAA,YAAY,CAACne,IAAb,CAAkBO,GAAlB;AACA,uBAAO,KAAP;AACD,eAHD,MAGO;AACL,sBAAMA,GAAN;AACD;AACF,aAbD;;AAcA,kBAAM4d,YAAY,GAAG,EAArB;AACA,kBAAMC,qBAAqB,GAAG,EAA9B;;AACA,gBAAIrM,SAAS,CAACnP,WAAd,EAA2B;AACzB,oBAAMyb,QAAQ,GAAG,KAAKC,mBAAL,CAAyBze,SAAzB,EAAoCqD,MAAM,CAACN,WAA3C,CAAjB;;AACA,oBAAMA,WAAW,GAAG,KAAK0b,mBAAL,CAAyBze,SAAzB,EAAoCkS,SAAS,CAACnP,WAA9C,CAApB;;AACAua,cAAAA,eAAe,CAACjE,IAAhB,CAAqBrZ,SAArB,EAAgCue,qBAAhC,EAAuDC,QAAvD,EAAiEzb,WAAjE,EAA8E,KAAKf,eAAnF;;AACA,oBAAM0c,OAAO,GAAG,KAAKC,yBAAL,CAA+B3e,SAA/B,EAA0CgD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBsb,qBAAlB,EAAyChG,eAAzC,CAA1C,EAAqGxV,WAArG,EAAkHM,MAAlH,CAAhB;;AACA,kBAAI6O,SAAS,CAAC7L,GAAd,EAAmB;AACjB,oBAAI;AACF,uBAAKrE,eAAL,CAAqB4c,oBAArB,CAA0CJ,QAA1C,EAAoDE,OAApD,EAA8D,GAAE,KAAK9C,MAAL,CAAYtW,IAAK,IAAG4M,SAAS,CAACwI,OAAQ,EAAtG,EAAyGuC,eAAzG;AACD,iBAFD,CAEE,OAAOvc,GAAP,EAAY;AACZ,sBAAI0d,iCAAiC,CAAC1d,GAAD,CAArC,EAA4C;AAC1C;AACD;AACF;AACF,eARD,MAQO;AACL,oBAAI;AACF,uBAAKsB,eAAL,CAAqBC,iBAArB,CAAuCuc,QAAvC,EAAiDE,OAAjD,EAA2D,GAAE,KAAK9C,MAAL,CAAYtW,IAAK,IAAG4M,SAAS,CAACwI,OAAQ,EAAnG,EAAsGuC,eAAtG;AACD,iBAFD,CAEE,OAAOvc,GAAP,EAAY;AACZ,sBAAI0d,iCAAiC,CAAC1d,GAAD,CAArC,EAA4C;AAC1C;AACD;AACF;AACF;AACF,aAtBD,MAsBO,IAAIwR,SAAS,CAAC1D,UAAd,EAA0B;AAC/B,kBAAI;AACF,qBAAKqQ,cAAL,CAAoB7e,SAApB,EAA+BuY,eAA/B,EAAgDrG,SAAhD,EAA2D7O,MAAM,CAACmL,UAAlE,EAA8E0D,SAAS,CAAC1D,UAAxF,EAAoGnL,MAApG;AACD,eAFD,CAEE,OAAO3C,GAAP,EAAY;AACZ,oBAAI0d,iCAAiC,CAAC1d,GAAD,CAArC,EAA4C;AAC1C;AACD;AACF;AACF;;AACDsC,YAAAA,MAAM,CAACC,MAAP,CAAcsV,eAAd,EAA+BgG,qBAA/B;;AACA,gBAAI;AACF,oBAAM,KAAKvc,eAAL,CAAqB8c,eAArB,CAAqC;AAAExc,gBAAAA,KAAK,EAAE,IAAT;AAAe4P,gBAAAA,SAAf;AAA0BlS,gBAAAA,SAA1B;AAAqCuY,gBAAAA,eAArC;AAAsDlV,gBAAAA,MAAtD;AAA8DsD,gBAAAA,UAA9D;AAA0EE,gBAAAA;AAA1E,eAArC,CAAN;AACA,oBAAM,KAAK7E,eAAL,CAAqB+c,QAArB,CAA8B;AAAEzc,gBAAAA,KAAK,EAAE,IAAT;AAAe4P,gBAAAA,SAAf;AAA0BlS,gBAAAA,SAA1B;AAAqCuY,gBAAAA,eAArC;AAAsDlV,gBAAAA,MAAtD;AAA8DsD,gBAAAA,UAA9D;AAA0EE,gBAAAA;AAA1E,eAA9B,CAAN;AACD,aAHD,CAGE,OAAOnG,GAAP,EAAY;AACZ,oBAAM2d,aAAa,GAAG,KAAKtK,YAAL,CAAkBD,CAAC,GAAG,CAAtB,CAAtB;;AACA,kBAAI5B,SAAS,CAAC/B,QAAV,IAAsBkO,aAAtB,IAAuCA,aAAa,CAACnO,MAAd,KAAyB,KAApE,EAA2E;AACzEgN,gBAAAA,cAAc,GAAG,KAAjB;AACAC,gBAAAA,kBAAkB,GAAG,IAArB;AACA;AACD;;AACD,oBAAMa,OAAO,GAAG/W,oBAAkB,CAAE,GAAE,KAAK2U,MAAL,CAAYtW,IAAK,IAAG4M,SAAS,CAACwI,OAAQ,uBAAsBha,GAAG,CAACwE,OAAJ,IAAexE,GAAI,EAAnF,EAAsFA,GAAtF,CAAlC;AACAwH,cAAAA,OAAK,CAAC8V,OAAD,CAAL;;AACA,kBAAI;AACF,qBAAKhc,eAAL,CAAqBG,IAArB,IAA6B,KAAKH,eAAL,CAAqBG,IAArB,CAA0B6b,OAA1B,EAAmCf,eAAnC,CAA7B;AACD,eAFD,CAEE,OAAOe,OAAP,EAAgB;;AAElB,kBAAIhe,SAAS,CAAC6I,IAAV,CAAetJ,YAAY,CAAC9B,uCAA5B,KAAwEiD,GAAG,YAAYsE,aAA3F,EAAwG;AACtGsZ,gBAAAA,YAAY,CAACne,IAAb,CAAkBO,GAAlB;AACD,eAFD,MAEO;AACL,sBAAMsd,OAAN;AACD;AACF;;AACD,gBAAIhe,SAAS,CAAC6I,IAAV,CAAetJ,YAAY,CAAC9B,uCAA5B,CAAJ,EAA0E;AACxE,kBAAI6gB,YAAY,CAAC1X,MAAb,GAAsB,CAA1B,EAA6B;AAC3B,sBAAMM,qBAAmB,CAACoX,YAAD,EAAe,EAAf,CAAzB;AACD;AACF,aAJD,MAIO;AACL,kBAAI,CAACzX,cAAc,CAACyU,OAApB,EAA6B;AAC3B;AACD;AACF;AACF,WAzIM,MAyIA;AACL,kBAAM0C,OAAO,GAAG,IAAIhZ,aAAJ,CAAiB,GAAE,KAAK4W,MAAL,CAAYtW,IAAK,IAAG4M,SAAS,CAACwI,OAAQ,sBAAqBnB,wBAAI,CAACC,OAAL,CAAatH,SAAS,CAAChC,MAAvB,CAA+B,EAA7G,CAAhB;AACAhI,YAAAA,OAAK,CAAC8V,OAAD,CAAL;;AACA,gBAAI;AACF,mBAAKhc,eAAL,CAAqBG,IAArB,IAA6B,KAAKH,eAAL,CAAqBG,IAArB,CAA0B6b,OAA1B,CAA7B;AACD,aAFD,CAEE,OAAOA,OAAP,EAAgB;;AAElB,kBAAMA,OAAN;AACD;AACF,SAjND,CAiNE,OAAOtd,GAAP,EAAY;AACZ,cAAIuc,eAAJ,EAAqB;AACnB,gBAAIvc,GAAG,YAAYsE,aAAf,IAA8BtE,GAAG,CAACyE,OAAtC,EAA+C;AAC7CzE,cAAAA,GAAG,CAACyE,OAAJ,CAAYuB,KAAZ,GAAoB,IAAI+T,WAAJ,CAAcwC,eAAd,CAApB;AACAvc,cAAAA,GAAG,CAACyE,OAAJ,CAAYwB,UAAZ,GAAyB,CAAC,GAAGqW,eAAJ,EAAqB,EAAE,GAAGnW;AAAL,eAArB,CAAzB;AACD,aAHD,MAGO;AACLnG,cAAAA,GAAG,CAACgG,KAAJ,GAAY,IAAI+T,WAAJ,CAAcwC,eAAd,CAAZ;AACAvc,cAAAA,GAAG,CAACiG,UAAJ,GAAiB,CAAC,GAAGqW,eAAJ,EAAqB,EAAE,GAAGnW;AAAL,eAArB,CAAjB;AACD;AACF;;AACDA,UAAAA,cAAc,CAACnG,GAAf,GAAqBA,GAArB;AACA,gBAAMA,GAAN;AACD,SA7ND,SA6NU;AACR,cAAIwR,SAAS,CAAChC,MAAV,KAAqB,OAArB,IAAgCgC,SAAS,CAAChC,MAAV,KAAqB,KAArD,IAA8D,CAACiN,kBAAnE,EAAuF;AACrFtW,YAAAA,cAAc,CAAC0R,eAAf,GAAiCvV,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBsV,eAAlB,CAAjC;AACA1R,YAAAA,cAAc,CAACyU,OAAf,GAAyB,IAAI3G,IAAJ,EAAzB;AACAqI,YAAAA,eAAe,CAAC7c,IAAhB,CAAqB0G,cAArB;AACD;AACF;AACF;AACF,KA1PD,CA0PE,OAAOnG,GAAP,EAAY;AACZiG,MAAAA,UAAU,CAACjG,GAAX,GAAiBA,GAAjB;AACD,KA5PD,SA4PU;AACRiG,MAAAA,UAAU,CAACoU,KAAX,GAAmBiC,eAAe,CAAChM,MAAhB,CAAuBH,CAAC,IAAIA,CAA5B,CAAnB;AACAlK,MAAAA,UAAU,CAAC4R,eAAX,GAA6BA,eAA7B;AACA5R,MAAAA,UAAU,CAACsU,QAAX,GAAsB,IAAItG,IAAJ,EAAtB;AACD;AACF;;AAEDkK,EAAAA,cAAc,CAAE7e,SAAF,EAAauY,eAAb,EAA8BrG,SAA9B,EAAyCxK,MAAzC,EAAiDtB,QAAjD,EAA2D/C,MAA3D,EAAmE;AAC/E,QAAI+C,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAKsL,SAAtC,EAAiD;;AAEjD,QAAI9O,0BAAC,CAACgD,OAAF,CAAUQ,QAAV,CAAJ,EAAyB;AACvB,UAAI,CAACxD,0BAAC,CAACgD,OAAF,CAAU8B,MAAV,CAAL,EAAwB;AACtB,cAAM,IAAI1C,aAAJ,CAAiB,GAAE,KAAK4W,MAAL,CAAYtW,IAAK,IAAG4M,SAAS,CAACwI,OAAQ,uCAAsChT,MAAO,GAAtG,CAAN;AACD;;AACD,UAAItB,QAAQ,CAACQ,MAAT,KAAoBc,MAAM,CAACd,MAA/B,EAAuC;AACrC,cAAM,IAAI5B,aAAJ,CAAiB,GAAE,KAAK4W,MAAL,CAAYtW,IAAK,IAAG4M,SAAS,CAACwI,OAAQ,wCAAuCtU,QAAQ,CAACQ,MAAO,SAAQc,MAAM,CAACd,MAAO,EAAtI,CAAN;AACD;;AACD,WAAK,IAAIkN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG1N,QAAQ,CAACQ,MAA7B,EAAqCkN,CAAC,EAAtC,EAA0C;AACxC,aAAK+K,cAAL,CAAoB7e,SAApB,EAA+BuY,eAA/B,EAAgDrG,SAAhD,EAA2DxK,MAAM,CAACoM,CAAD,CAAjE,EAAsE1N,QAAQ,CAAC0N,CAAD,CAA9E;AACD;AACF,KAVD,MAUO,IAAIlR,0BAAC,CAACgI,QAAF,CAAWxE,QAAX,CAAJ,EAA0B;AAC/BxD,MAAAA,0BAAC,CAACoc,MAAF,CAAS5Y,QAAT,EAAmB,CAACoJ,KAAD,EAAQvE,GAAR,KAAgB;AACjC,YAAIjI,MAAM,CAACic,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCzX,MAArC,EAA6CuD,GAA7C,CAAJ,EAAuD;AACrD,eAAK4T,cAAL,CAAoB7e,SAApB,EAA+BuY,eAA/B,EAAgDrG,SAAhD,EAA2DxK,MAAM,CAACuD,GAAD,CAAjE,EAAwE7E,QAAQ,CAAC6E,GAAD,CAAhF;AACD,SAFD,MAEO;AACL,gBAAM,IAAIjG,aAAJ,CAAiB,GAAE,KAAK4W,MAAL,CAAYtW,IAAK,IAAG4M,SAAS,CAACwI,OAAQ,mBAAkBhT,MAAO,gCAA+BuD,GAAI,EAArH,CAAN;AACD;AACF,OAND;AAOD,KARM,MAQA;AACLqS,MAAAA,eAAe,CAACjE,IAAhB,CAAqBrZ,SAArB,EAAgCuY,eAAhC,EAAiD7Q,MAAjD,EAAyDtB,QAAzD,EAAmE,KAAKpE,eAAxE;;AACA,YAAMwc,QAAQ,GAAG,KAAKC,mBAAL,CAAyBze,SAAzB,EAAoC0H,MAApC,CAAjB;;AACA,YAAMgX,OAAO,GAAG,KAAKC,yBAAL,CAA+B3e,SAA/B,EAA0CuY,eAA1C,EAA2DnS,QAA3D,EAAqE/C,MAArE,CAAhB;;AACA,WAAKrB,eAAL,CAAqBC,iBAArB,CAAuCuc,QAAvC,EAAiDE,OAAjD,EAA2D,GAAE,KAAK9C,MAAL,CAAYtW,IAAK,IAAG4M,SAAS,CAACwI,OAAQ,EAAnG;AACD;AACF;;AAED0E,EAAAA,8BAA8B,CAAEpf,SAAF,EAAa;AACzC,UAAMqf,WAAW,GAAG,KAAKtL,YAAL,CAAkB/I,MAAlB,CAAyB,CAACoR,GAAD,EAAMlK,SAAN,KAAoB;AAC/D,UAAIxK,MAAM,GAAG0U,GAAb;AACA1U,MAAAA,MAAM,GAAGA,MAAM,CAACD,MAAP,CAAc,KAAK6X,2BAAL,CAAiCtf,SAAjC,EAA4CkS,SAAS,CAACnP,WAAtD,CAAd,CAAT;;AACA,YAAMwc,eAAe,GAAIC,cAAD,IAAoB;AAC1C,YAAIC,WAAW,GAAG,EAAlB;;AACA,aAAK,MAAMC,IAAX,IAAoBF,cAAc,IAAI,EAAtC,EAA2C;AACzC,eAAK,MAAM9G,GAAX,IAAmBgH,IAAI,CAACzV,IAAL,IAAa,EAAhC,EAAqC;AACnCwV,YAAAA,WAAW,GAAGA,WAAW,CAAChY,MAAZ,CAAmB,KAAK6X,2BAAL,CAAiCtf,SAAjC,EAA4C0Y,GAA5C,CAAnB,CAAd;AACD;AACF;;AACD,eAAO+G,WAAP;AACD,OARD;;AASA/X,MAAAA,MAAM,GAAGA,MAAM,CAACD,MAAP,CAAc8X,eAAe,CAACrN,SAAS,CAACpJ,SAAX,CAA7B,CAAT;AACApB,MAAAA,MAAM,GAAGA,MAAM,CAACD,MAAP,CAAc8X,eAAe,CAACrN,SAAS,CAAClJ,UAAX,CAA7B,CAAT;AACAtB,MAAAA,MAAM,GAAGA,MAAM,CAACD,MAAP,CAAc8X,eAAe,CAACrN,SAAS,CAAChJ,UAAX,CAA7B,CAAT;AAEA,aAAOxB,MAAP;AACD,KAjBmB,EAiBjB,EAjBiB,CAApB;AAmBA,WAAO,CAAC,GAAG,IAAIwL,GAAJ,CAAQmM,WAAR,CAAJ,CAAP;AACD;;AAEDC,EAAAA,2BAA2B,CAAEtf,SAAF,EAAasZ,SAAb,EAAwB;AACjD,QAAI,CAACA,SAAD,IAAc,CAACtZ,SAAS,CAAC6I,IAAV,CAAetJ,YAAY,CAAC/B,uBAA5B,CAAnB,EAAyE;AACvE,aAAO,EAAP;AACD;;AAED,UAAMkc,UAAU,GAAG,KAAK1X,eAAL,CAAqB2X,gBAArB,CAAsC;AAAEL,MAAAA;AAAF,KAAtC,CAAnB;AAEA,WAAOI,UAAU,CAAC1O,MAAX,CAAkB,CAACoR,GAAD,EAAMhW,QAAN,KAAmB;AAC1C,UAAIxD,0BAAC,CAAC6O,WAAF,CAAcrL,QAAd,CAAJ,EAA6B,OAAOgW,GAAP,CAA7B,KACK,OAAOA,GAAG,CAAC3U,MAAJ,CAAW6V,eAAe,CAAClE,eAAhB,CAAgC/R,UAAQ,CAACjB,QAAD,CAAxC,KAAuD,EAAlE,CAAP;AACN,KAHM,EAGJ,EAHI,CAAP;AAID;;AAEDqW,EAAAA,wBAAwB,CAAEzc,SAAF,EAAa;AACnC,QAAIA,SAAS,CAAC6I,IAAV,CAAenL,4BAAnB,EAAiD;AAC/C,YAAMiiB,WAAW,GAAG3f,SAAS,CAAC4f,YAAV,EAApB;;AACA,UAAID,WAAW,KAAK,CAApB,EAAuB;AACrB,cAAM,IAAI1a,KAAJ,CAAU,uCAAV,CAAN;AACD,OAFD,MAEO,IAAI0a,WAAW,GAAG,CAAlB,EAAqB;AAC1B,cAAM,IAAI1a,KAAJ,CAAW,mBAAkB0a,WAAY,8BAAzC,CAAN;AACD;AACF;AACF;;AAEDhB,EAAAA,yBAAyB,CAAE3e,SAAF,EAAauY,eAAb,EAA8Be,SAA9B,EAAyCjW,MAAzC,EAAiD;AACxE,UAAMqW,UAAU,GAAG,KAAK1X,eAAL,CAAqB2X,gBAArB,CAAsC;AAAEL,MAAAA;AAAF,KAAtC,CAAnB;AACA,UAAMuG,oBAAoB,GAAGnG,UAAU,CAACtS,GAAX,CAAeqJ,GAAG,IAAI,KAAKgO,mBAAL,CAAyBze,SAAzB,EAAoCyQ,GAApC,CAAtB,CAA7B;AACA,UAAMiO,OAAO,GAAGmB,oBAAoB,CAACzY,GAArB,CAAyBqJ,GAAG,IAAI6M,eAAe,CAAChF,KAAhB,CAAsBtY,SAAtB,EAAiCuY,eAAjC,EAAkD9H,GAAlD,EAAuDpN,MAAvD,CAAhC,CAAhB;AACA,WAAOqb,OAAP;AACD;;AAEDD,EAAAA,mBAAmB,CAAEze,SAAF,EAAayQ,GAAb,EAAkB;AACnC,WAAOD,aAAa,CAACC,GAAD,EAAM,CAAC,CAACzQ,SAAS,CAAC6I,IAAV,CAAetJ,YAAY,CAAChC,wBAA5B,CAAR,CAApB;AACD;;AAEDuiB,EAAAA,mBAAmB,GAAI;AACrB,UAAMC,yBAAyB,GAAI7N,SAAD,IAAe;AAC/C,UAAI,CAACA,SAAS,CAAClJ,UAAf,EAA2B;AACzB,eAAO,EAAP;AACD;;AAED,YAAMtB,MAAM,GAAG,EAAf;AACAwK,MAAAA,SAAS,CAAClJ,UAAV,CAAqBnD,OAArB,CAA8B4C,SAAD,IAAe;AAC1C,YAAIA,SAAS,CAACnD,IAAV,KAAmBqC,kBAAvB,EAA2C;AACzC,cAAIc,SAAS,CAACwB,IAAV,CAAerD,MAAf,KAA0B,CAA9B,EAAiC;AAC/B,kBAAM3B,KAAK,CAAC,wCAAD,CAAX;AACD;;AACDyC,UAAAA,MAAM,CAACvH,IAAP,CAAYsI,SAAZ;AACD;AACF,OAPD;AASA,aAAOf,MAAM,CAACN,GAAP,CAAY4Y,IAAD,IAAUA,IAAI,CAAC/V,IAAL,CAAU,CAAV,CAArB,CAAP;AACD,KAhBD;;AAkBA,UAAMgW,aAAa,GAAG,KAAK9a,OAAL,CAAa+a,gBAAb,EAAtB;;AAEA,UAAMC,kCAAkC,GAAG,CAACpM,YAAD,EAAeqM,aAAa,GAAG,EAA/B,EAAmC1Y,MAAM,GAAG,EAA5C,EAAgD2Y,cAAc,GAAG,IAAjE,KAA0E;AACnHtM,MAAAA,YAAY,CAAClO,OAAb,CAAsBqM,SAAD,IAAe;AAClC,YAAIoO,iBAAiB,GAAG,EAAxB;;AACA,YAAIpO,SAAS,CAAChC,MAAV,KAAqB,SAAzB,EAAoC;AAClC,cAAIgC,SAAS,CAAC/Q,OAAd,EAAuB;AACrBmf,YAAAA,iBAAiB,CAACngB,IAAlB,CAAuB+R,SAAS,CAAC/Q,OAAjC;AACD;;AACD,cAAI+Q,SAAS,CAACnP,WAAd,EAA2B;AACzBud,YAAAA,iBAAiB,GAAGA,iBAAiB,CAAC7Y,MAAlB,CAAyBsJ,0BAA0B,CAACmB,SAAS,CAACnP,WAAX,CAAnD,CAApB;AACD;AACF,SAPD,MAOO;AACLud,UAAAA,iBAAiB,GAAGP,yBAAyB,CAAC7N,SAAD,CAA7C;;AACA,cAAIoO,iBAAiB,CAAC1Z,MAAlB,KAA6B,CAA7B,IAAkCsL,SAAS,CAACyI,cAAV,EAAtC,EAAkE;AAChE,gBAAI,CAAC0F,cAAD,IAAoBnO,SAAS,CAAChC,MAAV,KAAqB,OAArB,IAAgCgC,SAAS,CAAChC,MAAV,KAAqB,KAA7E,EAAqF;;AAEnF,oBAAMqQ,WAAW,GAAGH,aAAa,CAACxZ,MAAd,KAAyB,CAAzB,GAA6B,EAA7B,GAAkCwZ,aAAa,CAAC3Z,IAAd,CAAmB,GAAnB,IAA0B,GAAhF;AACAiB,cAAAA,MAAM,CAACvH,IAAP,CAAY6C,MAAM,CAACC,MAAP,CAAc,IAAIwX,WAAJ,EAAd,EAA+BvI,SAA/B,EAA0C;AAAEwI,gBAAAA,OAAO,EAAG,GAAE6F,WAAY,GAAErO,SAAS,CAACwI,OAAQ;AAA9C,eAA1C,CAAZ;AACD;AACF;AACF;;AAED4F,QAAAA,iBAAiB,CAACza,OAAlB,CAA2B2a,gBAAD,IAAsB;AAC9C,gBAAMC,cAAc,GAAGL,aAAa,CAACzU,OAAd,CAAsB6U,gBAAtB,CAAvB;;AACA,cAAIC,cAAc,IAAI,CAAtB,EAAyB;AACvB,kBAAM,IAAIzb,aAAJ,CAAiB,0CAAyCwb,gBAAiB,wBAAuBJ,aAAa,CAAC7P,KAAd,CAAoB,CAApB,EAAuBkQ,cAAvB,EAAuCha,IAAvC,CAA4C,GAA5C,CAAiD,cAAa2Z,aAAa,CAAC3Z,IAAd,CAAmB,GAAnB,CAAwB,IAAxL,CAAN;AACD;;AACD,cAAI,CAACwZ,aAAD,IAAkBjd,MAAM,CAAC+H,IAAP,CAAYkV,aAAZ,EAA2BrZ,MAA3B,KAAsC,CAA5D,EAA+D;AAC7D,kBAAM,IAAI5B,aAAJ,CAAiB,qCAAoCwb,gBAAiB,gCAAtE,CAAN;AACD;;AACD,gBAAME,YAAY,GAAGT,aAAa,CAACO,gBAAD,CAAlC;;AACA,cAAI,CAACE,YAAL,EAAmB;AACjB,kBAAM,IAAI1b,aAAJ,CAAiB,qCAAoCwb,gBAAiB,+BAA8Bxd,MAAM,CAAC+H,IAAP,CAAYkV,aAAZ,EAA2BxZ,IAA3B,CAAgC,GAAhC,CAAqC,GAAzI,CAAN;AACD;;AACD0Z,UAAAA,kCAAkC,CAACO,YAAY,CAAC3M,YAAd,EAA4B,CAAC,GAAGqM,aAAJ,EAAmBI,gBAAnB,CAA5B,EAAkE9Y,MAAlE,EAA0E,IAA1E,CAAlC;;AACAQ,UAAAA,OAAK,CAAE,iBAAgBsY,gBAAiB,WAAnC,CAAL;AACD,SAdD;AAeD,OAnCD;AAqCA,aAAO9Y,MAAP;AACD,KAvCD;;AAyCA,SAAKqM,YAAL,GAAoBoM,kCAAkC,CAAC,KAAKpM,YAAN,EAAoB,EAApB,EAAwB,EAAxB,EAA4B,KAA5B,CAAtD;AACD;;AAjhBS;;AAohBZ,WACU,GAAG;AACTkG,eAAAA,aADS;AAETyB,SAAAA,OAFS;AAGTjB,aAAAA;AAHS,CADb;;ACzqBA,iBAAc,GAAG,MAAMkG,WAAN,CAAkB;AACjC9gB,EAAAA,WAAW,CAAEgJ,IAAF,EAAQ+X,OAAR,EAAiB;AAC1B,SAAKC,aAAL,GAAqB;AACnBC,MAAAA,OAAO,EAAEjY,IAAI,CAAE,SAAQ+X,OAAO,CAACG,WAAR,EAAsB,aAAhC,CAAJ,IAAqD,CAD3C;AAEnBC,MAAAA,MAAM,EAAEnY,IAAI,CAAE,SAAQ+X,OAAO,CAACG,WAAR,EAAsB,SAAhC,CAAJ,IAAiD,CAFtC;AAGnBE,MAAAA,UAAU,EAAEpY,IAAI,CAAE,SAAQ+X,OAAO,CAACG,WAAR,EAAsB,aAAhC,CAAJ,IAAqD;AAH9C,KAArB;AAKA,SAAKG,kBAAL,GAA0B,EAA1B;AACA,UAAMC,aAAa,GAAGtY,IAAI,CAAE,SAAQ+X,OAAO,CAACG,WAAR,EAAsB,iBAAhC,CAAJ,IAAyD,EAA/E;;AACA,QAAII,aAAJ,EAAmB;AACjB,UAAIve,0BAAC,CAACgD,OAAF,CAAUub,aAAV,CAAJ,EAA8B;AAC5BA,QAAAA,aAAa,CAACtb,OAAd,CAAsBub,CAAC,IAAI;AACzB,cAAIxe,0BAAC,CAACiI,QAAF,CAAWuW,CAAX,CAAJ,EAAmB,KAAKF,kBAAL,CAAwB/gB,IAAxB,CAA6B,IAAI4Y,MAAJ,CAAWqI,CAAX,EAAc,GAAd,CAA7B,EAAnB,KACK,KAAKF,kBAAL,CAAwB/gB,IAAxB,CAA6BihB,CAA7B;AACN,SAHD;AAID,OALD,MAKO,IAAIxe,0BAAC,CAACiI,QAAF,CAAWsW,aAAX,CAAJ,EAA+B;AACpC,aAAKD,kBAAL,CAAwB/gB,IAAxB,CAA6B,IAAI4Y,MAAJ,CAAWoI,aAAX,EAA0B,GAA1B,CAA7B;AACD,OAFM,MAEA;AACL,aAAKD,kBAAL,CAAwB/gB,IAAxB,CAA6BghB,aAA7B;AACD;AACF;AACF;;AAEDE,EAAAA,WAAW,CAAE3gB,GAAF,EAAO;AAChB,QAAI,CAACA,GAAD,IAAQ,KAAKwgB,kBAAL,CAAwBta,MAAxB,KAAmC,CAA/C,EAAkD,OAAO,KAAP;AAClD,UAAM0a,SAAS,GAAG/H,wBAAI,CAACC,OAAL,CAAa9Y,GAAb,CAAlB;;AACA,SAAK,MAAM6gB,EAAX,IAAiB,KAAKL,kBAAtB,EAA0C;AACxC,UAAII,SAAS,CAACpI,KAAV,CAAgBqI,EAAhB,CAAJ,EAAyB,OAAO,IAAP;AAC1B;;AACD,WAAO,KAAP;AACD;;AA9BgC,CAAnC;;ACDA,MAAM;AAAEla,EAAAA,QAAF;AAAY4J,EAAAA;AAAZ,IAAkChJ,MAAxC;;AAEA,MAAMuZ,UAAU,GAAIC,WAAD,IAAiB;AAClC,MAAI7e,0BAAC,CAAC6O,WAAF,CAAcgQ,WAAd,CAAJ,EAAgC,OAAO,EAAP;;AAChC,MAAI7e,0BAAC,CAACgI,QAAF,CAAW6W,WAAX,KAA2B7e,0BAAC,CAACoR,GAAF,CAAMyN,WAAN,EAAmB,aAAnB,CAA/B,EAAkE;AAChE,WAAOpa,QAAQ,CAACoa,WAAW,CAAC1e,WAAb,CAAR,IAAqC,EAA5C;AACD;;AACD,SAAOsE,QAAQ,CAACoa,WAAD,CAAf;AACD,CAND;;AAQA,MAAMC,MAAM,GAAIC,UAAD,IAAgB,CAACF,WAAD,EAAcnI,SAAd,KAA4B;AACzD,MAAI1W,0BAAC,CAAC6O,WAAF,CAAcgQ,WAAd,CAAJ,EAAgC,OAAO,KAAP;AAChCnI,EAAAA,SAAS,GAAGjS,QAAQ,CAACiS,SAAD,CAApB;AACAmI,EAAAA,WAAW,GAAGD,UAAU,CAACC,WAAD,CAAxB;AAEA,QAAMC,MAAM,GAAGC,UAAU,GAAI,IAAI5I,MAAJ,CAAWO,SAAX,EAAsB,GAAtB,CAAJ,GAAmC,IAAIP,MAAJ,CAAWO,SAAX,EAAsB,EAAtB,CAA5D;AACA,SAAOoI,MAAM,CAACE,IAAP,CAAYH,WAAZ,CAAP;AACD,CAPD;;AASA,MAAMI,QAAQ,GAAIF,UAAD,IAAgB,CAACF,WAAD,EAAcnI,SAAd,KAA4B;AAC3D,MAAI1W,0BAAC,CAAC6O,WAAF,CAAcgQ,WAAd,CAAJ,EAAgC;AAC9B,QAAInI,SAAS,CAACxI,IAAV,OAAqB,GAAzB,EAA8B,OAAO,IAAP,CAA9B,KACK,OAAO,KAAP;AACN;;AACDwI,EAAAA,SAAS,GAAGjS,QAAQ,CAACiS,SAAD,CAApB;AACAmI,EAAAA,WAAW,GAAGD,UAAU,CAACC,WAAD,CAAxB;AAEA,QAAMK,YAAY,GAAGxI,SAAS,CAAC1I,KAAV,CAAgB,GAAhB,EAAqBhK,MAArB,GAA8B,CAAnD;;AACA,MAAIkb,YAAY,GAAG,EAAnB,EAAuB;AACrB,UAAM,IAAI7c,KAAJ,CAAU,2CAAV,CAAN;AACD;;AACD,QAAM8c,WAAW,GAAG9Q,iBAAiB,CAACqI,SAAD,CAAjB,CAA6B3I,OAA7B,CAAqC,OAArC,EAA8C,MAA9C,CAApB;AAEA,QAAM+Q,MAAM,GAAGC,UAAU,GAAI,IAAI5I,MAAJ,CAAWgJ,WAAX,EAAwB,GAAxB,CAAJ,GAAqC,IAAIhJ,MAAJ,CAAWgJ,WAAX,EAAwB,EAAxB,CAA9D;AACA,SAAOL,MAAM,CAACE,IAAP,CAAYH,WAAZ,CAAP;AACD,CAhBD;;AAkBA,MAAMO,aAAa,GAAIL,UAAD,IAAgB,CAACF,WAAD,EAAcnI,SAAd,KAA4B;AAChE,MAAI1W,0BAAC,CAAC6O,WAAF,CAAcgQ,WAAd,CAAJ,EAAgC;AAC9B,QAAInI,SAAS,CAACxI,IAAV,OAAqB,GAAzB,EAA8B,OAAO,IAAP,CAA9B,KACK,OAAO,KAAP;AACN;;AACDwI,EAAAA,SAAS,GAAGjS,QAAQ,CAACiS,SAAD,CAApB;AACAmI,EAAAA,WAAW,GAAGD,UAAU,CAACC,WAAD,CAAxB;AAEA,QAAMK,YAAY,GAAGxI,SAAS,CAAC1I,KAAV,CAAgB,GAAhB,EAAqBhK,MAArB,GAA8B,CAAnD;;AACA,MAAIkb,YAAY,GAAG,EAAnB,EAAuB;AACrB,UAAM,IAAI7c,KAAJ,CAAU,2CAAV,CAAN;AACD;;AACD,QAAM8c,WAAW,GAAG,MAAM9Q,iBAAiB,CAACqI,SAAD,CAAjB,CAA6B3I,OAA7B,CAAqC,OAArC,EAA8C,MAA9C,CAAN,GAA8D,GAAlF;AAEA,QAAM+Q,MAAM,GAAGC,UAAU,GAAI,IAAI5I,MAAJ,CAAWgJ,WAAX,EAAwB,GAAxB,CAAJ,GAAqC,IAAIhJ,MAAJ,CAAWgJ,WAAX,EAAwB,EAAxB,CAA9D;AACA,SAAOL,MAAM,CAACE,IAAP,CAAYH,WAAZ,CAAP;AACD,CAhBD;;AAkBA,MAAMQ,OAAO,GAAIN,UAAD,IAAgB,CAACF,WAAD,EAAcnI,SAAd,KAA4B;AAC1D,MAAI1W,0BAAC,CAAC6O,WAAF,CAAcgQ,WAAd,CAAJ,EAAgC,OAAO,KAAP;AAChCnI,EAAAA,SAAS,GAAGjS,QAAQ,CAACiS,SAAD,CAApB;AACAmI,EAAAA,WAAW,GAAGD,UAAU,CAACC,WAAD,CAAxB;;AAEA,MAAIE,UAAJ,EAAgB;AACdrI,IAAAA,SAAS,GAAGA,SAAS,CAAChI,WAAV,EAAZ;AACAmQ,IAAAA,WAAW,GAAGA,WAAW,CAACnQ,WAAZ,EAAd;AACD;;AACD,SAAOmQ,WAAW,CAAC9V,OAAZ,CAAoB2N,SAApB,KAAkC,CAAzC;AACD,CAVD;;AAYA,MAAM4I,MAAM,GAAIP,UAAD,IAAgB,CAACF,WAAD,EAAcnI,SAAd,KAA4B;AACzD,MAAI1W,0BAAC,CAAC6O,WAAF,CAAcgQ,WAAd,CAAJ,EAAgC,OAAO,KAAP;AAChCnI,EAAAA,SAAS,GAAGjS,QAAQ,CAACiS,SAAD,CAApB;AACAmI,EAAAA,WAAW,GAAGD,UAAU,CAACC,WAAD,CAAxB;;AAEA,MAAIE,UAAJ,EAAgB;AACdrI,IAAAA,SAAS,GAAGA,SAAS,CAAChI,WAAV,EAAZ;AACAmQ,IAAAA,WAAW,GAAGA,WAAW,CAACnQ,WAAZ,EAAd;AACD;;AACD,SAAOmQ,WAAW,KAAKnI,SAAvB;AACD,CAVD;;AAYA,MAAM6I,kBAAgB,GAAIC,YAAD,IAAkB;AACzC,MAAIA,YAAY,KAAK,QAAjB,IAA6BA,YAAY,KAAK,kBAAlD,EAAsE;AACpE,WAAOV,MAAM,CAACU,YAAY,KAAK,kBAAlB,CAAb;AACD,GAFD,MAEO,IAAIA,YAAY,KAAK,UAAjB,IAA+BA,YAAY,KAAK,oBAAhD,IAAwEA,YAAY,KAAK,mBAA7F,EAAkH;AACvH,WAAOP,QAAQ,CAACO,YAAY,KAAK,oBAAjB,IAAyCA,YAAY,KAAK,mBAA3D,CAAf;AACD,GAFM,MAEA,IAAIA,YAAY,KAAK,eAAjB,IAAoCA,YAAY,KAAK,yBAAzD,EAAoF;AACzF,WAAOJ,aAAa,CAACI,YAAY,KAAK,yBAAlB,CAApB;AACD,GAFM,MAEA,IAAIA,YAAY,KAAK,SAAjB,IAA8BA,YAAY,KAAK,mBAA/C,IAAsEA,YAAY,KAAK,kBAA3F,EAA+G;AACpH,WAAOH,OAAO,CAACG,YAAY,KAAK,mBAAjB,IAAwCA,YAAY,KAAK,kBAA1D,CAAd;AACD,GAFM,MAEA,IAAIA,YAAY,KAAK,QAAjB,IAA6BA,YAAY,KAAK,kBAAlD,EAAsE;AAC3E,WAAOF,MAAM,CAACE,YAAY,KAAK,kBAAlB,CAAb;AACD,GAFM,MAEA;AACL,WAAOF,MAAM,CAAC,KAAD,CAAb;AACD;AACF,CAdD;;AAgBA,kBAAc,GAAG;AACfR,EAAAA,MADe;AAEfG,EAAAA,QAFe;AAGfG,EAAAA,aAHe;AAIfC,EAAAA,OAJe;AAKfC,EAAAA,MALe;AAMfC,oBAAAA;AANe,CAAjB;;AC/FA,MAAME,YAAY,GAAIC,MAAD,IAAY;AAC/B,MAAI;AACFhc,IAAAA,IAAI,CAACkL,KAAL,CAAW8Q,MAAX;AACD,GAFD,CAEE,OAAOC,CAAP,EAAU;AACV,WAAO,KAAP;AACD;;AACD,SAAO,IAAP;AACD,CAPD;;;;;;;;;;AAeA,MAAMC,cAAY,GAAG,CAACC,IAAD,EAAOC,YAAY,GAAG,IAAtB,KAA+B;AAClD,MAAI,CAACA,YAAD,IAAiB9f,0BAAC,CAACiI,QAAF,CAAW4X,IAAX,CAArB,EAAuC;AACrC,WAAO,KAAP;AACD;;AACD,MAAI;AACFnc,IAAAA,IAAI,CAACC,SAAL,CAAekc,IAAf;AACD,GAFD,CAEE,OAAOF,CAAP,EAAU;AACV,WAAO,KAAP;AACD;;AACD,SAAO,IAAP;AACD,CAVD;;AAYA,MAAMI,MAAM,GAAIF,IAAD,IAAU;AACvB,MAAIJ,YAAY,CAACI,IAAD,CAAhB,EAAwB;AACtB,WAAOA,IAAP;AACD,GAFD,MAEO,IAAID,cAAY,CAACC,IAAD,CAAhB,EAAwB;AAC7B,WAAOnc,IAAI,CAACC,SAAL,CAAekc,IAAf,CAAP;AACD;;AACD,SAAO,IAAP;AACD,CAPD;;AASA,MAAMG,YAAU,GAAIC,WAAD,IAAiB;AAClC,MAAI;AACF,WAAOvc,IAAI,CAACkL,KAAL,CAAWqR,WAAX,CAAP;AACD,GAFD,CAEE,OAAON,CAAP,EAAU;AACV,WAAOM,WAAP;AACD;AACF,CAND;;AAQA,MAAMC,YAAY,GAAIL,IAAD,IAAU;AAC7B,QAAMM,IAAI,GAAGJ,MAAM,CAACF,IAAD,CAAnB;AACA,SAAOM,IAAI,GAAG;AAAE,oBAAgB,kBAAlB;AAAsCA,IAAAA,IAAI,EAAEA;AAA5C,GAAH,GAAwD;AAAE,oBAAgB,YAAlB;AAAgCA,IAAAA,IAAI,EAAEN;AAAtC,GAAnE;AACD,CAHD;;AAKA,MAAMO,iBAAiB,GAAI7R,GAAD,IAAS;AACjC,MAAIV,GAAG,GAAG7N,0BAAC,CAACiI,QAAF,CAAWsG,GAAX,IAAkBA,GAAlB,GAAwB7K,IAAI,CAACC,SAAL,CAAe4K,GAAf,EAAoB,IAApB,EAA0B,CAA1B,CAAlC;AACA,QAAMvK,MAAM,GAAG6J,GAAG,CAAC7J,MAAnB;;AACA,MAAIA,MAAM,GAAG,IAAb,EAAmB;AACjB6J,IAAAA,GAAG,GAAI,GAAEA,GAAG,CAAC7E,MAAJ,CAAW,CAAX,EAAc,IAAd,CAAoB,SAAQhF,MAAM,GAAG,IAAK,cAAnD;AACD;;AACD,SAAO6J,GAAP;AACD,CAPD;;AASA,MAAMwS,kBAAgB,GAAIX,MAAD,IAAY;AACnC,MAAIA,MAAJ,EAAY;AACV,WAAO,CAAC,KAAKA,MAAN,EAAc3R,OAAd,CAAsB,wBAAtB,EAAgD,UAAUuS,SAAV,EAAqB;;;;AAI1E,cAAQA,SAAR;AACE,aAAK,GAAL;AACA,aAAK,IAAL;AACE,iBAAO,OAAOA,SAAd;;;AAEF,aAAK,IAAL;AACE,iBAAO,KAAP;;AACF,aAAK,IAAL;AACE,iBAAO,KAAP;;AACF,aAAK,QAAL;AACE,iBAAO,SAAP;;AACF,aAAK,QAAL;AACE,iBAAO,SAAP;AAZJ;AAcD,KAlBM,CAAP;AAmBD;AACF,CAtBD;;AAwBA,MAAMC,eAAa,GAAIC,EAAD,IAAQ;AAC5B,MAAIA,EAAE,IAAI,IAAV,EAAgB;AACd,QAAIA,EAAE,GAAG,IAAL,KAAc,CAAlB,EAAqB;AACnB,aAAQ,GAAEC,IAAI,CAACC,KAAL,CAAWF,EAAE,GAAG,IAAhB,CAAsB,KAAIA,EAAE,GAAG,IAAK,IAA9C;AACD,KAFD,MAEO;AACL,aAAQ,GAAEC,IAAI,CAACC,KAAL,CAAWF,EAAE,GAAG,IAAhB,CAAsB,GAAhC;AACD;AACF,GAND,MAMO;AACL,WAAQ,GAAEA,EAAG,IAAb;AACD;AACF,CAVD;;AAYA,SAAc,GAAG;AAAEN,EAAAA,YAAF;AAAgBH,EAAAA,MAAhB;AAAwBH,gBAAAA,cAAxB;AAAsCH,EAAAA,YAAtC;AAAoDW,EAAAA,iBAApD;AAAuEC,oBAAAA,kBAAvE;AAAyFL,cAAAA,YAAzF;AAAqGO,iBAAAA;AAArG,CAAjB;;AC7FA,MAAMI,WAAW,GAAIC,WAAD,IAAiB;AACnC,MAAI5gB,0BAAC,CAACgD,OAAF,CAAU4d,WAAV,CAAJ,EAA4B;AAC1B,WAAOA,WAAP;AACD;;AACD,SAAO,CAACA,WAAD,CAAP;AACD,CALD;;AAOA,gBAAyB,GAAG,CAAC3a,IAAD,EAAOnH,YAAP,EAAqBgO,OAArB,EAA8B+T,QAA9B,KAA2C;AACrE,MAAI,CAACA,QAAQ,CAACC,QAAT,CAAkB,OAAlB,CAAL,EAAiC;AAC/B;AACD;;AAED,QAAMC,eAAe,GAAGjU,OAAO,CAACkU,gBAAhC;AACA,QAAMC,YAAY,GAAGnU,OAAO,CAACoU,aAA7B;AACA,QAAMC,qBAAqB,GAAGrU,OAAO,CAACsU,sBAAtC;AACA,QAAMC,kBAAkB,GAAGvU,OAAO,CAACwU,mBAAnC;AACA,MAAIC,UAAU,GAAGziB,YAAjB;;AACA,MAAIkB,0BAAC,CAACiI,QAAF,CAAWsZ,UAAX,CAAJ,EAA4B;AAC1B,QAAI;AACFA,MAAAA,UAAU,GAAG7d,IAAI,CAACkL,KAAL,CAAW2S,UAAX,CAAb;AACD,KAFD,CAEE,OAAOzjB,GAAP,EAAY;AACZ,YAAM,IAAIuE,KAAJ,CAAW,wBAAuBwe,QAAS,EAA3C,CAAN;AACD;AACF;;AACD,MAAIE,eAAJ,EAAqB;AACnB,UAAMS,WAAW,GAAGzM,4BAAE,CAACC,KAAH,CAASuM,UAAT,EAAqBR,eAArB,CAApB;;AACA,QAAI,CAACS,WAAD,IAAgBA,WAAW,CAACxd,MAAZ,KAAuB,CAA3C,EAA8C;AAC5C;AACD;AACF;;AAED,MAAI,CAACid,YAAL,EAAmB;AACjBM,IAAAA,UAAU,GAAG,CAACA,UAAD,CAAb;AACD,GAFD,MAEO;AACL,QAAIE,WAAJ;;AACA,QAAI;AACFA,MAAAA,WAAW,GAAGd,WAAW,CAAC5L,4BAAE,CAACC,KAAH,CAASuM,UAAT,EAAqBN,YAArB,CAAD,CAAzB;AACD,KAFD,CAEE,OAAOnjB,GAAP,EAAY;AACZ,YAAM,IAAIuE,KAAJ,CAAW,iBAAgB4e,YAAa,aAAYnjB,GAAG,CAACwE,OAAQ,EAAhE,CAAN;AACD;;AAEDif,IAAAA,UAAU,GAAGE,WAAb;AACD;;AAED,QAAM3c,MAAM,GAAG,EAAf;;AACA,OAAK,MAAM+a,IAAX,IAAmB0B,UAAnB,EAA+B;AAC7B,QAAIG,MAAJ;;AACA,QAAI;AACFA,MAAAA,MAAM,GAAGf,WAAW,CAAC5L,4BAAE,CAACC,KAAH,CAAS6K,IAAT,EAAesB,qBAAf,CAAD,CAApB;AACD,KAFD,CAEE,OAAOrjB,GAAP,EAAY;AACZ,YAAM,IAAIuE,KAAJ,CAAW,oBAAmB8e,qBAAsB,aAAYrjB,GAAG,CAACwE,OAAQ,EAA5E,CAAN;AACD;;AAED,QAAIof,MAAM,CAAC1d,MAAP,KAAkB,CAAtB,EAAyB;AACvB,YAAM,IAAI3B,KAAJ,CAAW,+CAA8CqB,IAAI,CAACC,SAAL,CAAe+d,MAAf,CAAuB,cAAaP,qBAAsB,cAAazd,IAAI,CAACC,SAAL,CAAekc,IAAf,CAAqB,GAArJ,CAAN;AACD;;AAED,QAAI,CAAC/a,MAAM,CAAC4c,MAAD,CAAX,EAAqB;AACnB5c,MAAAA,MAAM,CAAC4c,MAAD,CAAN,GAAiB,EAAjB;AACD;;AAED,QAAI;AACF5c,MAAAA,MAAM,CAAC4c,MAAD,CAAN,GAAiB5c,MAAM,CAAC4c,MAAD,CAAN,CAAe7c,MAAf,CAAsBkQ,4BAAE,CAACC,KAAH,CAAS6K,IAAT,EAAewB,kBAAf,CAAtB,CAAjB;AACD,KAFD,CAEE,OAAOvjB,GAAP,EAAY;AACZ,YAAM,IAAIuE,KAAJ,CAAW,uBAAsB8e,qBAAsB,aAAYrjB,GAAG,CAACwE,OAAQ,EAA/E,CAAN;AACD;AACF;;AAED,SAAO;AAAExD,IAAAA,YAAY,EAAE4E,IAAI,CAACC,SAAL,CAAe;AAAEmT,MAAAA,UAAU,EAAEhS;AAAd,KAAf;AAAhB,GAAP;AACD,CA9DD;;;;;;ACPA,MAAM;AAAEM,EAAAA;AAAF,IAAaC,uBAAnB;AAGA,MAAMC,OAAK,GAAGC,yBAAgB,CAAC,uBAAD,CAA9B;AAGA,MAAM;AAAEnD,eAAAA;AAAF,IAAkBoD,aAAxB;;AAEA,MAAMmc,aAAW,GAAG,OAAO1b,IAAP,EAAamX,IAAb,EAAmB/V,IAAnB,KAA4B;AAC9C,SAAOua,iBAAe,CAAC3b,IAAD,EAAOmX,IAAP,EAAa/V,IAAb,CAAtB;AACD,CAFD;;AAIA,MAAMua,iBAAe,GAAG,CAAC3b,IAAD,EAAOmX,IAAP,EAAa/V,IAAb,KAAsB;AAC5C,MAAI,CAAC+V,IAAL,EAAW;AACT;AACD;;AAED,MAAIpd,0BAAC,CAACC,UAAF,CAAamd,IAAb,CAAJ,EAAwB;AACtB,QAAI;AACF,aAAOA,IAAI,CAAC/V,IAAD,CAAX;AACD,KAFD,CAEE,OAAOvJ,GAAP,EAAY;AACZ,YAAM,IAAIuE,KAAJ,CAAW,iCAAgCvE,GAAG,CAACwE,OAAQ,EAAvD,CAAN;AACD;AACF;;AAED,MAAItC,0BAAC,CAACiI,QAAF,CAAWmV,IAAX,CAAJ,EAAsB;AACpB,QAAI;AACF,YAAM7U,EAAE,GAAG,IAAInD,MAAJ,CAAW;AACpBoD,QAAAA,IAAI,EAAE,KADc;AAEpB5C,QAAAA,OAAO,EAAE,KAFW;AAGpB6C,QAAAA,OAAO,EAAEpB;AAHW,OAAX,CAAX;AAKA,YAAMmX,CAAC,GAAGjW,EAAE,CAACG,GAAH,CAAO0U,IAAP,CAAV;;AACA,UAAIpd,0BAAC,CAACC,UAAF,CAAaue,CAAb,CAAJ,EAAqB;AACnB,eAAOA,CAAC,CAACnX,IAAD,CAAR;AACD,OAFD,MAEO;AACL,eAAOmX,CAAP;AACD;AACF,KAZD,CAYE,OAAO1gB,GAAP,EAAY;AACZ,YAAM,IAAIuE,KAAJ,CAAW,wCAAuCvE,GAAG,CAACwE,OAAQ,EAA9D,CAAN;AACD;AACF;;AACD,QAAM,IAAID,KAAJ,CAAW,gBAAe,OAAO+a,IAAK,EAAtC,CAAN;AACD,CA/BD;;AAiCA,MAAMyE,SAAO,GAAG,CAAC5b,IAAD,EAAO6b,IAAP,KAAgB;AAC9B,MAAI,CAACA,IAAL,EAAW;AACT,WAAO,IAAP;AACD;;AACD,QAAMC,WAAW,GAAG,CAAC,CAAC9b,IAAI,CAACtJ,YAAY,CAACR,qBAAd,CAA1B;;AAEA,MAAI6D,0BAAC,CAACC,UAAF,CAAa6hB,IAAb,CAAJ,EAAwB;AACtBxc,IAAAA,OAAK,CAAC,uCAAD,CAAL;AACA,WAAOwc,IAAP;AACD;;AAED,MAAI9hB,0BAAC,CAACiI,QAAF,CAAW6Z,IAAX,CAAJ,EAAsB;AACpB,QAAIE,iBAAJ;AACA,QAAIvY,WAAW,GAAGhC,wBAAI,CAAChK,OAAL,CAAaiM,OAAO,CAACC,GAAR,EAAb,EAA4BmY,IAA5B,CAAlB;;AACA,QAAIlY,sBAAE,CAACC,UAAH,CAAcJ,WAAd,CAAJ,EAAgC;AAC9B,UAAI;AACFuY,QAAAA,iBAAiB,GAAGpc,eAAAA,CAAQ6D,WAAR7D,CAApB;AACD,OAFD,CAEE,OAAO9H,GAAP,EAAY;AAEf,KALD,MAKO;AACL2L,MAAAA,WAAW,GAAGqY,IAAd;;AACA,UAAI;AACFE,QAAAA,iBAAiB,GAAGpc,eAAAA,CAAQkc,IAARlc,CAApB;AACD,OAFD,CAEE,OAAO9H,GAAP,EAAY;AAEf;;AAED,QAAIkkB,iBAAJ,EAAuB;AACrB,UAAI,CAACD,WAAL,EAAkB;AAChB,cAAM,IAAI3f,aAAJ,CACJ,sEADI,EAEJ;AACEe,UAAAA,IAAI,EAAE,UADR;AAEEG,UAAAA,OAAO,EAAE,cAFX;AAGED,UAAAA,MAAM,EAAEoE,wBAAI,CAACC,QAAL,CAAcC,UAAd,CAHV;AAIEpE,UAAAA,KAAK,EAAE;AACLpH,YAAAA,qBAAqB,EAAE8J,IAAI,CAACtJ,YAAY,CAACR,qBAAd,CADtB;AAEL8lB,YAAAA,QAAQ,EAAEH;AAFL;AAJT,SAFI,CAAN;AAYD;;AAED,UAAI9hB,0BAAC,CAACC,UAAF,CAAa+hB,iBAAb,CAAJ,EAAqC;AACnC1c,QAAAA,OAAK,CAAE,iCAAgCmE,WAAY,EAA9C,CAAL;AACA,eAAOuY,iBAAP;AACD,OAHD,MAGO;AACL,cAAM,IAAI3f,KAAJ,CAAW,kBAAiBoH,WAAY,+BAAxC,CAAN;AACD;AACF;;AAED,QAAI;AACFyY,MAAAA,2BAAO,CAACC,WAAR,CAAoBL,IAApB;AACD,KAFD,CAEE,OAAOhkB,GAAP,EAAY;AACZ,YAAM,IAAIuE,KAAJ,CAAW,yCAAwCsU,wBAAI,CAACC,OAAL,CAAa9Y,GAAb,CAAkB,EAArE,CAAN;AACD;;AAEDwH,IAAAA,OAAK,CAAC,wCAAD,CAAL;AACA,WAAOwc,IAAP;AACD;;AAED,QAAM,IAAIzf,KAAJ,CAAW,kBAAiBsU,wBAAI,CAACC,OAAL,CAAakL,IAAb,CAAmB,EAA/C,CAAN;AACD,CA9DD;;AAgEA,aAAc,GAAG;AACfD,WAAAA,SADe;AAEfF,eAAAA,aAFe;AAGfC,mBAAAA;AAHe,CAAjB;;;;;AC/GA,MAAM;AAAEA,EAAAA,eAAF;AAAmBC,WAAAA;AAAnB,IAA+Bxc,SAArC;;AAEA,gBAAyB,GAAG,CAACY,IAAD,EAAOnH,YAAP,EAAqBgO,OAArB,EAA8B+T,QAA9B,KAA2C;AACrE,MAAI,EAAE/T,OAAO,CAACxE,MAAR,IAAkBwE,OAAO,CAACsV,MAA5B,CAAJ,EAAyC;AACvC,UAAM,IAAI/f,KAAJ,CAAU,uBAAV,CAAN;AACD;;AAED,MAAIrC,0BAAC,CAACiI,QAAF,CAAWnJ,YAAX,CAAJ,EAA8B;AAC5B,QAAI;AACFA,MAAAA,YAAY,GAAG4E,IAAI,CAACkL,KAAL,CAAW9P,YAAX,CAAf;AACD,KAFD,CAEE,OAAOhB,GAAP,EAAY;AAEf;;AAED,QAAMsf,IAAI,GAAGyE,SAAO,CAAC5b,IAAD,EAAO6G,OAAO,CAACsV,MAAf,CAApB;AACA,QAAMxG,QAAQ,GAAGgG,eAAe,CAAC3b,IAAD,EAAOmX,IAAP,EAAa;AAAEmE,IAAAA,UAAU,EAAEziB,YAAd;AAA4B+hB,IAAAA;AAA5B,GAAb,CAAhC;;AAEA,MAAI,CAACjF,QAAL,EAAe;AACb;AACD;;AAED,SAAOA,QAAQ,CAAC9c,YAAT,GAAwB8c,QAAxB,GAAmC;AAAE9c,IAAAA,YAAY,EAAE8c;AAAhB,GAA1C;AACD,CApBD;;;;;;ACFA,MAAMtW,OAAK,GAAGD,yBAAgB,CAAC,qCAAD,CAA9B;AAIA,MAAMgd,iBAAiB,GAAG,eAA1B;;AAEA,cAAyB,GAAG,CAACpc,IAAD,EAAOnH,YAAP,EAAqBgO,OAArB,EAA8B+T,QAA9B,KAA2C;AACrE,MAAI,CAACA,QAAQ,CAACC,QAAT,CAAkB,KAAlB,CAAL,EAA+B;AAC7B;AACD;;AAED,QAAMwB,EAAE,GAAG,IAAIC,8BAAJ,EAAX;AACA,QAAMC,MAAM,GAAGF,EAAE,CAAC1T,KAAH,CAAS9P,YAAT,EAAuB,EAAvB,CAAf;;AAEA,QAAM2jB,sBAAsB,GAAI9W,OAAD,IAAa;AAC1C,WAAOA,OAAO,CAACoC,OAAR,CAAgBsU,iBAAhB,EAAmC,EAAnC,EAAuC9L,SAAvC,CAAiD,UAAUvS,MAA3D,EAAmEkK,IAAnE,EAAP;AACD,GAFD;;AAIA,QAAMwU,wBAAwB,GAAIC,YAAD,IAAkB;AACjDA,IAAAA,YAAY,GAAGA,YAAY,CAAC5U,OAAb,CAAqBsU,iBAArB,EAAwC,EAAxC,CAAf;AAEA,UAAMjM,KAAK,GAAG,4CAAd;AACA,QAAIwM,OAAO,GAAGD,YAAY,CAACrM,KAAb,CAAmBF,KAAnB,CAAd;;AACA,WAAOwM,OAAP,EAAgB;AACd,YAAMhW,KAAK,GAAGgW,OAAO,CAAC,CAAD,CAArB;AACA,YAAMC,QAAQ,GAAGD,OAAO,CAAC,CAAD,CAAP,CAAW5U,KAAX,CAAiB,GAAjB,CAAjB,CAFc;;AAId,UAAI6U,QAAQ,CAAC7e,MAAT,GAAkB,CAAtB,EAAyB;AACvBsB,QAAAA,OAAK,CAAE,kBAAiBud,QAAQ,CAAC,CAAD,CAAI,wBAAuBF,YAAa,GAAnE,CAAL;AACD;;AACDA,MAAAA,YAAY,GAAGA,YAAY,CAAC5U,OAAb,CAAqB6U,OAAO,CAAC,CAAD,CAA5B,EAAiChW,KAAjC,CAAf;AACAgW,MAAAA,OAAO,GAAGD,YAAY,CAACrM,KAAb,CAAmBF,KAAnB,CAAV;AACD;;AACD,WAAO;AAAE0M,MAAAA,MAAM,EAAEH,YAAY,CAACzU,IAAb;AAAV,KAAP;AACD,GAhBD;;AAkBA,QAAM4I,UAAU,GAAG,EAAnB;AAEA,MAAIiM,OAAO,GAAG,EAAd;AACA,MAAIrB,MAAM,GAAG,IAAb,CAjCqE;;AAmCrE,MAAIsB,KAAK,GAAG,OAAZ;AACA,MAAIC,YAAY,GAAG,IAAnB;;AACA,OAAK,MAAM1W,KAAX,IAAoBiW,MAApB,EAA4B;AAC1B,QAAIjW,KAAK,CAACpJ,IAAN,KAAe,cAAnB,EAAmC;AACjC6f,MAAAA,KAAK,GAAG,cAAR;AACD,KAFD,MAEO,IAAIzW,KAAK,CAACpJ,IAAN,KAAe,QAAf,IAA2BoJ,KAAK,CAACZ,OAAN,CAAcgD,UAAd,CAAyB,SAAzB,CAA/B,EAAoE;AACzE+S,MAAAA,MAAM,GAAGe,sBAAsB,CAAClW,KAAK,CAACZ,OAAP,CAA/B;AACAsX,MAAAA,YAAY,GAAG,IAAf;AACAD,MAAAA,KAAK,GAAG,eAAR;AACD,KAJM,MAIA,IAAIzW,KAAK,CAACpJ,IAAN,KAAe,QAAf,IAA2BoJ,KAAK,CAACZ,OAAN,CAAcgD,UAAd,CAAyB,UAAzB,CAA/B,EAAqE;AAC1EsU,MAAAA,YAAY,GAAG,KAAf;AACA3d,MAAAA,OAAK,CAAE,YAAWiH,KAAK,CAACZ,OAAQ,WAA3B,CAAL;AACAqX,MAAAA,KAAK,GAAG,gBAAR;AACD,KAJM,MAIA,IAAIzW,KAAK,CAACpJ,IAAN,KAAe,QAAf,IAA2BoJ,KAAK,CAACZ,OAAN,CAAcgD,UAAd,CAAyB,QAAzB,CAA/B,EAAmE;AACxEsU,MAAAA,YAAY,GAAG,KAAf;AACA3d,MAAAA,OAAK,CAAE,UAASiH,KAAK,CAACZ,OAAQ,WAAzB,CAAL;AACAqX,MAAAA,KAAK,GAAG,cAAR;AACD,KAJM,MAIA,IAAIzW,KAAK,CAACpJ,IAAN,KAAe,QAAf,IAA2BoJ,KAAK,CAACZ,OAAN,CAAcgD,UAAd,CAAyB,SAAzB,CAA/B,EAAoE;AACzEsU,MAAAA,YAAY,GAAG,KAAf;AACA3d,MAAAA,OAAK,CAAE,WAAUiH,KAAK,CAACZ,OAAQ,WAA1B,CAAL;AACAqX,MAAAA,KAAK,GAAG,eAAR;AACD,KAJM,MAIA,IAAIzW,KAAK,CAACpJ,IAAN,KAAe,eAAnB,EAAoC;AACzC6f,MAAAA,KAAK,GAAG,eAAR;AACD,KAFM,MAEA,IAAIzW,KAAK,CAACpJ,IAAN,KAAe,kBAAnB,EAAuC;AAC5C6f,MAAAA,KAAK,GAAG,kBAAR;AACD,KAFM,MAEA,IAAIzW,KAAK,CAACpJ,IAAN,KAAe,gBAAnB,EAAqC;AAC1C6f,MAAAA,KAAK,GAAG,gBAAR;AACD,KAFM,MAEA,IAAIzW,KAAK,CAACpJ,IAAN,KAAe,gBAAnB,EAAqC;AAC1C6f,MAAAA,KAAK,GAAG,gBAAR;AACD,KAFM,MAEA,IAAIzW,KAAK,CAACpJ,IAAN,KAAe,QAAf,IAA2B6f,KAAK,KAAK,gBAAzC,EAA2D;AAChE,UAAIC,YAAJ,EAAkB;AAChB,cAAM;AAAEH,UAAAA;AAAF,YAAaJ,wBAAwB,CAACnW,KAAK,CAACZ,OAAP,CAA3C;;AACAoX,QAAAA,OAAO,CAACxlB,IAAR,CAAaulB,MAAb;AACD;;AACDE,MAAAA,KAAK,GAAG,aAAR;AACD,KANM,MAMA,IAAIzW,KAAK,CAACpJ,IAAN,KAAe,iBAAnB,EAAsC;AAC3C6f,MAAAA,KAAK,GAAG,iBAAR;AACD,KAFM,MAEA,IAAIzW,KAAK,CAACpJ,IAAN,KAAe,iBAAnB,EAAsC;AAC3C6f,MAAAA,KAAK,GAAG,iBAAR;AACD,KAFM,MAEA,IAAIzW,KAAK,CAACpJ,IAAN,KAAe,mBAAnB,EAAwC;AAC7C6f,MAAAA,KAAK,GAAG,mBAAR;;AACA,UAAID,OAAO,CAAC/e,MAAZ,EAAoB;AAClB,YAAI,CAAC0d,MAAL,EAAa;AACXpc,UAAAA,OAAK,CAAE,uCAAsC5B,IAAI,CAACC,SAAL,CAAeof,OAAf,CAAwB,EAAhE,CAAL;AACD,SAFD,MAEO;AACLA,UAAAA,OAAO,GAAG/iB,0BAAC,CAACkjB,IAAF,CAAOH,OAAP,CAAV;AACAjM,UAAAA,UAAU,CAAC4K,MAAD,CAAV,GAAqBqB,OAArB;AACD;AACF;;AACDrB,MAAAA,MAAM,GAAG,IAAT;AACAqB,MAAAA,OAAO,GAAG,EAAV;AACD,KAZM,MAYA;AACLzd,MAAAA,OAAK,CAAE,0BAAyBqR,wBAAI,CAACC,OAAL,CAAarK,KAAb,CAAoB,EAA/C,CAAL;AACD;AACF;;AAED,SAAO;AACLzN,IAAAA,YAAY,EAAE;AAAEgY,MAAAA;AAAF,KADT;AAEL+J,IAAAA,QAAQ,EAAG,GAAEA,QAAS;AAFjB,GAAP;AAID,CA/FD;;;;;;ACNA,MAAMvb,OAAK,GAAGD,yBAAgB,CAAC,+BAAD,CAA9B;AACA,MAAM;AAAE2a,EAAAA;AAAF,IAAiBza,KAAvB;;AAEA,qBAA8B,GAAG,CAAC4d,aAAD,EAAgBld,IAAhB,KAAyB;AACxD,QAAMmd,YAAY,GAAG,EAArB;;AACA,QAAMC,YAAY,GAAGrjB,0BAAC,CAACsjB,MAAF,CAASrd,IAAT,EAAe,CAAC+I,CAAD,EAAIuU,CAAJ,KAAUA,CAAC,CAAC5U,UAAF,CAAawU,aAAb,CAAzB,CAArB;;AACAnjB,EAAAA,0BAAC,CAACqjB,YAAD,CAAD,CAAgBlb,IAAhB,GAAuB8N,IAAvB,GAA8BuN,IAA9B,CAAoCnb,GAAD,IAAS;AAC1C,UAAMoR,GAAG,GAAGzZ,0BAAC,CAACC,UAAF,CAAagG,IAAI,CAACoC,GAAD,CAAjB,IAA2BpC,IAAI,CAACoC,GAAD,CAAL,EAA1B,GAA0CpC,IAAI,CAACoC,GAAD,CAA1D;;AAEA,QAAIrI,0BAAC,CAACgD,OAAF,CAAUyW,GAAV,CAAJ,EAAoB;AAClBA,MAAAA,GAAG,CAACxW,OAAJ,CAAYwgB,CAAC,IAAI;AACfL,QAAAA,YAAY,CAAC7lB,IAAb,CAAmB,GAAEkmB,CAAE,EAAL,CAAOvV,IAAP,EAAlB;AACD,OAFD;AAGD,KAJD,MAIO,IAAIlO,0BAAC,CAACiI,QAAF,CAAWwR,GAAX,CAAJ,EAAqB;AAC1BA,MAAAA,GAAG,CAACzL,KAAJ,CAAU,GAAV,EAAe/K,OAAf,CAAuBwgB,CAAC,IAAI;AAC1BL,QAAAA,YAAY,CAAC7lB,IAAb,CAAkBkmB,CAAC,CAACvV,IAAF,EAAlB;AACD,OAFD;AAGD;AACF,GAZD;;AAaA,SAAOkV,YAAP;AACD,CAjBD;;;;;;;;;;AA0BA,sBAA+B,GAAG,CAACnd,IAAD,EAAOyd,MAAP,KAAkB;AAClD,QAAM5e,MAAM,GAAG,EAAf;AACA,MAAI6e,QAAQ,GAAG,EAAf;;AACA,OAAK,MAAMjhB,IAAX,IAAmBtC,MAAM,CAAC+H,IAAP,CAAYlC,IAAZ,CAAnB,EAAsC;AACpC,QAAIvD,IAAI,CAACiM,UAAL,CAAgB+U,MAAhB,CAAJ,EAA6B;AAC3BC,MAAAA,QAAQ,CAACpmB,IAAT,CAAcmF,IAAd;AACD;AACF;;AACDihB,EAAAA,QAAQ,GAAGA,QAAQ,CAAC1N,IAAT,EAAX;;AAEA,MAAI0N,QAAQ,CAAC3f,MAAT,KAAoB,CAApB,IAAyB2f,QAAQ,CAAC,CAAD,CAAR,KAAgBD,MAA7C,EAAqD;AACnD,UAAMjK,GAAG,GAAGuG,UAAU,CAAC/Z,IAAI,CAAC0d,QAAQ,CAAC,CAAD,CAAT,CAAL,CAAtB;;AACA,QAAI3jB,0BAAC,CAACgD,OAAF,CAAUyW,GAAV,CAAJ,EAAoB;AAClBA,MAAAA,GAAG,CAACxW,OAAJ,CAAYsJ,KAAK,IAAIzH,MAAM,CAACvH,IAAP,CAAYgP,KAAZ,CAArB;AACD,KAFD,MAEO;AACLzH,MAAAA,MAAM,CAACvH,IAAP,CAAYkc,GAAZ;AACD;AACF,GAPD,MAOO;AACL,UAAMmK,oBAAoB,GAAG,IAAIzN,MAAJ,CAAY,IAAGuN,MAAO,SAAtB,CAA7B;AACA,QAAIG,YAAJ;AACA,QAAIC,aAAa,GAAG,EAApB;;AACA,SAAK,MAAMC,OAAX,IAAsBJ,QAAtB,EAAgC;AAC9B,UAAII,OAAO,KAAKL,MAAhB,EAAwB;AACtB,cAAM,IAAIrhB,KAAJ,CAAW,yEAAwE0hB,OAAQ,EAA3F,CAAN;AACD;;AACD,UAAIA,OAAO,CAACC,MAAR,CAAeN,MAAM,CAAC1f,MAAtB,MAAkC,GAAtC,EAA2C;AACzCsB,QAAAA,OAAK,CAAE,0CAAyCye,OAAQ,iBAAgBL,MAAO,EAA1E,CAAL;AACA;AACD;;AACD,UAAIO,iBAAiB,GAAGF,OAAO,CAACzN,KAAR,CAAcsN,oBAAd,CAAxB;AACAK,MAAAA,iBAAiB,GAAIA,iBAAiB,IAAIA,iBAAiB,CAACjgB,MAAxC,GAAkDigB,iBAAiB,CAAC,CAAD,CAAnE,GAAyEP,MAA7F;;AAEA,UAAIO,iBAAiB,KAAKF,OAA1B,EAAmC;AACjC,cAAMtK,GAAG,GAAGuG,UAAU,CAAC/Z,IAAI,CAAC8d,OAAD,CAAL,CAAtB;AACAjf,QAAAA,MAAM,CAACvH,IAAP,CAAYkc,GAAZ;AACD,OAHD,MAGO;AACL,YAAIwK,iBAAiB,IAAIF,OAAO,CAACC,MAAR,CAAeC,iBAAiB,CAACjgB,MAAjC,MAA6C,GAAtE,EAA2E;AACzE,gBAAM,IAAI3B,KAAJ,CAAW,kEAAiE0hB,OAAQ,iBAAgBL,MAAO,EAA3G,CAAN;AACD;;AAED,cAAMrb,GAAG,GAAG0b,OAAO,CAAC/a,MAAR,CAAeib,iBAAiB,CAACjgB,MAAlB,GAA2B,CAA1C,CAAZ;;AAEA,YAAI,CAACqE,GAAG,CAACrE,MAAT,EAAiB;AACf,gBAAM,IAAI3B,KAAJ,CAAW,gEAA+D0hB,OAAQ,iBAAgBL,MAAO,EAAzG,CAAN;AACD;;AAED,YAAIG,YAAY,IAAIA,YAAY,KAAKI,iBAArC,EAAwD;AACtDnf,UAAAA,MAAM,CAACvH,IAAP,CAAYumB,aAAZ;AACAA,UAAAA,aAAa,GAAG,EAAhB;AACD;;AAEDA,QAAAA,aAAa,CAACzb,GAAD,CAAb,GAAqB2X,UAAU,CAAC/Z,IAAI,CAAC8d,OAAD,CAAL,CAA/B;AACAF,QAAAA,YAAY,GAAGI,iBAAf;AACD;AACF;;AACD,QAAIH,aAAa,IAAID,YAArB,EAAmC;AACjC/e,MAAAA,MAAM,CAACvH,IAAP,CAAYumB,aAAZ;AACAA,MAAAA,aAAa,GAAG,IAAhB;AACAD,MAAAA,YAAY,GAAG,IAAf;AACD;AACF;;AAED,SAAO/e,MAAP;AACD,CA/DD;;;;;;;AC7BA,MAAMQ,OAAK,GAAGD,yBAAgB,CAAC,0BAAD,CAA9B;AAEA,MAAM;AAAEua,EAAAA;AAAF,IAAmBra,KAAzB;AAEA,MAAM2e,SAAS,GAAG;AAChBC,EAAAA,qBAAqB,EAAE3e,UADP;AAEhB4c,EAAAA,MAAM,EAAE3c,MAFQ;AAGhB2e,EAAAA,aAAa,EAAExS;AAHC,CAAlB;AAKA,MAAMyS,iBAAiB,GAAG,cAA1B;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAuBC,iBAA7B;;AAEA,WAAsB,GAAG,CAACzlB,YAAD,EAAegO,OAAf,KAA2B;AAClD,QAAM;AAAE7G,IAAAA,IAAF;AAAQ4a,IAAAA;AAAR,MAAqB/T,OAA3B;AACA,QAAM0X,OAAO,GAAGF,gBAAgB,CAACre,IAAD,EAAOoe,iBAAP,CAAhC;;AACA,MAAII,MAAM,CAAChW,QAAP,CAAgB3P,YAAhB,CAAJ,EAAmC;AACjCA,IAAAA,YAAY,GAAGA,YAAY,CAAC2F,QAAb,EAAf;AACD;;AAED,OAAK,MAAMigB,eAAX,IAA8BF,OAA9B,EAAuC;AACrC,QAAI,CAAEE,eAAe,CAACC,IAAtB,EAA6B;AAC3Brf,MAAAA,OAAK,CAAE,mCAAkCqR,wBAAI,CAACC,OAAL,CAAa8N,eAAb,CAA8B,EAAlE,CAAL;AACA,aAAO,IAAP;AACD;;AACD,UAAME,QAAQ,GAAGV,SAAS,CAACQ,eAAe,CAACC,IAAjB,CAA1B;;AAEA,QAAI,CAACC,QAAL,EAAe;AACb,YAAM,IAAIviB,KAAJ,CAAW,eAAcsU,wBAAI,CAACC,OAAL,CAAa8N,eAAe,CAACC,IAA7B,CAAmC,yBAAwBhO,wBAAI,CAACC,OAAL,CAAa8N,eAAb,CAA8B,EAAlH,CAAN;AACD;;AAED,UAAM5f,MAAM,GAAG8f,QAAQ,CAACC,UAAT,CAAoB5e,IAApB,EAA0BnH,YAA1B,EAAwC4lB,eAAxC,EAAyD7D,QAAzD,CAAf;;AACA,QAAI/b,MAAJ,EAAY;AACV,UAAI,CAACA,MAAM,CAAChG,YAAZ,EAA0B;AACxB,eAAO,IAAP;AACD;;AACD,UAAI8gB,YAAY,CAAC9a,MAAM,CAAChG,YAAR,EAAsB,KAAtB,CAAhB,EAA8C;AAC5CgG,QAAAA,MAAM,CAAChG,YAAP,GAAsB4E,IAAI,CAACC,SAAL,CAAemB,MAAM,CAAChG,YAAtB,CAAtB;AACD;;AAEDgG,MAAAA,MAAM,CAACggB,WAAP,GAAqBJ,eAAe,CAACC,IAArC,CARU;;AAUV,aAAO7f,MAAP;AACD;AACF;AACF,CAhCD;;;;;;ACXA,kBAAc,GAAG,MAAMigB,YAAN,CAAmB;AAClC9nB,EAAAA,WAAW,CAAE;AAAE+nB,IAAAA,SAAF;AAAaC,IAAAA,gBAAb;AAA+BC,IAAAA,aAA/B;AAA8CC,IAAAA,oBAA9C;AAAoE7H,IAAAA,gBAApE;AAAsF1N,IAAAA,eAAtF;AAAuGE,IAAAA,gBAAvG;AAAyHD,IAAAA,gBAAzH;AAA2IzQ,IAAAA;AAA3I,GAAF,EAAgK6G,IAAI,GAAG,EAAvK,EAA2K;AACpL,SAAK1D,OAAL,GAAe;AACbyiB,MAAAA,SADa;AAEbC,MAAAA,gBAFa;AAGbC,MAAAA,aAHa;AAIbC,MAAAA,oBAJa;AAKb7H,MAAAA,gBALa;AAMb1N,MAAAA,eANa;AAObE,MAAAA,gBAPa;AAQbD,MAAAA,gBARa;AASbzQ,MAAAA;AATa,KAAf;AAWA,SAAK6G,IAAL,GAAYA,IAAZ;AACD;;AAEDmf,EAAAA,QAAQ,GAAI;;AAGZC,EAAAA,UAAU,CAAEvmB,YAAF,EAAgB;AACxB,UAAMW,MAAM,GAAG,KAAKZ,OAAL,CAAaC,YAAb,CAAf;;AACA,QAAIW,MAAJ,EAAY;AACV,aAAOA,MAAM,CAAC+E,GAAP,CAAY9E,KAAD,IAAWA,KAAK,CAACsZ,MAA5B,CAAP;AACD,KAFD,MAEO;AACL,aAAO,EAAP;AACD;AACF;;AAEDna,EAAAA,OAAO,CAAEC,YAAF,EAAgBE,UAAhB,EAA4B;AACjC,UAAM,IAAIqD,KAAJ,CAAU,iBAAV,CAAN;AACD;;AAEDijB,EAAAA,SAAS,CAAE7lB,MAAF,EAAU;AACjB,UAAM,IAAI4C,KAAJ,CAAU,iBAAV,CAAN;AACD;;AAEDkjB,EAAAA,uBAAuB,CAAEC,GAAF,EAAO;AAC5B,QAAI,CAAC,KAAKvf,IAAL,CAAUuf,GAAV,CAAL,EAAqB;AACnB,YAAM,IAAInjB,KAAJ,CAAW,uBAAsBmjB,GAAI,UAArC,CAAN;AACD;AACF;;AAEDC,EAAAA,sBAAsB,CAAED,GAAF,EAAOE,GAAG,GAAG,IAAb,EAAmB;AACvC,QAAI1lB,0BAAC,CAAC6O,WAAF,CAAc,KAAK5I,IAAL,CAAUuf,GAAV,CAAd,CAAJ,EAAmC;AACjC,aAAOE,GAAP;AACD;;AAED,WAAO,KAAKzf,IAAL,CAAUuf,GAAV,CAAP;AACD;;AAEDG,EAAAA,wBAAwB,CAAEjC,MAAF,EAAU;AAChC,UAAM5e,MAAM,GAAG,EAAf;AACA1E,IAAAA,MAAM,CAAC+H,IAAP,CAAY,KAAKlC,IAAjB,EAAuBhD,OAAvB,CAAgCoF,GAAD,IAAS;AACtC,UAAIA,GAAG,CAACsG,UAAJ,CAAe+U,MAAf,CAAJ,EAA4B;AAC1B5e,QAAAA,MAAM,CAACuD,GAAD,CAAN,GAAc,KAAKpC,IAAL,CAAUoC,GAAV,CAAd;AACD;AACF,KAJD;AAKA,WAAOvD,MAAP;AACD;;AA1DiC,CAApC;;ACCA,eAAc,GAAG,MAAM8gB,SAAN,CAAgB;AAC/B3oB,EAAAA,WAAW,CAAEwN,QAAQ,GAAG,EAAb,EAAiB;AAC1B,SAAK/H,IAAL,GAAY+H,QAAQ,CAAC/H,IAArB;AACA,SAAKuW,SAAL,GAAiBxO,QAAQ,CAACwO,SAA1B;AACA,SAAKnC,UAAL,GAAkB,EAAlB;;AACA,QAAIrM,QAAQ,CAACqM,UAAT,IAAuB9W,0BAAC,CAACgD,OAAF,CAAUyH,QAAQ,CAACqM,UAAnB,CAA3B,EAA2D;AACzD,WAAKA,UAAL,GAAkBrM,QAAQ,CAACqM,UAA3B;AACD,KAFD,MAEO,IAAIrM,QAAQ,CAACqM,UAAb,EAAyB;AAC9B,WAAKA,UAAL,CAAgBvZ,IAAhB,CAAqBkN,QAAQ,CAACqM,UAA9B;AACD;AACF;;AAEDrS,EAAAA,QAAQ,GAAI;AAAE,WAAO,KAAK/B,IAAL,IAAa,KAAKuW,SAAL,GAAkB,KAAItC,wBAAI,CAACC,OAAL,CAAa,KAAKqC,SAAlB,CAA6B,GAAnD,GAAwD,EAArE,IAA2E,IAA3E,GAAkF,KAAKnC,UAAL,CAAgBjT,IAAhB,CAAqB,GAArB,CAAzF;AAAoH;;AAZnG,CAAjC;;ACAA,MAAMyB,OAAK,GAAGD,yBAAgB,CAAC,0BAAD,CAA9B;AAMA,MAAM;AAAEyT,SAAAA;AAAF,IAAYvT,OAAlB;AACA,MAAM;AAAE2J,oBAAAA,kBAAF;AAAoBsC,oBAAAA,kBAApB;AAAsCR,iBAAAA;AAAtC,IAAwDxL,MAA9D;AAEA,kBAAc,GAAG,MAAMqgB,YAAN,SAA2Bd,cAA3B,CAAwC;AACvD9nB,EAAAA,WAAW,CAAEsF,OAAF,EAAW0D,IAAI,GAAG,EAAlB,EAAsB;AAC/B,UAAM1D,OAAN,EAAe0D,IAAf;AAEA,SAAK6f,QAAL,GAAgB,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,EAA6D,GAA7D,EAAkE,GAAlE,EAAuE,GAAvE,EAA4E,GAA5E,EAAiF,GAAjF,EAAsF,GAAtF,EAA2F,GAA3F,EAAgG,GAAhG,EAAqG,GAArG,EAA0G,GAA1G,EAA+G,GAA/G,EAAoH,GAApH,EAAyH,GAAzH,EAA8H,GAA9H,CAAhB;AACD;;AAEDC,EAAAA,gBAAgB,CAAEC,UAAF,EAAc;AAC5B,QAAIA,UAAJ,EAAgB,OAAOA,UAAU,CAAChY,KAAX,CAAiB,aAAjB,CAAP;AACjB;;AAEDiY,EAAAA,iBAAiB,CAAED,UAAF,EAAcE,SAAd,EAAyB;AACxC,UAAMC,kBAAkB,GAAGH,UAAU,CAAC5X,MAAX,CAAkBgY,SAAS,IAAI,CAAC,CAACF,SAAS,CAAC3e,IAAV,CAAe8e,QAAQ,IAAIA,QAAQ,KAAK,GAAb,IAAoBD,SAAS,KAAKC,QAA7D,CAAjC,CAA3B;AACA/gB,IAAAA,OAAK,CAAE,iCAAgC5B,IAAI,CAACC,SAAL,CAAeqiB,UAAf,CAA2B,gBAAetiB,IAAI,CAACC,SAAL,CAAeuiB,SAAf,CAA0B,yBAAwBxiB,IAAI,CAACC,SAAL,CAAewiB,kBAAf,CAAmC,GAAjK,CAAL;AACA,WAAOA,kBAAP;AACD;;AAEDf,EAAAA,QAAQ,GAAI;AACV,UAAMA,QAAN;;AAEA,QAAI,KAAKnf,IAAL,CAAUtJ,YAAY,CAAChD,uBAAvB,MAAoDmV,SAAxD,EAAmE;AACjE,UAAI9O,0BAAC,CAACiI,QAAF,CAAW,KAAKhC,IAAL,CAAUtJ,YAAY,CAAChD,uBAAvB,CAAX,KAA+D,KAAKmsB,QAAL,CAAc9N,SAAd,CAAyBrL,CAAD,IAAOA,CAAC,KAAK,KAAK1G,IAAL,CAAUtJ,YAAY,CAAChD,uBAAvB,CAArC,IAAwF,CAA3J,EAA8J;AAC5J,cAAM,IAAI0I,KAAJ,CAAW,2BAA0B,KAAK4D,IAAL,CAAUtJ,YAAY,CAAChD,uBAAvB,CAAgD,gBAArF,CAAN;AACD,OAFD,MAEO,IAAI,KAAKsM,IAAL,CAAUtJ,YAAY,CAAChD,uBAAvB,IAAkD,CAAlD,IAAuD,KAAKsM,IAAL,CAAUtJ,YAAY,CAAChD,uBAAvB,IAAkD,KAAKmsB,QAAL,CAAc9hB,MAA3H,EAAmI;AACxI,cAAM,IAAI3B,KAAJ,CAAW,2BAA0B,KAAK4D,IAAL,CAAUtJ,YAAY,CAAChD,uBAAvB,CAAgD,eAAc,KAAKmsB,QAAL,CAAc9hB,MAAO,GAAxH,CAAN;AACD;AACF;AACF;;AAEDnF,EAAAA,OAAO,CAAEC,YAAF,EAAgBE,UAAU,GAAGsnB,SAAS,CAAClc,oBAAvC,EAA6D;AAClE,UAAMmc,QAAQ,GAAGC,wBAAI,CAACC,IAAL,CAAU3nB,YAAV,EAAwB;AAAEqE,MAAAA,IAAI,EAAE;AAAR,KAAxB,CAAjB;AACA,QAAI,CAACojB,QAAL,EAAe,MAAM,IAAIlkB,KAAJ,CAAU,uBAAV,CAAN;AAEfiD,IAAAA,OAAK,CAAE,2BAA0BihB,QAAQ,CAACG,KAAT,GAAiBhjB,IAAI,CAACC,SAAL,CAAe4iB,QAAQ,CAACG,KAAxB,CAAjB,GAAkD,QAAS,EAAvF,CAAL;AACA,UAAMvX,GAAG,GAAG,KAAKlJ,IAAL,CAAUtJ,YAAY,CAAClD,wBAAvB,CAAZ;AACA,UAAMktB,gBAAgB,GAAG,EAAzB;AAEA,QAAIX,UAAU,GAAG,EAAjB;;AACA,QAAIhnB,UAAU,KAAKsnB,SAAS,CAAClc,oBAA7B,EAAmD;AACjD,UAAI,KAAKnE,IAAL,CAAUtJ,YAAY,CAAC7C,yBAAvB,CAAJ,EAAuD;AACrDksB,QAAAA,UAAU,GAAG,KAAKC,iBAAL,CAAuBM,QAAQ,CAACK,UAAhC,EAA4C,KAAKb,gBAAL,CAAsB,KAAK9f,IAAL,CAAUtJ,YAAY,CAAC7C,yBAAvB,CAAtB,CAA5C,CAAb;AACD,OAFD,MAEO;AACLksB,QAAAA,UAAU,GAAGO,QAAQ,CAACK,UAAT,CAAoBxY,MAApB,CAA2BH,CAAC,IAAI,CAACA,CAAC,CAACS,WAAF,GAAgB3F,OAAhB,CAAwB,OAAxB,KAAoC,CAApC,IAAyCkF,CAAC,CAACS,WAAF,GAAgB3F,OAAhB,CAAwB,QAAxB,KAAqC,CAA/E,KAAqFkF,CAAC,CAACS,WAAF,GAAgB3F,OAAhB,CAAwB,SAAxB,IAAqC,CAA1J,KAAgK,EAA7K;AACD;AACF,KAND,MAMO,IAAI/J,UAAU,KAAKsnB,SAAS,CAACjc,qBAA7B,EAAoD;AACzD,UAAI,KAAKpE,IAAL,CAAUtJ,YAAY,CAAC5C,iCAAvB,CAAJ,EAA+D;AAC7DisB,QAAAA,UAAU,GAAG,KAAKC,iBAAL,CAAuBM,QAAQ,CAACK,UAAhC,EAA4C,KAAKb,gBAAL,CAAsB,KAAK9f,IAAL,CAAUtJ,YAAY,CAAC5C,iCAAvB,CAAtB,CAA5C,CAAb;AACD,OAFD,MAEO;AACLisB,QAAAA,UAAU,GAAGO,QAAQ,CAACK,UAAT,CAAoBxY,MAApB,CAA2BH,CAAC,IAAIA,CAAC,CAACS,WAAF,GAAgB3F,OAAhB,CAAwB,SAAxB,KAAsC,CAAtE,KAA4E,EAAzF;AACD;AACF,KANM,MAMA,IAAI/J,UAAU,KAAKsnB,SAAS,CAAChc,yBAA7B,EAAwD;AAC7D,UAAI,KAAKrE,IAAL,CAAUtJ,YAAY,CAAC3C,oCAAvB,CAAJ,EAAkE;AAChEgsB,QAAAA,UAAU,GAAG,KAAKC,iBAAL,CAAuBM,QAAQ,CAACK,UAAhC,EAA4C,KAAKb,gBAAL,CAAsB,KAAK9f,IAAL,CAAUtJ,YAAY,CAAC3C,oCAAvB,CAAtB,CAA5C,CAAb;AACD,OAFD,MAEO;AACLgsB,QAAAA,UAAU,GAAGO,QAAQ,CAACK,UAAT,CAAoBxY,MAApB,CAA2BH,CAAC,IAAIA,CAAC,CAACS,WAAF,GAAgB3F,OAAhB,CAAwB,OAAxB,KAAoC,CAApE,KAA0E,EAAvF;AACD;AACF,KANM,MAMA,IAAI/J,UAAU,KAAKsnB,SAAS,CAAC/b,+BAA7B,EAA8D;AACnE,UAAI,KAAKtE,IAAL,CAAUtJ,YAAY,CAAC1C,0CAAvB,CAAJ,EAAwE;AACtE+rB,QAAAA,UAAU,GAAG,KAAKC,iBAAL,CAAuBM,QAAQ,CAACK,UAAhC,EAA4C,KAAKb,gBAAL,CAAsB,KAAK9f,IAAL,CAAUtJ,YAAY,CAAC1C,0CAAvB,CAAtB,CAA5C,CAAb;AACD,OAFD,MAEO;AACL+rB,QAAAA,UAAU,GAAGO,QAAQ,CAACK,UAAT,CAAoBxY,MAApB,CAA2BH,CAAC,IAAIA,CAAC,CAACS,WAAF,GAAgB3F,OAAhB,CAAwB,QAAxB,KAAqC,CAArC,IAA0CkF,CAAC,CAACS,WAAF,GAAgB3F,OAAhB,CAAwB,WAAxB,KAAwC,CAAlH,KAAwH,EAArI;AACD;AACF,KANM,MAMA;AACL,YAAM1G,KAAK,CAAE,uBAAsBrD,UAAW,EAAnC,CAAX;AACD;;AAEDsG,IAAAA,OAAK,CAAE,mBAAkBtG,UAAW,KAAI2X,wBAAI,CAACC,OAAL,CAAaoP,UAAb,CAAyB,EAA5D,CAAL;AAEA,UAAMa,aAAa,GAAG,EAAtB;AAEAb,IAAAA,UAAU,CAAC/iB,OAAX,CAAoBmjB,SAAD,IAAe;AAChC,YAAMU,KAAK,GAAGP,QAAQ,CAACQ,MAAT,CAAgBX,SAAhB,CAAd;AACA,UAAI,CAACU,KAAL,EAAY;;AAEZ,UAAI;AAAEE,QAAAA,QAAF;AAAYC,QAAAA,QAAZ;AAAsBC,QAAAA;AAAtB,UAAqC,KAAKC,WAAL,CAAiBL,KAAjB,EAAwB9nB,UAAxB,CAAzC;;AACAsG,MAAAA,OAAK,CAAE,6BAA4BtG,UAAW,KAAI2X,wBAAI,CAACC,OAAL,CAAawP,SAAb,CAAwB,cAAaY,QAAS,cAAaC,QAAS,EAAjH,CAAL;;AAEA,UAAIjoB,UAAU,KAAKsnB,SAAS,CAAClc,oBAAzB,IAAiDpL,UAAU,KAAKsnB,SAAS,CAACjc,qBAA9E,EAAqG;AACnG,cAAM+c,SAAS,GAAG,CAAC9Z,MAAD,EAAS3B,OAAT,KAAqB;AACrC,cAAI,CAACA,OAAL,EAAc,OAAO;AAAExL,YAAAA,WAAW,EAAE;AAAf,WAAP;AAEd,cAAI,CAACH,0BAAC,CAACiI,QAAF,CAAW0D,OAAX,CAAL,EAA0BA,OAAO,GAAG,KAAKA,OAAf;AAE1B,cAAI0b,QAAQ,GAAG,IAAf;AACA,cAAIvkB,KAAK,GAAG,EAAZ;;AACA,cAAI6I,OAAO,CAAC5C,OAAR,CAAgB,IAAhB,KAAyB,CAA7B,EAAgC;AAC9Bse,YAAAA,QAAQ,GAAG,IAAX;AACD,WAFD,MAEO,IAAI1b,OAAO,CAAC5C,OAAR,CAAgB,IAAhB,KAAyB,CAA7B,EAAgC;AACrCse,YAAAA,QAAQ,GAAG,IAAX;AACD;;AAED,cAAIA,QAAJ,EAAc;AACZvkB,YAAAA,KAAK,GAAG6I,OAAO,CAACqC,KAAR,CAAcqZ,QAAd,EAAwB7iB,GAAxB,CAA4BiN,CAAC,IAAIA,CAAC,CAACvD,IAAF,EAAjC,EAA2CE,MAA3C,CAAkDqD,CAAC,IAAIA,CAAvD,CAAR;AACD,WAFD,MAEO;AACL3O,YAAAA,KAAK,GAAG,CAAC6I,OAAO,CAACuC,IAAR,EAAD,CAAR;AACD;;AAED,iBAAOgB,kBAAgB,CAACpM,KAAD,EAAQwK,MAAR,EAAgB,KAAK/K,OAArB,EAA8B4M,GAA9B,CAAvB;AACD,SApBD;;AAsBA,cAAMmY,WAAW,GAAIN,QAAD,IAAc;AAChC,gBAAMO,KAAK,GAAG,KAAKzB,QAAL,CAAcmB,QAAd,IAA0BD,QAAxC;AACA,gBAAMQ,UAAU,GAAIV,KAAK,CAACS,KAAD,CAAL,IAAgBT,KAAK,CAACS,KAAD,CAAL,CAAavY,CAA9B,IAAoC,IAAvD;AACA,gBAAMyY,KAAK,GAAG,KAAK3B,QAAL,CAAcmB,QAAQ,GAAG,CAAzB,IAA8BD,QAA5C;AACA,gBAAMU,UAAU,GAAIZ,KAAK,CAACW,KAAD,CAAL,IAAgBX,KAAK,CAACW,KAAD,CAAL,CAAazY,CAA9B,IAAoC,IAAvD;AACA,gBAAM2Y,KAAK,GAAG,KAAK7B,QAAL,CAAcmB,QAAQ,GAAG,CAAzB,IAA8BD,QAA5C;AACA,gBAAMY,UAAU,GAAId,KAAK,CAACa,KAAD,CAAL,IAAgBb,KAAK,CAACa,KAAD,CAAL,CAAa3Y,CAA9B,IAAoC,IAAvD;;AAEA,cAAIkY,UAAJ,EAAgB;AACd,mBAAO;AACLW,cAAAA,QAAQ,EAAEN,KADL;AAELO,cAAAA,aAAa,EAAEN,UAFV;AAGLO,cAAAA,MAAM,EAAEN,KAHH;AAILO,cAAAA,WAAW,EAAEN,UAJR;AAKLO,cAAAA,OAAO,EAAEN,KALJ;AAMLO,cAAAA,YAAY,EAAEN;AANT,aAAP;AAQD,WATD,MASO;AACL,mBAAO;AACLC,cAAAA,QAAQ,EAAE,IADL;AAELC,cAAAA,aAAa,EAAE,IAFV;AAGLC,cAAAA,MAAM,EAAER,KAHH;AAILS,cAAAA,WAAW,EAAER,UAJR;AAKLS,cAAAA,OAAO,EAAER,KALJ;AAMLS,cAAAA,YAAY,EAAER;AANT,aAAP;AAQD;AACF,SA3BD;;AA6BA,YAAIS,kBAAkB,GAAG,KAAK1C,sBAAL,CAA4B9oB,YAAY,CAACnD,mBAAzC,CAAzB;;AACA,YAAI2uB,kBAAkB,KAAK,IAA3B,EAAiC;AAC/BA,UAAAA,kBAAkB,GAAGA,kBAAkB,KAAK,iBAA5C;AACA7iB,UAAAA,OAAK,CAAE,yBAAwB6iB,kBAAmB,eAA7C,CAAL;AACD,SAHD,MAGO;AACL,cAAIC,aAAa,GAAG,CAApB;AACA,cAAIC,KAAK,GAAG,CAAZ;AACA,gBAAMC,WAAW,GAAG,EAApB;AACA,gBAAMC,cAAc,GAAG,EAAvB;;AAEA,iBAAOH,aAAa,IAAIzB,gBAAxB,EAA0C;AACxC,kBAAM;AAAEoB,cAAAA,MAAF;AAAUC,cAAAA,WAAV;AAAuBC,cAAAA,OAAvB;AAAgCC,cAAAA;AAAhC,gBAAiDZ,WAAW,CAACN,QAAQ,GAAGqB,KAAZ,CAAlE;;AACA,gBAAI,CAACL,WAAD,IAAgB,CAACE,YAArB,EAAmC;AACjCE,cAAAA,aAAa;AACd,aAFD,MAEO,IAAIJ,WAAW,IAAIE,YAAnB,EAAiC;AACtCI,cAAAA,WAAW,CAAC/qB,IAAZ,CAAiBwqB,MAAjB;AACD,aAFM,MAEA,IAAIC,WAAW,IAAI,CAACE,YAApB,EAAkC;AACvCK,cAAAA,cAAc,CAAChrB,IAAf,CAAoBwqB,MAApB;AACD,aAFM,MAEA,IAAI,CAACC,WAAD,IAAgBE,YAApB,EAAkC;AACvCK,cAAAA,cAAc,CAAChrB,IAAf,CAAoB0qB,OAApB;AACD;;AACDI,YAAAA,KAAK;AACN;;AACD,cAAIC,WAAW,CAACtkB,MAAZ,GAAqB,CAArB,IAA0BukB,cAAc,CAACvkB,MAAf,GAAwB,CAAtD,EAAyD;AACvD,kBAAM,IAAI3B,KAAJ,CAAW,gBAAe+jB,SAAU,6DAA4DkC,WAAW,CAAC3a,KAAZ,CAAkB,CAAlB,EAAqB,CAArB,EAAwB9J,IAAxB,CAA6B,GAA7B,CAAkC,sCAAqC0kB,cAAc,CAAC5a,KAAf,CAAqB,CAArB,EAAwB,CAAxB,EAA2B9J,IAA3B,CAAgC,GAAhC,CAAqC,GAA5M,CAAN;AACD,WAFD,MAEO,IAAIykB,WAAW,CAACtkB,MAAZ,GAAqB,CAArB,IAA0BukB,cAAc,CAACvkB,MAAf,KAA0B,CAAxD,EAA2D;AAChEmkB,YAAAA,kBAAkB,GAAG,IAArB;AACA7iB,YAAAA,OAAK,CAAC,wDAAD,CAAL;AACD,WAHM,MAGA;AACL6iB,YAAAA,kBAAkB,GAAG,KAArB;AACA7iB,YAAAA,OAAK,CAAC,4DAAD,CAAL;AACD;AACF;;AAED,cAAMkjB,YAAY,GAAG,EAArB;AACA,YAAIC,YAAY,GAAG,EAAnB;AACA,YAAIC,gBAAgB,GAAG,IAAvB;AACA,YAAIN,aAAa,GAAG,CAApB;AACA,YAAIO,aAAa,GAAG,CAAC,CAArB;;AAEA,eAAO,IAAP,EAAa;AACX,gBAAM;AAAEb,YAAAA,aAAF;AAAiBC,YAAAA,MAAjB;AAAyBC,YAAAA,WAAzB;AAAsCC,YAAAA,OAAtC;AAA+CC,YAAAA;AAA/C,cAAgEZ,WAAW,CAACN,QAAD,CAAjF;;AAEA,cAAImB,kBAAJ,EAAwB;AACtB,gBAAIH,WAAW,IAAIE,YAAnB,EAAiC;AAC/BO,cAAAA,YAAY,GAAG,EAAf;AACAA,cAAAA,YAAY,CAAClrB,IAAb,CAAkB6C,MAAM,CAACC,MAAP,CAChB;AAAEiN,gBAAAA,MAAM,EAAE,IAAV;AAAgBwK,gBAAAA,OAAO,EAAE,UAAUiQ;AAAnC,eADgB,EAEhBX,SAAS,CAAC,IAAD,EAAOY,WAAP,CAFO,CAAlB;AAIAW,cAAAA,aAAa,GAAG3B,QAAhB;AACAyB,cAAAA,YAAY,CAAClrB,IAAb,CAAkB6C,MAAM,CAACC,MAAP,CAChB;AAAEiN,gBAAAA,MAAM,EAAE,KAAV;AAAiBwK,gBAAAA,OAAO,EAAE,UAAUmQ;AAApC,eADgB,EAEhBb,SAAS,CAAC,KAAD,EAAQc,YAAR,CAFO,CAAlB;AAIAM,cAAAA,YAAY,CAACjrB,IAAb,CAAkB,IAAIub,OAAJ,CAAU,KAAKvW,OAAf,EAAwB;AACxCyW,gBAAAA,MAAM,EAAE;AACNtW,kBAAAA,IAAI,EAAEolB,aAAa,IAAI,IADjB;AAEN1B,kBAAAA,SAFM;AAGNa,kBAAAA,QAHM;AAIND,kBAAAA,QAAQ,EAAE2B;AAJJ,iBADgC;AAOxCxX,gBAAAA,YAAY,EAAEsX;AAP0B,eAAxB,CAAlB;AASD,aApBD,MAoBO;AACLL,cAAAA,aAAa;AACd;AACF,WAxBD,MAwBO;AACL,gBAAIK,YAAY,CAACzkB,MAAb,KAAwB,CAA5B,EAA+B;AAC7B0kB,cAAAA,gBAAgB,GAAGZ,aAAa,IAAI,IAApC;AACD;;AACD,gBAAIE,WAAJ,EAAiB;AACfS,cAAAA,YAAY,CAAClrB,IAAb,CAAkB6C,MAAM,CAACC,MAAP,CAChB;AAAEiN,gBAAAA,MAAM,EAAE,IAAV;AAAgBwK,gBAAAA,OAAO,EAAE,UAAUiQ;AAAnC,eADgB,EAEhBX,SAAS,CAAC,IAAD,EAAOY,WAAP,CAFO,CAAlB;AAIA,kBAAIW,aAAa,GAAG,CAApB,EAAuBA,aAAa,GAAG3B,QAAhB;AACvBoB,cAAAA,aAAa,GAAG,CAAhB;AACD,aAPD,MAOO,IAAIF,YAAJ,EAAkB;AACvBO,cAAAA,YAAY,CAAClrB,IAAb,CAAkB6C,MAAM,CAACC,MAAP,CAChB;AAAEiN,gBAAAA,MAAM,EAAE,KAAV;AAAiBwK,gBAAAA,OAAO,EAAE,UAAUmQ;AAApC,eADgB,EAEhBb,SAAS,CAAC,KAAD,EAAQc,YAAR,CAFO,CAAlB;AAIA,kBAAIS,aAAa,GAAG,CAApB,EAAuBA,aAAa,GAAG3B,QAAhB;AACvBoB,cAAAA,aAAa,GAAG,CAAhB;AACD,aAPM,MAOA;AACL,kBAAIK,YAAY,CAACzkB,MAAb,GAAsB,CAA1B,EAA6B;AAC3BwkB,gBAAAA,YAAY,CAACjrB,IAAb,CAAkB,IAAIub,OAAJ,CAAU,KAAKvW,OAAf,EAAwB;AACxCyW,kBAAAA,MAAM,EAAE;AACNtW,oBAAAA,IAAI,EAAEgmB,gBADA;AAENtC,oBAAAA,SAFM;AAGNa,oBAAAA,QAHM;AAIND,oBAAAA,QAAQ,EAAE2B;AAJJ,mBADgC;AAOxCxX,kBAAAA,YAAY,EAAEsX;AAP0B,iBAAxB,CAAlB;AASD;;AACDA,cAAAA,YAAY,GAAG,EAAf;AACAC,cAAAA,gBAAgB,GAAG,IAAnB;AACAC,cAAAA,aAAa,GAAG,CAAC,CAAjB;AACAP,cAAAA,aAAa;AACd;AACF;;AACDpB,UAAAA,QAAQ;AAER,cAAIoB,aAAa,GAAGzB,gBAApB,EAAsC;AACvC;;AAED,YAAI6B,YAAY,CAACxkB,MAAb,GAAsB,CAA1B,EAA6B;AAC3B,gBAAM4kB,YAAY,GAAGnI,IAAI,CAACoI,GAAL,CAAS,CAAT,EAAa,GAAEL,YAAY,CAACA,YAAY,CAACxkB,MAAb,GAAsB,CAAvB,CAAZ,CAAsCgV,MAAtC,CAA6CgO,QAAS,EAAzD,CAA2DhjB,MAAvE,CAArB;AACA,gBAAM8kB,UAAU,GAAG,IAAIzd,MAAJ,CAAWud,YAAX,CAAnB;;AACA,gBAAMG,cAAc,GAAI/B,QAAD,IAAc,CAAC8B,UAAU,GAAI,GAAE9B,QAAS,EAA1B,EAA6BrZ,KAA7B,CAAmC,CAAC,CAAD,GAAKib,YAAxC,CAArC;;AACAJ,UAAAA,YAAY,CAACvlB,OAAb,CAAqBvD,KAAK,IAAI;AAC5B,gBAAI,CAACA,KAAK,CAACsZ,MAAN,CAAatW,IAAlB,EAAwB;AACtBhD,cAAAA,KAAK,CAACsZ,MAAN,CAAatW,IAAb,GAAqB,GAAEhD,KAAK,CAACsZ,MAAN,CAAaoN,SAAU,IAAG,KAAKN,QAAL,CAAcpmB,KAAK,CAACsZ,MAAN,CAAaiO,QAA3B,CAAqC,GAAE8B,cAAc,CAACrpB,KAAK,CAACsZ,MAAN,CAAagO,QAAd,CAAwB,EAA9H;AACD;;AACDtnB,YAAAA,KAAK,CAACsZ,MAAN,CAAa/C,IAAb,GAAoBvW,KAAK,CAACsZ,MAAN,CAAatW,IAAjC;AACAmkB,YAAAA,aAAa,CAACtpB,IAAd,CAAmBmC,KAAnB;AACD,WAND;AAOD;AACF;;AAED,UAAIV,UAAU,KAAKsnB,SAAS,CAAChc,yBAA7B,EAAwD;AACtD,YAAI0e,gBAAgB,GAAG,IAAvB;AACA,YAAIC,UAAU,GAAG,CAAjB;;AACA,eAAO,IAAP,EAAa;AACX,gBAAMpB,QAAQ,GAAG,KAAK/B,QAAL,CAAcmB,QAAd,IAA0BD,QAA3C;AACA,gBAAMkC,OAAO,GAAG,KAAKpD,QAAL,CAAcmB,QAAQ,GAAG,CAAzB,IAA8BD,QAA9C;;AAEA,cAAIF,KAAK,CAACe,QAAD,CAAL,IAAmBf,KAAK,CAACe,QAAD,CAAL,CAAgB7Y,CAAnC,IAAwC8X,KAAK,CAACoC,OAAD,CAA7C,IAA0DpC,KAAK,CAACoC,OAAD,CAAL,CAAela,CAA7E,EAAgF;AAC9Ega,YAAAA,gBAAgB,GAAG,IAAIpD,WAAJ,CAAc;AAAEljB,cAAAA,IAAI,EAAEokB,KAAK,CAACe,QAAD,CAAL,CAAgB7Y,CAAxB;AAA2B8H,cAAAA,UAAU,EAAE,CAAE,GAAEgQ,KAAK,CAACoC,OAAD,CAAL,CAAela,CAAE,EAArB;AAAvC,aAAd,CAAnB;AACA6X,YAAAA,aAAa,CAACtpB,IAAd,CAAmByrB,gBAAnB;AACAC,YAAAA,UAAU,GAAG,CAAb;AACD,WAJD,MAIO,IAAInC,KAAK,CAACoC,OAAD,CAAL,IAAkBpC,KAAK,CAACoC,OAAD,CAAL,CAAela,CAArC,EAAwC;AAC7C,gBAAIga,gBAAJ,EAAsBA,gBAAgB,CAAClS,UAAjB,CAA4BvZ,IAA5B,CAAkC,GAAEupB,KAAK,CAACoC,OAAD,CAAL,CAAela,CAAE,EAArD;AACtBia,YAAAA,UAAU,GAAG,CAAb;AACD,WAHM,MAGA;AACLD,YAAAA,gBAAgB,GAAG,IAAnB;AACAC,YAAAA,UAAU;AACX;;AACDjC,UAAAA,QAAQ;AAER,cAAIiC,UAAU,GAAGtC,gBAAjB,EAAmC;AACpC;AACF;;AAED,UAAI3nB,UAAU,KAAKsnB,SAAS,CAAC/b,+BAA7B,EAA8D;AAC5D,cAAM4e,aAAa,GAAG,EAAtB;AACA,YAAIC,YAAY,GAAGnC,QAAQ,GAAG,CAA9B;;AACA,eAAO,IAAP,EAAa;AACX,gBAAMoC,gBAAgB,GAAG,KAAKvD,QAAL,CAAcsD,YAAd,IAA8BpC,QAAvD;;AACA,cAAIF,KAAK,CAACuC,gBAAD,CAAL,IAA2BvC,KAAK,CAACuC,gBAAD,CAAL,CAAwBra,CAAvD,EAA0D;AACxDma,YAAAA,aAAa,CAAC5rB,IAAd,CAAmBupB,KAAK,CAACuC,gBAAD,CAAL,CAAwBra,CAA3C;AACD,WAFD,MAEO;AACL;AACD;;AAEDoa,UAAAA,YAAY;AACb;;AAEDpC,QAAAA,QAAQ,IAAI,CAAZ;;AACA,eAAO,IAAP,EAAa;AACX,gBAAMsC,YAAY,GAAG,KAAKxD,QAAL,CAAcmB,QAAd,IAA0BD,QAA/C;;AACA,cAAIF,KAAK,CAACwC,YAAD,CAAL,IAAuBxC,KAAK,CAACwC,YAAD,CAAL,CAAoBta,CAA/C,EAAkD;AAChD,kBAAMua,QAAQ,GAAGzC,KAAK,CAACwC,YAAD,CAAL,CAAoBta,CAArC;AACA,kBAAMwa,MAAM,GAAG,EAAf;;AACA,iBAAK,IAAItY,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiY,aAAa,CAACnlB,MAAlC,EAA0CkN,CAAC,EAA3C,EAA+C;AAC7C,oBAAMuY,iBAAiB,GAAG,KAAK3D,QAAL,CAAcmB,QAAQ,GAAG,CAAX,GAAe/V,CAA7B,IAAkC8V,QAA5D;;AACA,kBAAIF,KAAK,CAAC2C,iBAAD,CAAL,IAA4B3C,KAAK,CAAC2C,iBAAD,CAAL,CAAyBza,CAAzD,EAA4D;AAC1Dwa,gBAAAA,MAAM,CAACL,aAAa,CAACjY,CAAD,CAAd,CAAN,GAA2B4V,KAAK,CAAC2C,iBAAD,CAAL,CAAyBza,CAAzB,CAA2BvK,QAA3B,EAA3B;AACD,eAFD,MAEO;AACL+kB,gBAAAA,MAAM,CAACL,aAAa,CAACjY,CAAD,CAAd,CAAN,GAA2B,IAA3B;AACD;AACF;;AACD8V,YAAAA,QAAQ,IAAI,CAAZ;AAEAH,YAAAA,aAAa,CAACtpB,IAAd,CAAmB;AAAEyb,cAAAA,MAAM,EAAE;AAAEtW,gBAAAA,IAAI,EAAE6mB;AAAR,eAAV;AAA8BC,cAAAA,MAAM,EAAEA;AAAtC,aAAnB;AACD,WAdD,MAcO;AACL;AACD;AACF;AACF;AACF,KAjPD;;AAmPA,QAAI3C,aAAa,IAAIA,aAAa,CAAC7iB,MAAd,GAAuB,CAA5C,EAA+C;AAC7C,UAAIhF,UAAU,KAAKsnB,SAAS,CAAClc,oBAA7B,EAAmD;AACjD,aAAK7H,OAAL,CAAayiB,SAAb,CAAuB6B,aAAvB;AACD,OAFD,MAEO,IAAI7nB,UAAU,KAAKsnB,SAAS,CAACjc,qBAA7B,EAAoD;AACzD,aAAK9H,OAAL,CAAa0iB,gBAAb,CAA8B4B,aAA9B;AACD,OAFM,MAEA,IAAI7nB,UAAU,KAAKsnB,SAAS,CAAChc,yBAA7B,EAAwD;AAC7D,aAAK/H,OAAL,CAAa2iB,aAAb,CAA2B2B,aAA3B;AACD,OAFM,MAEA,IAAI7nB,UAAU,KAAKsnB,SAAS,CAAC/b,+BAA7B,EAA8D;AACnE,aAAKhI,OAAL,CAAa4iB,oBAAb,CAAkC0B,aAAlC;AACD;;AACD,aAAOA,aAAP;AACD;AACF;;AAEDvB,EAAAA,SAAS,CAAE7lB,MAAF,EAAU;AACjB,UAAM0P,GAAG,GAAG,KAAKlJ,IAAL,CAAUtJ,YAAY,CAAClD,wBAAvB,CAAZ;AAEA,QAAI2sB,SAAS,GAAG,QAAhB;;AACA,QAAI,KAAKngB,IAAL,CAAUtJ,YAAY,CAAC7C,yBAAvB,CAAJ,EAAuD;AACrDssB,MAAAA,SAAS,GAAG,KAAKL,gBAAL,CAAsB,KAAK9f,IAAL,CAAUtJ,YAAY,CAAC7C,yBAAvB,CAAtB,EAAyE,CAAzE,CAAZ;AACD;;AACD,UAAMgoB,IAAI,GAAG,EAAb;AACA,UAAM1d,MAAM,GAAG,EAAf;;AACA,QAAI3E,MAAJ,EAAY;AACV,WAAK,IAAIyR,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGzR,MAAM,CAACuE,MAA3B,EAAmCkN,CAAC,EAApC,EAAwC;AACtC,cAAMxR,KAAK,GAAGD,MAAM,CAACyR,CAAD,CAApB;AACA,YAAI,CAACxR,KAAK,CAACyR,YAAX,EAAyB;AAEzB,cAAMF,gBAAgB,GAAGD,eAAa,CAACtR,KAAD,CAAtC;;AACA,YAAIuR,gBAAgB,CAAC7M,MAAjB,CAAwBJ,MAAxB,GAAiC,CAArC,EAAwC;AACtCI,UAAAA,MAAM,CAAC7G,IAAP,CAAY,GAAG0T,gBAAgB,CAAC7M,MAAjB,CAAwBI,GAAxB,CAA4Bmb,CAAC,IAAI,IAAItd,KAAJ,CAAW,SAAQ6O,CAAC,GAAG,CAAE,IAAGyO,CAAC,CAACrd,OAAQ,EAAtC,CAAjC,CAAf;AACD;;AAED5C,QAAAA,KAAK,CAACyR,YAAN,CAAmBlO,OAAnB,CAA4ByN,IAAD,IAAU;AACnC,cAAIgZ,WAAW,GAAG,EAAlB;AAEA,gBAAMC,SAAS,GAAGnY,kBAAgB,CAACd,IAAD,CAAlC;AACA,cAAIiZ,SAAS,IAAIA,SAAS,CAAC3lB,MAAV,GAAmB,CAApC,EAAuC0lB,WAAW,GAAGC,SAAS,CAAC9lB,IAAV,CAAesL,GAAf,CAAd;AAEvC2S,UAAAA,IAAI,CAACvkB,IAAL,CAAU;AAAE,aAACmT,IAAI,CAACpD,MAAN,GAAeoc;AAAjB,WAAV;AACD,SAPD;AAQA5H,QAAAA,IAAI,CAACvkB,IAAL,CAAU,EAAV;AACD;AACF;;AACD,QAAI6G,MAAM,CAACJ,MAAP,GAAgB,CAApB,EAAuB;AACrB,YAAM,IAAI3B,KAAJ,CAAU+B,MAAM,CAACI,GAAP,CAAWmb,CAAC,IAAIA,CAAC,CAACrd,OAAlB,EAA2BuB,IAA3B,CAAgC,KAAhC,CAAV,CAAN;AACD;;AAED,UAAM+lB,EAAE,GAAGpD,wBAAI,CAACqD,KAAL,CAAWC,QAAX,EAAX;AACA,UAAMC,EAAE,GAAGvD,wBAAI,CAACqD,KAAL,CAAWG,aAAX,CAAyBlI,IAAzB,EAA+B;AAAE9I,MAAAA,MAAM,EAAE,CAAC,IAAD,EAAO,KAAP;AAAV,KAA/B,CAAX;AACAwN,IAAAA,wBAAI,CAACqD,KAAL,CAAWI,iBAAX,CAA6BL,EAA7B,EAAiCG,EAAjC,EAAqC3D,SAArC;AACA,UAAM8D,UAAU,GAAG1D,wBAAI,CAAC2D,KAAL,CAAWP,EAAX,EAAe;AAAEzmB,MAAAA,IAAI,EAAE;AAAR,KAAf,CAAnB;AACA,WAAO+mB,UAAP;AACD;;AAEDE,EAAAA,IAAI,CAAEtD,KAAF,EAASE,QAAT,EAAmBC,QAAnB,EAA6B;AAC/B,UAAMoD,IAAI,GAAG,KAAKvE,QAAL,CAAcmB,QAAd,IAA0BD,QAAvC;AACA,UAAMsD,SAAS,GAAGxD,KAAK,CAACuD,IAAD,CAAL,IAAevD,KAAK,CAACuD,IAAD,CAAL,CAAYrb,CAA7C;AACA,WAAOsb,SAAP;AACD;;AAEDnD,EAAAA,WAAW,CAAEL,KAAF,EAAS9nB,UAAT,EAAqB;AAC9B,QAAIgoB,QAAQ,GAAG,KAAK/gB,IAAL,CAAUtJ,YAAY,CAACjD,uBAAvB,CAAf;AACA,QAAIutB,QAAQ,GAAG,KAAKhhB,IAAL,CAAUtJ,YAAY,CAAChD,uBAAvB,CAAf;AACA,QAAIutB,UAAU,GAAGlnB,0BAAC,CAACoR,GAAF,CAAM,KAAKnL,IAAX,EAAiBtJ,YAAY,CAAC/C,yBAA9B,IAA2D,CAAC,CAAC,KAAKqM,IAAL,CAAUtJ,YAAY,CAAC/C,yBAAvB,CAA7D,GAAiH,IAAlI;;AAEA,QAAIoG,0BAAC,CAACiI,QAAF,CAAW,KAAKhC,IAAL,CAAUtJ,YAAY,CAAChD,uBAAvB,CAAX,CAAJ,EAAiE;AAC/DstB,MAAAA,QAAQ,GAAG,KAAKnB,QAAL,CAAc9N,SAAd,CAAyBrL,CAAD,IAAOA,CAAC,KAAK,KAAK1G,IAAL,CAAUtJ,YAAY,CAAChD,uBAAvB,CAArC,CAAX;AACD,KAFD,MAEO,IAAIstB,QAAQ,KAAKnY,SAAjB,EAA4B;AACjCmY,MAAAA,QAAQ,GAAGA,QAAQ,GAAG,CAAtB;AACD;;AAED,QAAID,QAAQ,KAAKlY,SAAb,IAA0BmY,QAAQ,KAAKnY,SAA3C,EAAsD;;AAEpDyb,MAAAA,UAAU,EACV,KAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAG,IAAtB,EAA4BA,EAAE,EAA9B,EAAkC;AAChC,aAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAG,KAAK3E,QAAL,CAAc9hB,MAApC,EAA4CymB,EAAE,EAA9C,EAAkD;AAChD,cAAI,KAAKL,IAAL,CAAUtD,KAAV,EAAiB0D,EAAjB,EAAqBC,EAArB,CAAJ,EAA8B;AAC5B,gBAAIzrB,UAAU,KAAKsnB,SAAS,CAAC/b,+BAA7B,EAA8D;AAC5D,kBAAIkgB,EAAE,GAAG,CAAL,IAAU,KAAKL,IAAL,CAAUtD,KAAV,EAAiB0D,EAAE,GAAG,CAAtB,EAAyBC,EAAE,GAAG,CAA9B,CAAd,EAAgD;AAC9CzD,gBAAAA,QAAQ,GAAGwD,EAAX;AACAvD,gBAAAA,QAAQ,GAAGwD,EAAE,GAAG,CAAhB,CAF8C;;AAI9C,sBAAMF,UAAN;AACD;AACF,aAPD,MAOO;AACLvD,cAAAA,QAAQ,GAAGwD,EAAX;AACAvD,cAAAA,QAAQ,GAAGwD,EAAX,CAFK;;AAIL,oBAAMF,UAAN;AACD;AACF;AACF;AACF;;AACD,UAAIvrB,UAAU,KAAKsnB,SAAS,CAAC/b,+BAA7B,EAA8D;AAC5D,YAAIyc,QAAQ,KAAKlY,SAAb,IAA0B,KAAK7I,IAAL,CAAUtJ,YAAY,CAAC9C,yBAAvB,CAA9B,EAAiF;AAC/EmtB,UAAAA,QAAQ;AACT;AACF;AACF,KA3BD,MA2BO,IAAIA,QAAQ,KAAKlY,SAAb,IAA0BmY,QAAQ,KAAKnY,SAA3C,EAAsD;AAC3D,WAAK,IAAIoC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,IAApB,EAA0BA,CAAC,EAA3B,EAA+B;AAC7B,YAAI,KAAKkZ,IAAL,CAAUtD,KAAV,EAAiB5V,CAAjB,EAAoB+V,QAApB,CAAJ,EAAmC;AACjCD,UAAAA,QAAQ,GAAG9V,CAAX;AACA;AACD;AACF;;AACD,UAAI,KAAKjL,IAAL,CAAUtJ,YAAY,CAAC9C,yBAAvB,CAAJ,EAAuD;AACrDmtB,QAAAA,QAAQ;AACT;AACF,KAVM,MAUA,IAAIA,QAAQ,KAAKlY,SAAb,IAA0BmY,QAAQ,KAAKnY,SAA3C,EAAsD;AAC3D,WAAK,IAAIoC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK4U,QAAL,CAAc9hB,MAAlC,EAA0CkN,CAAC,EAA3C,EAA+C;AAC7C,YAAI,KAAKkZ,IAAL,CAAUtD,KAAV,EAAiBE,QAAjB,EAA2B9V,CAA3B,CAAJ,EAAmC;AACjC+V,UAAAA,QAAQ,GAAG/V,CAAX;AACA;AACD;AACF;AACF;;AAED,QAAIlR,0BAAC,CAACkb,MAAF,CAASgM,UAAT,CAAJ,EAA0B;AACxB,UAAIloB,UAAU,KAAKsnB,SAAS,CAAClc,oBAAzB,IAAiDpL,UAAU,KAAKsnB,SAAS,CAACjc,qBAA9E,EAAqG;AACnG,YAAI,KAAKpE,IAAL,CAAUtJ,YAAY,CAAC9C,yBAAvB,CAAJ,EAAuD;AACrD,cAAI,KAAKuwB,IAAL,CAAUtD,KAAV,EAAiBE,QAAQ,GAAG,CAA5B,EAA+BC,QAA/B,KAA4C,KAAKmD,IAAL,CAAUtD,KAAV,EAAiBE,QAAQ,GAAG,CAA5B,EAA+BC,QAAQ,GAAG,CAA1C,CAA5C,IAA4F,KAAKmD,IAAL,CAAUtD,KAAV,EAAiBE,QAAQ,GAAG,CAA5B,EAA+BC,QAAQ,GAAG,CAA1C,CAAhG,EAA8I;AAC5IC,YAAAA,UAAU,GAAG,IAAb;AACD;AACF;AACF;AACF;;AACD,WAAO;AAAEF,MAAAA,QAAF;AAAYC,MAAAA,QAAZ;AAAsBC,MAAAA;AAAtB,KAAP;AACD;;AAzbsD,CAAzD;;ACNA,MAAM;AAAE7P,EAAAA,WAAF;AAAeyB,SAAAA;AAAf,IAAyBzT,OAA/B;AACA,MAAM;AAAE6J,oBAAAA,kBAAF;AAAoBsC,EAAAA,gBAApB;AAAsCR,EAAAA,aAAtC;AAAqDD,gBAAAA;AAArD,IAAsExL,MAA5E;AAEA,iBAAc,GAAG,MAAMmlB,WAAN,SAA0B3F,cAA1B,CAAuC;AACtD9nB,EAAAA,WAAW,CAAEsF,OAAF,EAAW0D,IAAI,GAAG,EAAlB,EAAsB;AAC/B,UAAM1D,OAAN,EAAe0D,IAAf;AAEA,SAAKkJ,GAAL,GAAWlJ,IAAI,CAACtJ,YAAY,CAACpD,iBAAd,CAAf;AACD;;AAED6rB,EAAAA,QAAQ,GAAI;AACV,UAAMA,QAAN;;AACA,SAAKG,uBAAL,CAA6B5oB,YAAY,CAACpD,iBAA1C;AACD;;AAED8rB,EAAAA,UAAU,CAAEvmB,YAAF,EAAgB;AACxB,QAAIyiB,UAAU,GAAGziB,YAAjB;AACA,QAAI2lB,MAAM,CAAChW,QAAP,CAAgB3P,YAAhB,CAAJ,EAAmCyiB,UAAU,GAAGA,UAAU,CAAC9c,QAAX,EAAb;AAEnC,UAAM3B,KAAK,GAAGye,UAAU,CAACvT,KAAX,CAAiB,KAAKmB,GAAtB,CAAd;AAEA,UAAM6J,MAAM,GAAG,EAAf;;AAEA,QAAIlW,KAAK,IAAI,CAACA,KAAK,CAAC,CAAD,CAAL,CAAS6L,UAAT,CAAoB,GAApB,CAAd,EAAwC;AACtCqK,MAAAA,MAAM,CAACtW,IAAP,GAAcI,KAAK,CAAC,CAAD,CAAnB;AACD;;AACD,WAAO,IAAIuU,WAAJ,CAAgB2B,MAAhB,CAAP;AACD;;AAEDna,EAAAA,OAAO,CAAEC,YAAF,EAAgBE,UAAU,GAAGsnB,SAAS,CAAClc,oBAAvC,EAA6D;AAClE,QAAImX,UAAU,GAAGziB,YAAjB;AACA,QAAI2lB,MAAM,CAAChW,QAAP,CAAgB3P,YAAhB,CAAJ,EAAmCyiB,UAAU,GAAGA,UAAU,CAAC9c,QAAX,EAAb;;AAEnC,UAAM3B,KAAK,GAAG9C,0BAAC,CAACwE,GAAF,CAAM+c,UAAU,CAACvT,KAAX,CAAiB,KAAKmB,GAAtB,CAAN,EAAmCwb,IAAD,IAAUA,IAAI,CAACzc,IAAL,EAA5C,CAAd;;AAEA,QAAIlP,UAAU,KAAKsnB,SAAS,CAAClc,oBAA7B,EAAmD;AACjD,aAAO,KAAKwgB,aAAL,CAAmB9nB,KAAnB,EAA0B,KAA1B,CAAP;AACD,KAFD,MAEO,IAAI9D,UAAU,KAAKsnB,SAAS,CAACjc,qBAA7B,EAAoD;AACzD,aAAO,KAAKugB,aAAL,CAAmB9nB,KAAnB,EAA0B,IAA1B,CAAP;AACD,KAFM,MAEA,IAAI9D,UAAU,KAAKsnB,SAAS,CAAChc,yBAA7B,EAAwD;AAC7D,aAAO,KAAKugB,kBAAL,CAAwB/nB,KAAxB,CAAP;AACD,KAFM,MAEA,IAAI9D,UAAU,KAAKsnB,SAAS,CAAC/b,+BAA7B,EAA8D;AACnE,aAAO,KAAKugB,uBAAL,CAA6BhoB,KAA7B,CAAP;AACD,KAFM,MAEA;AACL,YAAMT,KAAK,CAAE,uBAAsBrD,UAAW,EAAnC,CAAX;AACD;AACF;;AAED4rB,EAAAA,aAAa,CAAE9nB,KAAF,EAASioB,SAAS,GAAG,KAArB,EAA4B;AACvC,UAAMrrB,KAAK,GAAG;AACZsZ,MAAAA,MAAM,EAAE,EADI;AAEZ7H,MAAAA,YAAY,EAAE;AAFF,KAAd;AAKA,QAAI6Z,gBAAgB,GAAG,CAAvB;AACA,QAAIC,YAAY,GAAG,EAAnB;AACA,QAAIC,eAAe,GAAG,IAAtB;AACA,QAAIC,gBAAgB,GAAG,IAAvB;AACA,QAAIC,kBAAkB,GAAG,IAAzB;;AAEA,UAAMC,QAAQ,GAAIvoB,KAAD,IAAW;AAC1BA,MAAAA,KAAK,GAAGA,KAAK,IAAI,EAAjB;AACA,aAAOoM,kBAAgB,CAACpM,KAAD,EAAQooB,eAAR,EAAyB,KAAK3oB,OAA9B,EAAuC,KAAK4M,GAA5C,CAAvB;AACD,KAHD;;AAKA,UAAMmc,QAAQ,GAAG,MAAM;AACrB,UAAIJ,eAAe,IAAID,YAAvB,EAAqC;AACnC,cAAM3b,SAAS,GAAG;AAChBhC,UAAAA,MAAM,EAAE4d,eADQ;AAEhB3sB,UAAAA,OAAO,EAAE4sB,gBAFO;AAGhBrT,UAAAA,OAAO,EAAE,UAAUsT;AAHH,SAAlB;AAKAhrB,QAAAA,MAAM,CAACC,MAAP,CAAciP,SAAd,EAAyB+b,QAAQ,CAACJ,YAAD,CAAjC;AACAvrB,QAAAA,KAAK,CAACyR,YAAN,CAAmB5T,IAAnB,CAAwB+R,SAAxB;AACD,OARD,MAQO,IAAI,CAAC4b,eAAD,IAAoBD,YAAxB,EAAsC;AAC3CvrB,QAAAA,KAAK,CAACsZ,MAAN,CAAatW,IAAb,GAAoBuoB,YAAY,CAAC,CAAD,CAAhC;;AACA,YAAIA,YAAY,CAACjnB,MAAb,GAAsB,CAA1B,EAA6B;AAC3BtE,UAAAA,KAAK,CAACsZ,MAAN,CAAavB,WAAb,GAA2BwT,YAAY,CAACtd,KAAb,CAAmB,CAAnB,EAAsB9J,IAAtB,CAA2B,KAAKsL,GAAhC,CAA3B;AACD;AACF;AACF,KAfD;;AAiBA,UAAMoc,cAAc,GAAIZ,IAAD,IAAU;AAC/B,UAAI,CAACA,IAAD,IAAS,CAACA,IAAI,CAAChc,UAAL,CAAgB,GAAhB,CAAd,EAAoC,OAAO,KAAP;AACpC,YAAMrB,MAAM,GAAGqd,IAAI,CAAC3hB,MAAL,CAAY,CAAZ,EAAegF,KAAf,CAAqB,GAArB,EAA0B,CAA1B,CAAf;AACA,aAAO+C,cAAY,CAACya,QAAb,CAAsBle,MAAtB,CAAP;AACD,KAJD;;AAMAxK,IAAAA,KAAK,CAACG,OAAN,CAAe0nB,IAAD,IAAU;AACtBK,MAAAA,gBAAgB;AAChBL,MAAAA,IAAI,GAAGA,IAAI,CAACzc,IAAL,EAAP;;AACA,UAAIqd,cAAc,CAACZ,IAAD,CAAlB,EAA0B;AACxBW,QAAAA,QAAQ;AAERJ,QAAAA,eAAe,GAAGP,IAAI,CAAC3hB,MAAL,CAAY,CAAZ,EAAekF,IAAf,EAAlB;AACAid,QAAAA,gBAAgB,GAAG,IAAnB;AACAC,QAAAA,kBAAkB,GAAGJ,gBAArB;;AACA,YAAIE,eAAe,CAACniB,OAAhB,CAAwB,GAAxB,IAA+B,CAAnC,EAAsC;AACpCoiB,UAAAA,gBAAgB,GAAGD,eAAe,CAACliB,MAAhB,CAAuBkiB,eAAe,CAACniB,OAAhB,CAAwB,GAAxB,IAA+B,CAAtD,EAAyDmF,IAAzD,EAAnB;AACAgd,UAAAA,eAAe,GAAGA,eAAe,CAACliB,MAAhB,CAAuB,CAAvB,EAA0BkiB,eAAe,CAACniB,OAAhB,CAAwB,GAAxB,CAA1B,EAAwDmF,IAAxD,EAAlB;AACD;;AACD+c,QAAAA,YAAY,GAAG,EAAf;AACD,OAXD,MAWO;AACLA,QAAAA,YAAY,CAAC1tB,IAAb,CAAkBotB,IAAlB;AACD;AACF,KAjBD;AAkBAW,IAAAA,QAAQ;AAER,UAAMxmB,MAAM,GAAG,CAAC,IAAIgU,OAAJ,CAAU,KAAKvW,OAAf,EAAwB7C,KAAxB,CAAD,CAAf;;AACA,QAAIqrB,SAAJ,EAAe;AACb,WAAKxoB,OAAL,CAAa0iB,gBAAb,CAA8BngB,MAA9B;AACD,KAFD,MAEO;AACL,WAAKvC,OAAL,CAAayiB,SAAb,CAAuBlgB,MAAvB;AACD;;AACD,WAAOA,MAAP;AACD;;AAED+lB,EAAAA,kBAAkB,CAAE/nB,KAAF,EAAS;AACzB,QAAIA,KAAK,IAAIA,KAAK,CAACkB,MAAN,GAAe,CAA5B,EAA+B;AAC7B,YAAMc,MAAM,GAAG,CAAC,IAAI8gB,WAAJ,CAAc;AAAEljB,QAAAA,IAAI,EAAEI,KAAK,CAAC,CAAD,CAAb;AAAkBgU,QAAAA,UAAU,EAAEhU,KAAK,CAACkB,MAAN,GAAe,CAAf,GAAmBlB,KAAK,CAAC6K,KAAN,CAAY,CAAZ,CAAnB,GAAoC;AAAlE,OAAd,CAAD,CAAf;AACA,WAAKpL,OAAL,CAAa2iB,aAAb,CAA2BpgB,MAA3B;AACA,aAAOA,MAAP;AACD;AACF;;AAEDgmB,EAAAA,uBAAuB,CAAEhoB,KAAF,EAAS;AAC9B,QAAIA,KAAK,IAAIA,KAAK,CAACkB,MAAN,GAAe,CAA5B,EAA+B;AAC7B,YAAMynB,KAAK,GAAG3oB,KAAK,CAAC,CAAD,CAAL,CAASkL,KAAT,CAAe,GAAf,EAAoBxJ,GAApB,CAAyB9B,IAAD,IAAUA,IAAI,CAACwL,IAAL,EAAlC,EAA+CP,KAA/C,CAAqD,CAArD,CAAd;AACA,YAAM+d,iBAAiB,GAAG,EAA1B;;AACA,WAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG7oB,KAAK,CAACkB,MAA9B,EAAsC2nB,GAAG,EAAzC,EAA6C;AAC3C,YAAI,CAAC7oB,KAAK,CAAC6oB,GAAD,CAAN,IAAe7oB,KAAK,CAAC6oB,GAAD,CAAL,CAAW3nB,MAAX,KAAsB,CAAzC,EAA4C;AAC5C,cAAM4nB,MAAM,GAAG9oB,KAAK,CAAC6oB,GAAD,CAAL,CAAW3d,KAAX,CAAiB,GAAjB,EAAsBxJ,GAAtB,CAA2B9B,IAAD,IAAUA,IAAI,CAACwL,IAAL,EAApC,CAAf;AACA,cAAMqb,QAAQ,GAAGqC,MAAM,CAAC,CAAD,CAAvB;AACA,cAAMpC,MAAM,GAAGoC,MAAM,CAACje,KAAP,CAAa,CAAb,CAAf;AACA,cAAMkS,IAAI,GAAG,EAAb;;AACA,aAAK,IAAIgM,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGJ,KAAK,CAACznB,MAA9B,EAAsC6nB,GAAG,EAAzC,EAA6C;AAC3ChM,UAAAA,IAAI,CAAC4L,KAAK,CAACI,GAAD,CAAN,CAAJ,GAAmBrC,MAAM,CAACqC,GAAD,CAAzB;AACD;;AACD,cAAMlW,eAAe,GAAG;AAAEqD,UAAAA,MAAM,EAAE;AAAEtW,YAAAA,IAAI,EAAE6mB;AAAR,WAAV;AAA8BC,UAAAA,MAAM,EAAE3J;AAAtC,SAAxB;AACA6L,QAAAA,iBAAiB,CAACnuB,IAAlB,CAAuBoY,eAAvB;AACD;;AACD,WAAKpT,OAAL,CAAa4iB,oBAAb,CAAkCuG,iBAAlC;AACA,aAAOA,iBAAP;AACD;AACF;;AAEDpG,EAAAA,SAAS,CAAE7lB,MAAF,EAAU;AACjB,QAAIA,MAAM,CAACuE,MAAP,GAAgB,CAApB,EAAuB;AACrB,YAAM,IAAI3B,KAAJ,CAAU,2BAAV,CAAN;AACD;;AAED,UAAM3C,KAAK,GAAGD,MAAM,CAAC,CAAD,CAApB;AAEA,UAAMwR,gBAAgB,GAAGD,aAAa,CAACtR,KAAD,CAAtC;;AACA,QAAIuR,gBAAgB,CAAC7M,MAAjB,CAAwBJ,MAAxB,GAAiC,CAArC,EAAwC;AACtC,YAAM,IAAI3B,KAAJ,CAAU4O,gBAAgB,CAAC7M,MAAjB,CAAwBI,GAAxB,CAA4Bmb,CAAC,IAAIA,CAAC,CAACrd,OAAnC,EAA4CuB,IAA5C,CAAiD,KAAjD,CAAV,CAAN;AACD;;AAED,QAAIyE,MAAM,GAAG,EAAb;;AAEA,QAAI5I,KAAK,CAACsZ,MAAN,CAAatW,IAAjB,EAAuB;AACrB4F,MAAAA,MAAM,IAAI5I,KAAK,CAACsZ,MAAN,CAAatW,IAAb,GAAoB,KAAKyM,GAAnC;AACD;;AACD,QAAIzP,KAAK,CAACsZ,MAAN,CAAavB,WAAjB,EAA8B;AAC5BnP,MAAAA,MAAM,IAAI5I,KAAK,CAACsZ,MAAN,CAAavB,WAAb,GAA2B,KAAKtI,GAA1C;AACD;;AAEDzP,IAAAA,KAAK,CAACyR,YAAN,CAAmBlO,OAAnB,CAA4ByN,IAAD,IAAU;AACnCpI,MAAAA,MAAM,IAAI,KAAK6G,GAAf;AAEA7G,MAAAA,MAAM,IAAI,MAAMoI,IAAI,CAACpD,MAArB;;AACA,UAAIoD,IAAI,CAACnS,OAAL,IAAgBmS,IAAI,CAACnS,OAAL,KAAiB,SAArC,EAAgD;AAC9C+J,QAAAA,MAAM,IAAI,MAAMoI,IAAI,CAACnS,OAArB;AACD;;AACD+J,MAAAA,MAAM,IAAI,KAAK6G,GAAf;AAEA,YAAMwa,SAAS,GAAGnY,gBAAgB,CAACd,IAAD,CAAlC;AACA,UAAIiZ,SAAS,IAAIA,SAAS,CAAC3lB,MAAV,GAAmB,CAApC,EAAuCsE,MAAM,IAAIqhB,SAAS,CAAC9lB,IAAV,CAAe,KAAKsL,GAApB,IAA2B,KAAKA,GAA1C;AACxC,KAXD;AAYA,WAAO7G,MAAP;AACD;;AAjLqD,CAAxD;;ACPA,MAAMhD,OAAK,GAAGD,yBAAgB,CAAC,yBAAD,CAA9B;AAKA,MAAM;AAAEyT,SAAAA;AAAF,IAAYvT,OAAlB;AACA,MAAM;AAAE2J,oBAAAA;AAAF,IAAuB1J,MAA7B;AAEA,MAAMsmB,gBAAgB,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,IAAhB,CAAzB;AACA,MAAMC,iBAAiB,GAAG,GAA1B;AAEA,MAAMC,0BAA0B,GAAG,CAAnC;AACA,MAAMC,wBAAwB,GAAG,CAAjC;AAEA,MAAMC,oCAAoC,GAAG,CAA7C;AACA,MAAMC,8BAA8B,GAAG,CAAvC;AACA,MAAMC,4BAA4B,GAAG,CAArC;;AAEA,MAAMC,aAAa,GAAG,CAACrT,MAAD,EAASsT,OAAT,KAAqB;AACzC,MAAItsB,0BAAC,CAACiI,QAAF,CAAWqkB,OAAX,CAAJ,EAAyB;AACvB,UAAMxnB,MAAM,GAAGkU,MAAM,CAAChB,SAAP,CAAiBuU,CAAC,IAAIA,CAAC,KAAKD,OAA5B,CAAf;AACA,QAAIxnB,MAAM,IAAI,CAAd,EAAiB,OAAOA,MAAP;AACjB,UAAM,IAAIzC,KAAJ,CAAW,eAAciqB,OAAQ,aAAjC,CAAN;AACD;;AACD,MAAItsB,0BAAC,CAAC+O,QAAF,CAAWud,OAAX,CAAJ,EAAyB;AACvB,WAAOA,OAAP;AACD;;AACD,QAAM,IAAIjqB,KAAJ,CAAW,UAASiqB,OAAQ,aAA5B,CAAN;AACD,CAVD;;AAYA,iBAAc,GAAG,MAAME,WAAN,SAA0BzH,cAA1B,CAAuC;AACtD9nB,EAAAA,WAAW,CAAEsF,OAAF,EAAW0D,IAAI,GAAG,EAAlB,EAAsB;AAC/B,UAAM1D,OAAN,EAAe0D,IAAf;AACD;;AAEDmf,EAAAA,QAAQ,GAAI;AACV,SAAKG,uBAAL,CAA6B5oB,YAAY,CAACvC,mBAA1C;;AACA,SAAKmrB,uBAAL,CAA6B5oB,YAAY,CAACtC,oBAA1C;;AAEA,WAAO,MAAM+qB,QAAN,EAAP;AACD;;AAEDvmB,EAAAA,OAAO,CAAEC,YAAF,EAAgBE,UAAU,GAAGsnB,SAAS,CAAClc,oBAAvC,EAA6D;AAClE,UAAMmX,UAAU,GAAGkD,MAAM,CAAChW,QAAP,CAAgB3P,YAAhB,IAAgCA,YAAY,CAAC2F,QAAb,EAAhC,GAA0D3F,YAA7E;;AACA,QAAIyiB,UAAU,CAACvd,MAAX,KAAsB,CAA1B,EAA6B;AAC3B,aAAO,EAAP;AACD;;AAED,QAAIyoB,SAAS,GAAG,KAAKhH,sBAAL,CAA4B9oB,YAAY,CAACzC,uBAAzC,CAAhB;;AACA,QAAI,CAACuyB,SAAL,EAAgB;AACd,YAAMC,SAAS,GAAGnL,UAAU,CAACvT,KAAX,CAAiB,IAAjB,EAAuB,CAAvB,EAA0BE,IAA1B,EAAlB;;AACA,WAAK,MAAMye,CAAX,IAAgBb,gBAAhB,EAAkC;AAChC,YAAIY,SAAS,CAAC3jB,OAAV,CAAkB4jB,CAAlB,KAAwB,CAA5B,EAA+B;AAC7BF,UAAAA,SAAS,GAAGE,CAAZ;AACA;AACD;AACF;;AACD,UAAI,CAACF,SAAL,EAAgB;AACdA,QAAAA,SAAS,GAAGV,iBAAZ;AACAzmB,QAAAA,OAAK,CAAE,0DAAyDmnB,SAAU,kEAArE,CAAL;AACD,OAHD,MAGO;AACLnnB,QAAAA,OAAK,CAAE,mDAAkDmnB,SAAU,IAA9D,CAAL;AACD;AACF;;AAED,QAAIG,IAAJ;;AACA,QAAI;AACFA,MAAAA,IAAI,GAAGhe,wBAAK,CAAC2S,UAAD,EAAa;AACvBkL,QAAAA,SADuB;AAEvBI,QAAAA,MAAM,EAAE,KAAK5mB,IAAL,CAAUtJ,YAAY,CAACtC,oBAAvB,CAFe;AAGvByyB,QAAAA,KAAK,EAAE,KAAK7mB,IAAL,CAAUtJ,YAAY,CAACvC,mBAAvB,CAHgB;AAIvB2yB,QAAAA,OAAO,EAAE;AAJc,OAAb,CAAZ;AAMD,KAPD,CAOE,OAAOjvB,GAAP,EAAY;AACZ,YAAM,IAAIuE,KAAJ,CAAW,gBAAevE,GAAG,CAACwE,OAAJ,IAAexE,GAAI,EAA7C,CAAN;AACD;;AACD,QAAI8uB,IAAI,CAAC5oB,MAAL,KAAgB,CAApB,EAAuB;AACrB,aAAO,EAAP;AACD;;AACD,QAAI4oB,IAAI,CAAC,CAAD,CAAJ,CAAQ5oB,MAAR,KAAmB,CAAvB,EAA0B;AACxBsB,MAAAA,OAAK,CAAC,wDAAD,CAAL;;AACA,UAAItG,UAAU,KAAKsnB,SAAS,CAAChc,yBAA7B,EAAwD;AACtD,cAAMxF,MAAM,GAAG,CAAC;AAAEpC,UAAAA,IAAI,EAAEkqB,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,CAAR;AAAoB9V,UAAAA,UAAU,EAAE8V,IAAI,CAACjf,KAAL,CAAW,CAAX,EAAcnJ,GAAd,CAAkBga,CAAC,IAAIA,CAAC,CAAC,CAAD,CAAxB;AAAhC,SAAD,CAAf;AACA,aAAKjc,OAAL,CAAa2iB,aAAb,CAA2BpgB,MAA3B;AACA,eAAOA,MAAP;AACD,OAJD,MAIO;AACL,eAAO,EAAP;AACD;AACF;;AAED,QAAI9F,UAAU,KAAKsnB,SAAS,CAAClc,oBAAzB,IAAiDpL,UAAU,KAAKsnB,SAAS,CAACjc,qBAA9E,EAAqG;AACnG,aAAO,EAAP;AACD;;AACD,QAAI2O,MAAM,GAAG,IAAb;;AACA,QAAI4T,IAAI,CAAC5oB,MAAL,GAAc,CAAd,IAAmB,KAAKiC,IAAL,CAAUtJ,YAAY,CAACxC,yBAAvB,CAAvB,EAA0E;AACxE6e,MAAAA,MAAM,GAAG4T,IAAI,CAAC,CAAD,CAAb;AACAA,MAAAA,IAAI,GAAGA,IAAI,CAACjf,KAAL,CAAW,CAAX,CAAP;AACD;;AACD,QAAIif,IAAI,CAAC5oB,MAAL,KAAgB,CAApB,EAAuB;AACrB,aAAO,EAAP;AACD;;AAED,UAAMgpB,cAAc,GAAG,KAAK/mB,IAAL,CAAUtJ,YAAY,CAACxC,yBAAvB,IAAoD,CAApD,GAAwD,CAA/E;;AACA,QAAIyyB,IAAI,CAAC,CAAD,CAAJ,CAAQ5oB,MAAR,KAAmB,CAAvB,EAA0B;AACxBsB,MAAAA,OAAK,CAAC,8DAAD,CAAL;AAEA,UAAI2nB,WAAW,GAAGjB,0BAAlB;AACA,UAAIkB,SAAS,GAAGjB,wBAAhB;;AAEA,UAAIjT,MAAJ,EAAY;AACV,YAAI,KAAK/S,IAAL,CAAUtJ,YAAY,CAAClC,gCAAvB,MAA6DqU,SAAjE,EAA4E;AAC1Eme,UAAAA,WAAW,GAAGZ,aAAa,CAACrT,MAAD,EAAS,KAAK/S,IAAL,CAAUtJ,YAAY,CAAClC,gCAAvB,CAAT,CAA3B;AACD;;AACD,YAAI,KAAKwL,IAAL,CAAUtJ,YAAY,CAACjC,8BAAvB,MAA2DoU,SAA/D,EAA0E;AACxEoe,UAAAA,SAAS,GAAGb,aAAa,CAACrT,MAAD,EAAS,KAAK/S,IAAL,CAAUtJ,YAAY,CAACjC,8BAAvB,CAAT,CAAzB;AACD;AACF;;AAED,YAAM+E,MAAM,GAAGmtB,IAAI,CAACpoB,GAAL,CAAS,CAACmnB,GAAD,EAAMza,CAAN,KAAY,IAAI4H,OAAJ,CAAU,KAAKvW,OAAf,EAAwB;AAC1DyW,QAAAA,MAAM,EAAE;AACNtW,UAAAA,IAAI,EAAG,IAAGwO,CAAC,GAAG8b,cAAe;AADvB,SADkD;AAI1D7b,QAAAA,YAAY,EAAE,CACZ/Q,MAAM,CAACC,MAAP,CAAc,EAAd,EACE6O,kBAAgB,CACd,CAACyc,GAAG,CAACsB,WAAD,CAAJ,CADc,EAEd,IAFc,EAGd,KAAK1qB,OAHS,EAIduM,SAJc,EAKd,IALc,CADlB,EAOK;AAAEgJ,UAAAA,OAAO,EAAG,IAAG5G,CAAC,GAAG8b,cAAe;AAAlC,SAPL,CADY,EASZ5sB,MAAM,CAACC,MAAP,CAAc,EAAd,EACE6O,kBAAgB,CACd,CAACyc,GAAG,CAACuB,SAAD,CAAJ,CADc,EAEd,KAFc,EAGd,KAAK3qB,OAHS,EAIduM,SAJc,EAKd,IALc,CADlB,EAOK;AAAEgJ,UAAAA,OAAO,EAAG,IAAG5G,CAAC,GAAG8b,cAAe;AAAlC,SAPL,CATY;AAJ4C,OAAxB,CAArB,CAAf;;AAuBA,UAAIhuB,UAAU,KAAKsnB,SAAS,CAAClc,oBAA7B,EAAmD;AACjD,aAAK7H,OAAL,CAAayiB,SAAb,CAAuBvlB,MAAvB;AACD,OAFD,MAEO,IAAIT,UAAU,KAAKsnB,SAAS,CAACjc,qBAA7B,EAAoD;AACzD,aAAK9H,OAAL,CAAa0iB,gBAAb,CAA8BxlB,MAA9B;AACD;;AACD,aAAOA,MAAP;AACD;;AAED,QAAImtB,IAAI,CAAC,CAAD,CAAJ,CAAQ5oB,MAAR,IAAkB,CAAtB,EAAyB;AACvBsB,MAAAA,OAAK,CAAC,qEAAD,CAAL;AAEA,UAAI6nB,iBAAiB,GAAGjB,oCAAxB;AACA,UAAIkB,SAAS,GAAGjB,8BAAhB;AACA,UAAIkB,OAAO,GAAGjB,4BAAd;;AAEA,UAAIpT,MAAJ,EAAY;AACV,YAAI,KAAK/S,IAAL,CAAUtJ,YAAY,CAACrC,6CAAvB,MAA0EwU,SAA9E,EAAyF;AACvFqe,UAAAA,iBAAiB,GAAGd,aAAa,CAACrT,MAAD,EAAS,KAAK/S,IAAL,CAAUtJ,YAAY,CAACrC,6CAAvB,CAAT,CAAjC;AACD;;AACD,YAAI,KAAK2L,IAAL,CAAUtJ,YAAY,CAACpC,oCAAvB,MAAiEuU,SAArE,EAAgF;AAC9Ese,UAAAA,SAAS,GAAGf,aAAa,CAACrT,MAAD,EAAS,KAAK/S,IAAL,CAAUtJ,YAAY,CAACpC,oCAAvB,CAAT,CAAzB;AACD;;AACD,YAAI,KAAK0L,IAAL,CAAUtJ,YAAY,CAACnC,kCAAvB,MAA+DsU,SAAnE,EAA8E;AAC5Eue,UAAAA,OAAO,GAAGhB,aAAa,CAACrT,MAAD,EAAS,KAAK/S,IAAL,CAAUtJ,YAAY,CAACnC,kCAAvB,CAAT,CAAvB;AACD;AACF;;AAED,YAAM8yB,eAAe,GAAGttB,0BAAC,CAACkjB,IAAF,CAAO0J,IAAI,CAACpoB,GAAL,CAASga,CAAC,IAAIA,CAAC,CAAC2O,iBAAD,CAAf,CAAP,CAAxB;;AACA,YAAM1tB,MAAM,GAAG6tB,eAAe,CAAC9oB,GAAhB,CAAoB+oB,cAAc,IAAI;AACnD,cAAMC,SAAS,GAAGZ,IAAI,CAACpoB,GAAL,CAAS,CAACmnB,GAAD,EAAMza,CAAN,KAAY;AACrC,cAAIya,GAAG,CAACwB,iBAAD,CAAH,KAA2BI,cAA/B,EAA+C;AAC7C,mBAAOntB,MAAM,CAACC,MAAP,CAAc,EAAd,EACL6O,kBAAgB,CACd,CAACyc,GAAG,CAAC0B,OAAD,CAAJ,CADc,EAEd1B,GAAG,CAACyB,SAAD,CAFW,EAGd,KAAK7qB,OAHS,EAIduM,SAJc,EAKd,IALc,CADX,EAOF;AAAEgJ,cAAAA,OAAO,EAAG,IAAG5G,CAAC,GAAG8b,cAAe;AAAlC,aAPE,CAAP;AAQD;;AACD,iBAAO,IAAP;AACD,SAZiB,EAYf5e,MAZe,CAYRzB,CAAC,IAAIA,CAZG,CAAlB;AAaA,eAAO,IAAImM,OAAJ,CAAU,KAAKvW,OAAf,EAAwB;AAC7ByW,UAAAA,MAAM,EAAE;AACNtW,YAAAA,IAAI,EAAE6qB;AADA,WADqB;AAI7Bpc,UAAAA,YAAY,EAAEqc;AAJe,SAAxB,CAAP;AAMD,OApBc,CAAf;;AAqBA,UAAIxuB,UAAU,KAAKsnB,SAAS,CAAClc,oBAA7B,EAAmD;AACjD,aAAK7H,OAAL,CAAayiB,SAAb,CAAuBvlB,MAAvB;AACD,OAFD,MAEO,IAAIT,UAAU,KAAKsnB,SAAS,CAACjc,qBAA7B,EAAoD;AACzD,aAAK9H,OAAL,CAAa0iB,gBAAb,CAA8BxlB,MAA9B;AACD;;AACD,aAAOA,MAAP;AACD;AACF;;AAvKqD,CAAxD;;AC/BA,MAAM6F,OAAK,GAAGD,yBAAgB,CAAC,4BAAD,CAA9B;AAMA,MAAM;AAAEyT,SAAAA;AAAF,IAAYvT,OAAlB;AACA,MAAM;AAAE2J,oBAAAA,kBAAF;AAAoB6B,gBAAAA;AAApB,IAAqCvL,MAA3C;AAEA,wBAAc,GAAG,MAAMioB,kBAAN,SAAiC1I,cAAjC,CAA8C;AAC7D9nB,EAAAA,WAAW,CAAEsF,OAAF,EAAW0D,IAAI,GAAG,EAAlB,EAAsB;AAC/B,UAAM1D,OAAN,EAAe0D,IAAf;AAEA,SAAKkJ,GAAL,GAAWlJ,IAAI,CAACtJ,YAAY,CAACpD,iBAAd,CAAf;AACD;;AAED6rB,EAAAA,QAAQ,GAAI;AACV,UAAMA,QAAN;;AACA,SAAKG,uBAAL,CAA6B5oB,YAAY,CAACpD,iBAA1C;AACD;;AAED8rB,EAAAA,UAAU,CAAEvmB,YAAF,EAAgB;AACxBwG,IAAAA,OAAK,CAAC,gCAAD,CAAL;AACD;;AAEDooB,EAAAA,WAAW,CAAEnM,UAAF,EAAc;AACvB,UAAM,IAAIlf,KAAJ,CAAU,iBAAV,CAAN;AACD;;AAEDxD,EAAAA,OAAO,CAAEC,YAAF,EAAgBE,UAAU,GAAGsnB,SAAS,CAAClc,oBAAvC,EAA6D;AAClE,QAAImX,UAAU,GAAGziB,YAAjB;AACA,QAAI2lB,MAAM,CAAChW,QAAP,CAAgB3P,YAAhB,CAAJ,EAAmCyiB,UAAU,GAAGA,UAAU,CAAC9c,QAAX,EAAb;AACnC8c,IAAAA,UAAU,GAAG,KAAKmM,WAAL,CAAiBnM,UAAjB,CAAb;AAEA,UAAMzc,MAAM,GAAG,EAAf;;AACA,QAAI9F,UAAU,KAAKsnB,SAAS,CAAClc,oBAA7B,EAAmD;AACjDtF,MAAAA,MAAM,CAACvH,IAAP,CAAY,GAAG,KAAKqtB,aAAL,CAAmBrJ,UAAU,CAAC9hB,MAA9B,EAAsC,KAAtC,CAAf;AACD,KAFD,MAEO,IAAIT,UAAU,KAAKsnB,SAAS,CAACjc,qBAA7B,EAAoD;AACzDvF,MAAAA,MAAM,CAACvH,IAAP,CAAY,GAAG,KAAKqtB,aAAL,CAAmBrJ,UAAU,CAAClE,aAA9B,EAA6C,IAA7C,CAAf;AACD,KAFM,MAEA,IAAIre,UAAU,KAAKsnB,SAAS,CAAChc,yBAA7B,EAAwD;AAC7DxF,MAAAA,MAAM,CAACvH,IAAP,CAAY,GAAG,KAAKstB,kBAAL,CAAwBtJ,UAAU,CAACzK,UAAnC,CAAf;AACD,KAFM,MAEA,IAAI9X,UAAU,KAAKsnB,SAAS,CAAC/b,+BAA7B,EAA8D;AACnEzF,MAAAA,MAAM,CAACvH,IAAP,CAAY,GAAG,KAAKutB,uBAAL,CAA6BvJ,UAAU,CAAC5L,eAAxC,CAAf;AACD;;AAED,WAAO7Q,MAAP;AACD;;AAED8lB,EAAAA,aAAa,CAAEnrB,MAAF,EAAUsrB,SAAS,GAAG,KAAtB,EAA6B;AACxC,UAAMjmB,MAAM,GAAG,EAAf;;AACA,SAAK,MAAM6oB,QAAX,IAAwBluB,MAAM,IAAI,EAAlC,EAAuC;AACrC,YAAM0R,YAAY,GAAG,EAArB;;AACA,WAAK,MAAM,CAACia,kBAAD,EAAqBwC,YAArB,CAAX,IAAiDD,QAAQ,CAACxV,KAAT,CAAe0V,OAAf,EAAjD,EAA2E;AACzE,cAAMC,OAAO,GAAI,GAAE1C,kBAAkB,GAAG,CAAE,EAA1B,CAA4B2C,QAA5B,CAAsC,GAAEJ,QAAQ,CAACxV,KAAT,CAAenU,MAAO,EAAzB,CAA2BA,MAAhE,EAAwE,GAAxE,CAAhB;;AAEA,YAAI5D,MAAM,CAAC+H,IAAP,CAAYylB,YAAZ,EAA0B5pB,MAA1B,GAAmC,CAAvC,EAA0C;AACxC,gBAAM,IAAI3B,KAAJ,CAAW,qBAAoB0O,cAAY,CAAClN,IAAb,CAAkB,GAAlB,CAAuB,mBAAkBH,IAAI,CAACC,SAAL,CAAeiqB,YAAf,CAA6B,EAArG,CAAN;AACD;;AACD,YAAI7c,cAAY,CAACiH,SAAb,CAAuB1K,MAAM,IAAIsgB,YAAY,CAACtgB,MAAD,CAA7C,IAAyD,CAA7D,EAAgE;AAC9D,gBAAM,IAAIjL,KAAJ,CAAW,OAAM0O,cAAY,CAACvM,GAAb,CAAiByJ,CAAC,IAAK,IAAGA,CAAE,GAA5B,EAAgCpK,IAAhC,CAAqC,MAArC,CAA6C,kBAAiBH,IAAI,CAACC,SAAL,CAAeiqB,YAAf,CAA6B,EAA5G,CAAN;AACD;;AAED,cAAM1C,eAAe,GAAG9qB,MAAM,CAAC+H,IAAP,CAAYylB,YAAZ,EAA0B,CAA1B,CAAxB;AACA,cAAMI,eAAe,GAAGJ,YAAY,CAAC1C,eAAD,CAApC;AAEA/Z,QAAAA,YAAY,CAAC5T,IAAb,CAAkB6C,MAAM,CAACC,MAAP,CAChB;AACEiN,UAAAA,MAAM,EAAE4d,eADV;AAEEpT,UAAAA,OAAO,EAAE,UAAUgW;AAFrB,SADgB,EAKhB5e,kBAAgB,CAAC8e,eAAD,EAAkB9C,eAAlB,EAAmC,KAAK3oB,OAAxC,EAAiD,KAAK4M,GAAtD,CALA,CAAlB;AAOD;;AAED,YAAMzP,KAAK,GAAG;AACZsZ,QAAAA,MAAM,EAAE;AACNtW,UAAAA,IAAI,EAAEirB,QAAQ,CAACjrB,IADT;AAEN+U,UAAAA,WAAW,EAAEkW,QAAQ,CAAClW;AAFhB,SADI;AAKZtG,QAAAA;AALY,OAAd;AAQA,YAAM8c,KAAK,GAAG,IAAInV,OAAJ,CAAU,KAAKvW,OAAf,EAAwB7C,KAAxB,CAAd;AACAoF,MAAAA,MAAM,CAACvH,IAAP,CAAY0wB,KAAZ;;AACA,UAAIlD,SAAJ,EAAe;AACb,aAAKxoB,OAAL,CAAa0iB,gBAAb,CAA8B,CAACgJ,KAAD,CAA9B;AACD,OAFD,MAEO;AACL,aAAK1rB,OAAL,CAAayiB,SAAb,CAAuB,CAACiJ,KAAD,CAAvB;AACD;AACF;;AACD,WAAOnpB,MAAP;AACD;;AAED+lB,EAAAA,kBAAkB,CAAEqD,aAAF,EAAiB;AACjC,UAAMppB,MAAM,GAAG,EAAf;AACA,UAAM2mB,KAAK,GAAGrrB,MAAM,CAAC+H,IAAP,CAAY+lB,aAAa,IAAI,EAA7B,CAAd;;AACA,SAAK,MAAMxrB,IAAX,IAAmB+oB,KAAnB,EAA0B;AACxB,UAAI,CAACzrB,0BAAC,CAACgD,OAAF,CAAUkrB,aAAa,CAACxrB,IAAD,CAAvB,CAAL,EAAqC;AACnC,cAAM,IAAIL,KAAJ,CAAW,QAAOK,IAAK,iCAAvB,CAAN;AACD;;AACDoC,MAAAA,MAAM,CAACvH,IAAP,CAAY,IAAIqoB,WAAJ,CAAc;AAAEljB,QAAAA,IAAF;AAAQoU,QAAAA,UAAU,EAAGoX,aAAa,CAACxrB,IAAD,CAAd,CAAsB8B,GAAtB,CAA0ByT,CAAC,IAAK,GAAEA,CAAE,EAApC;AAApB,OAAd,CAAZ;AACD;;AACD,SAAK1V,OAAL,CAAa2iB,aAAb,CAA2BpgB,MAA3B;AACA,WAAOA,MAAP;AACD;;AAEDgmB,EAAAA,uBAAuB,CAAEhoB,KAAF,EAAS;AAC9B,QAAIA,KAAK,IAAIA,KAAK,CAACkB,MAAN,GAAe,CAA5B,EAA+B;AAC7B,UAAIhE,0BAAC,CAACiI,QAAF,CAAWnF,KAAK,CAAC,CAAD,CAAhB,CAAJ,EAA0B;AACxB,YAAIA,KAAK,CAACkB,MAAN,GAAe,CAAnB,EAAsB;AACpB,gBAAMynB,KAAK,GAAG3oB,KAAK,CAAC,CAAD,CAAL,CAASkL,KAAT,CAAe,GAAf,EAAoBxJ,GAApB,CAAyB9B,IAAD,IAAUA,IAAI,CAACwL,IAAL,EAAlC,EAA+CP,KAA/C,CAAqD,CAArD,CAAd;AACA,gBAAM+d,iBAAiB,GAAG,EAA1B;;AACA,eAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG7oB,KAAK,CAACkB,MAA9B,EAAsC2nB,GAAG,EAAzC,EAA6C;AAC3C,kBAAMC,MAAM,GAAG9oB,KAAK,CAAC6oB,GAAD,CAAL,CAAW3d,KAAX,CAAiB,GAAjB,EAAsBxJ,GAAtB,CAA2B9B,IAAD,IAAUA,IAAI,CAACwL,IAAL,EAApC,CAAf;AACA,kBAAMqb,QAAQ,GAAGqC,MAAM,CAAC,CAAD,CAAvB;AACA,kBAAMpC,MAAM,GAAGoC,MAAM,CAACje,KAAP,CAAa,CAAb,CAAf;AACA,kBAAMkS,IAAI,GAAG,EAAb;;AACA,iBAAK,IAAIgM,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGJ,KAAK,CAACznB,MAA9B,EAAsC6nB,GAAG,EAAzC,EAA6C;AAC3ChM,cAAAA,IAAI,CAAC4L,KAAK,CAACI,GAAD,CAAN,CAAJ,GAAmBrC,MAAM,CAACqC,GAAD,CAAzB;AACD;;AACD,kBAAMlW,eAAe,GAAG;AAAEqD,cAAAA,MAAM,EAAE;AAAEtW,gBAAAA,IAAI,EAAE6mB;AAAR,eAAV;AAA8BC,cAAAA,MAAM,EAAE3J;AAAtC,aAAxB;AACA6L,YAAAA,iBAAiB,CAACnuB,IAAlB,CAAuBoY,eAAvB;AACD;;AACD,eAAKpT,OAAL,CAAa4iB,oBAAb,CAAkCuG,iBAAlC;AACA,iBAAOA,iBAAP;AACD;AACF,OAlBD,MAkBO;AACL,aAAKnpB,OAAL,CAAa4iB,oBAAb,CAAkCriB,KAAlC;AACA,eAAOA,KAAP;AACD;AACF;;AACD,WAAO,EAAP;AACD;;AAEDwiB,EAAAA,SAAS,CAAE7lB,MAAF,EAAU;AACjB,UAAM,IAAI4C,KAAJ,CAAU,iBAAV,CAAN;AACD;;AA/H4D,CAA/D;;ACPA,kBAAc,GAAG,MAAM8rB,YAAN,SAA2BV,oBAA3B,CAA8C;AAC7DxwB,EAAAA,WAAW,CAAEsF,OAAF,EAAW0D,IAAI,GAAG,EAAlB,EAAsB;AAC/B,UAAM1D,OAAN,EAAe0D,IAAf;AACD;;AAEDynB,EAAAA,WAAW,CAAEnM,UAAF,EAAc;AACvB,WAAO6M,wBAAI,CAACxf,KAAL,CAAW2S,UAAX,CAAP;AACD;;AAP4D,CAA/D;;ACFA,MAAM;AAAE9Q,EAAAA;AAAF,IAAwBpL,MAA9B;AAEA,kBAAc,GAAG,MAAMgpB,YAAN,SAA2BZ,oBAA3B,CAA8C;AAC7DxwB,EAAAA,WAAW,CAAEsF,OAAF,EAAW0D,IAAI,GAAG,EAAlB,EAAsB;AAC/B,UAAM1D,OAAN,EAAe0D,IAAf;AACD;;AAEDynB,EAAAA,WAAW,CAAEnM,UAAF,EAAc;AACvB,WAAO7d,IAAI,CAACkL,KAAL,CAAW2S,UAAX,CAAP;AACD;;AAED+D,EAAAA,SAAS,CAAE7lB,MAAF,EAAU;AACjB,UAAMqF,MAAM,GAAGrF,MAAM,CAAC+E,GAAP,CAAW9E,KAAK,KAAK;AAClCgD,MAAAA,IAAI,EAAEhD,KAAK,CAACsZ,MAAN,CAAatW,IADe;AAElC+U,MAAAA,WAAW,EAAE/X,KAAK,CAACsZ,MAAN,CAAavB,WAFQ;AAGlCU,MAAAA,KAAK,EAAEzY,KAAK,CAACyR,YAAN,CAAmB3M,GAAnB,CAAuB8pB,GAAG,KAAK;AACpC,SAACA,GAAG,CAAChhB,MAAL,GAAcmD,iBAAiB,CAAC6d,GAAD;AADK,OAAL,CAA1B;AAH2B,KAAL,CAAhB,CAAf;AAOA,WAAO5qB,IAAI,CAACC,SAAL,CAAe;AAAElE,MAAAA,MAAM,EAAEqF;AAAV,KAAf,EAAmC,IAAnC,EAAyC,CAAzC,CAAP;AACD;;AAlB4D,CAA/D;;ACHA,MAAMQ,OAAK,GAAGD,yBAAgB,CAAC,8BAAD,CAA9B;AAGA,MAAMid,EAAE,GAAG,IAAIC,8BAAJ,EAAX;AAKA,MAAM;AAAEzJ,SAAAA;AAAF,IAAYvT,OAAlB;AAEA,MAAM;AAAE2J,EAAAA,gBAAF;AAAoB6B,EAAAA,YAApB;AAAkC1B,EAAAA;AAAlC,IAAqD7J,MAA3D;AAEA,sBAAc,GAAG,MAAM+oB,gBAAN,SAA+BxJ,cAA/B,CAA4C;AAC3D9nB,EAAAA,WAAW,CAAEsF,OAAF,EAAW0D,IAAI,GAAG,EAAlB,EAAsB;AAC/B,UAAM1D,OAAN,EAAe0D,IAAf;AAEA,SAAKkJ,GAAL,GAAWlJ,IAAI,CAACtJ,YAAY,CAACpD,iBAAd,CAAf;AACD;;AAED6rB,EAAAA,QAAQ,GAAI;AACV,UAAMA,QAAN;;AACA,SAAKG,uBAAL,CAA6B5oB,YAAY,CAACpD,iBAA1C;AACD;;AAEDsF,EAAAA,OAAO,CAAEC,YAAF,EAAgBE,UAAU,GAAGsnB,SAAS,CAAClc,oBAAvC,EAA6D;AAClE,QAAIqa,MAAM,CAAChW,QAAP,CAAgB3P,YAAhB,CAAJ,EAAmCA,YAAY,GAAGA,YAAY,CAAC2F,QAAb,EAAf;AAEnC,UAAM+d,MAAM,GAAGF,EAAE,CAAC1T,KAAH,CAAS9P,YAAT,EAAuB,EAAvB,CAAf;;AAEA,UAAM0vB,qBAAqB,GAAIhM,MAAD,IAAY;AACxC,UAAIiM,KAAK,GAAG,CAAC,CAAb;AACA,YAAMC,MAAM,GAAG,CAAC;AAAEhqB,QAAAA,QAAQ,EAAE;AAAZ,OAAD,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,CAAf;;AAEA,YAAMiqB,IAAI,GAAIpiB,KAAD,IAAW;AACtB,YAAI,CAACmiB,MAAM,CAACD,KAAD,CAAP,IAAkB,CAACC,MAAM,CAACD,KAAD,CAAN,CAAc/pB,QAArC,EAA+C,MAAM,IAAIrC,KAAJ,CAAW,IAAGkK,KAAK,CAACqiB,MAAO,6BAA4BriB,KAAK,CAAC/H,GAAN,CAAU,CAAV,IAAe,CAAE,mBAAxE,CAAN;AAC/CkqB,QAAAA,MAAM,CAACD,KAAD,CAAN,CAAc/pB,QAAd,CAAuBnH,IAAvB,CAA4BgP,KAA5B;AACAA,QAAAA,KAAK,CAAC7H,QAAN,GAAiB,EAAjB;AACAgqB,QAAAA,MAAM,CAACD,KAAK,GAAG,CAAT,CAAN,GAAoBliB,KAApB;AACD,OALD;;AAOA,WAAK,MAAMA,KAAX,IAAoBiW,MAApB,EAA4B;AAC1B,YAAIjW,KAAK,CAACpJ,IAAN,KAAe,cAAnB,EAAmC;AACjC,cAAIoJ,KAAK,CAACsiB,GAAN,KAAc,IAAlB,EAAwB;AACtBJ,YAAAA,KAAK,GAAG,CAAR;AACD,WAFD,MAEO,IAAIliB,KAAK,CAACsiB,GAAN,KAAc,IAAlB,EAAwB;AAC7B,gBAAIJ,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAG,CAAzB,EAA4B;AAC1B,oBAAM,IAAIpsB,KAAJ,CAAW,IAAGkK,KAAK,CAACqiB,MAAO,6BAA4BriB,KAAK,CAAC/H,GAAN,CAAU,CAAV,IAAe,CAAE,gCAA+B+H,KAAK,CAACqiB,MAAO,GAApH,CAAN;AACD;;AACDH,YAAAA,KAAK,GAAG,CAAR;AACD,WALM,MAKA;AACLnpB,YAAAA,OAAK,CAAE,mBAAkBqR,wBAAI,CAACC,OAAL,CAAarK,KAAb,CAAoB,4BAAxC,CAAL;AACD;AACF,SAXD,MAWO,IAAIA,KAAK,CAACpJ,IAAN,KAAe,kBAAnB,EAAuC;AAC5C,cAAIsrB,KAAK,GAAG,CAAZ,EAAe;AACb,kBAAM,IAAIpsB,KAAJ,CAAW,IAAGkK,KAAK,CAACqiB,MAAO,6BAA4BriB,KAAK,CAAC/H,GAAN,CAAU,CAAV,IAAe,CAAE,iCAAgC+H,KAAK,CAACqiB,MAAO,GAArH,CAAN;AACD;;AACD,cAAIH,KAAK,GAAG,CAAZ,EAAe;AACb,kBAAM,IAAIpsB,KAAJ,CAAW,IAAGkK,KAAK,CAACqiB,MAAO,6BAA4BriB,KAAK,CAAC/H,GAAN,CAAU,CAAV,IAAe,CAAE,sCAAxE,CAAN;AACD;;AACDiqB,UAAAA,KAAK;AACN,SARM,MAQA,IAAIliB,KAAK,CAACpJ,IAAN,KAAe,mBAAnB,EAAwC;AAC7CsrB,UAAAA,KAAK;AACN,SAFM,MAEA,IAAIliB,KAAK,CAACpJ,IAAN,KAAe,QAAnB,EAA6B;AAClCwrB,UAAAA,IAAI,CAACpiB,KAAD,CAAJ;AACD;AACF;;AACD,aAAOmiB,MAAM,CAAC,CAAD,CAAb;AACD,KAtCD;;AAwCA,UAAMI,UAAU,GAAGN,qBAAqB,CAAChM,MAAD,CAAxC;;AACA,SAAK,MAAMuM,kBAAX,IAAiCD,UAAU,CAACpqB,QAA5C,EAAsD;AACpD,UAAKqqB,kBAAkB,CAACpjB,OAAnB,KAA+B,QAA/B,IAA2C3M,UAAU,KAAKsnB,SAAS,CAAClc,oBAArE,IACD2kB,kBAAkB,CAACpjB,OAAnB,KAA+B,eAA/B,IAAkD3M,UAAU,KAAKsnB,SAAS,CAACjc,qBAD9E,EACsG;AACpG,cAAM2kB,YAAY,GAAG,EAArB;;AACA,aAAK,MAAMtvB,KAAX,IAAoBqvB,kBAAkB,CAACrqB,QAAvC,EAAiD;AAC/C,gBAAMyM,YAAY,GAAG,EAArB;;AACA,eAAK,MAAMT,IAAX,IAAmBhR,KAAK,CAACgF,QAAzB,EAAmC;AACjC,kBAAM4I,MAAM,GAAGoD,IAAI,CAAC/E,OAAL,CAAa+C,WAAb,EAAf;;AACA,gBAAIW,cAAc,CAAC/B,MAAD,CAAlB,EAA4B;;;;;;;AAO1B6D,cAAAA,YAAY,CAAC5T,IAAb,CAAkB6C,MAAM,CAACC,MAAP,CAChB;AACEiN,gBAAAA,MADF;AAEEwK,gBAAAA,OAAO,EAAE,WAAWpH,IAAI,CAAClM,GAAL,CAAS,CAAT,IAAc,CAAzB;AAFX,eADgB,EAKhB0K,gBAAgB,CAACwB,IAAI,CAAChM,QAAL,CAAcF,GAAd,CAAkByqB,KAAK,IAAIA,KAAK,CAACtjB,OAAN,IACzCsjB,KAAK,CAACvqB,QAAN,GAAiB,MAAMuqB,KAAK,CAACvqB,QAAN,CAAeF,GAAf,CAAmByqB,KAAK,IAAIA,KAAK,CAACtjB,OAAlC,EAA2C9H,IAA3C,CAAgD,GAAhD,CAAvB,GAA8E,EADrC,CAA3B,CAAD,EACuEyJ,MADvE,EAC+E,KAAK/K,OADpF,EAC6F,KAAK4M,GADlG,CALA,CAAlB;AAQD,aAfD,MAeO;AACL7J,cAAAA,OAAK,CAAE,mBAAkByL,YAAY,CAACvM,GAAb,CAAiByJ,CAAC,IAAK,IAAGA,CAAE,GAA5B,EAAgCpK,IAAhC,CAAqC,MAArC,CAA6C,cAAayJ,MAAO,EAArF,CAAL;AACD;AACF;;AACD0hB,UAAAA,YAAY,CAACzxB,IAAb,CAAkB,IAAIub,OAAJ,CAAU,KAAKvW,OAAf,EAAwB;AACxCyW,YAAAA,MAAM,EAAE;AACNtW,cAAAA,IAAI,EAAEhD,KAAK,CAACiM;AADN,aADgC;AAIxCwF,YAAAA;AAJwC,WAAxB,CAAlB;AAMD;;AACD,YAAInS,UAAU,KAAKsnB,SAAS,CAAClc,oBAA7B,EAAmD;AACjD,eAAK7H,OAAL,CAAayiB,SAAb,CAAuBgK,YAAvB;AACD,SAFD,MAEO,IAAIhwB,UAAU,KAAKsnB,SAAS,CAACjc,qBAA7B,EAAoD;AACzD,eAAK9H,OAAL,CAAa0iB,gBAAb,CAA8B+J,YAA9B;AACD;AACF,OAtCD,MAsCO,IAAID,kBAAkB,CAACpjB,OAAnB,KAA+B,YAA/B,IAA+C3M,UAAU,KAAKsnB,SAAS,CAAChc,yBAA5E,EAAuG;AAC5G,cAAM4kB,gBAAgB,GAAG,EAAzB;;AACA,aAAK,MAAMC,eAAX,IAA8BJ,kBAAkB,CAACrqB,QAAjD,EAA2D;AACzDwqB,UAAAA,gBAAgB,CAAC3xB,IAAjB,CAAsB,IAAIqoB,WAAJ,CAAc;AAAEljB,YAAAA,IAAI,EAAEysB,eAAe,CAACxjB,OAAxB;AAAiCmL,YAAAA,UAAU,EAAEqY,eAAe,CAACzqB,QAAhB,CAAyBF,GAAzB,CAA6ByqB,KAAK,IAAK,GAAEA,KAAK,CAACtjB,OAAQ,EAAvD;AAA7C,WAAd,CAAtB;AACD;;AACD,aAAKpJ,OAAL,CAAa2iB,aAAb,CAA2BgK,gBAA3B;AACD;AACF;AACF;;AAzG0D,CAA7D;;ACHA7pB,2BAA6B,CAAC+pB,IAA9B;AACA,MAAM9pB,OAAK,GAAGC,yBAAgB,CAAC,+BAAD,CAA9B;AAKA,MAAM;AAAEuT,EAAAA,KAAF;AAASjB,EAAAA;AAAT,IAAuBrS,OAA7B;AAEA,MAAM;AAAEpD,eAAAA,aAAF;AAAekC,EAAAA,mBAAf;AAAoCD,EAAAA;AAApC,IAA2DoB,aAAjE;AAEA,MAAM;AAAE8Z,EAAAA;AAAF,IAAuB3N,cAA7B;AAGA,MAAMyd,WAAW,GAAG,kJAApB;AACA,MAAMC,WAAW,GAAG,cAApB;;AAEA,MAAM7L,CAAC,GAAG,CAAC8L,WAAD,EAAcC,EAAd,KAAqB;AAC7B,QAAMC,OAAO,GAAG,MAAM,IAAIjyB,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACrD,QAAI;AACFD,MAAAA,OAAO,CAAC+xB,EAAE,EAAH,CAAP;AACD,KAFD,CAEE,OAAO1xB,GAAP,EAAY;AACZJ,MAAAA,MAAM,CAACI,GAAD,CAAN;AACD;AACF,GANqB,CAAtB;;AAQA,MAAIyxB,WAAJ,EAAiB;AACf,WAAOG,gCAAY,CAAC,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,aAAOH,OAAO,GAAG5xB,KAAV,CAAgBC,GAAG,IAAI;AAC5B,YAAIyxB,WAAW,CAAC9Q,WAAZ,CAAwB3gB,GAAxB,CAAJ,EAAkC;AAChCwH,UAAAA,OAAK,CAAE,mBAAkBsqB,MAAO,0BAA3B,CAAL;AACAD,UAAAA,KAAK,CAAC7xB,GAAD,CAAL;AACD,SAHD,MAGO;AACL,gBAAMA,GAAN;AACD;AACF,OAPM,CAAP;AAQD,KATkB,EAShByxB,WAAW,CAACtR,aATI,CAAnB;AAUD,GAXD,MAWO;AACL,WAAOwR,OAAO,EAAd;AACD;AACF,CAvBD;;AAyBA,MAAMI,IAAI,GAAG,CAACN,WAAD,EAAcC,EAAd,EAAkBM,WAAlB,KAAkC;AAC7C,QAAML,OAAO,GAAG,MAAM,IAAIjyB,OAAJ,CAAY,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;;AAC3D,QAAI;AACF,YAAM8xB,EAAE,EAAR;AACA9xB,MAAAA,MAAM,CAACoyB,WAAD,CAAN;AACD,KAHD,CAGE,OAAOhyB,GAAP,EAAY;AACZL,MAAAA,OAAO;AACR;AACF,GAPqB,CAAtB;;AASA,MAAI8xB,WAAJ,EAAiB;AACf,WAAOG,gCAAY,CAAC,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,aAAOH,OAAO,GAAG5xB,KAAV,CAAgB,MAAM;AAC3B,YAAI0xB,WAAW,CAAC9Q,WAAZ,CAAwBqR,WAAxB,CAAJ,EAA0C;AACxCxqB,UAAAA,OAAK,CAAE,mBAAkBsqB,MAAO,2BAA3B,CAAL;AACAD,UAAAA,KAAK,CAACG,WAAD,CAAL;AACD,SAHD,MAGO;AACL,gBAAMA,WAAN;AACD;AACF,OAPM,CAAP;AAQD,KATkB,EAShBP,WAAW,CAACtR,aATI,CAAnB;AAUD,GAXD,MAWO;AACL,WAAOwR,OAAO,EAAd;AACD;AACF,CAxBD;;AA0BA,uBAAc,GAAG,MAAMM,iBAAN,CAAwB;AACvC9yB,EAAAA,WAAW,CAAEgJ,IAAF,EAAQ;AACjB,SAAKA,IAAL,GAAYA,IAAI,IAAIjG,0BAAC,CAACkN,SAAF,CAAY8iB,UAAQ,CAACrzB,YAArB,CAApB;AACA,SAAKszB,SAAL,GAAiB,EAAjB;AACA,SAAKxwB,MAAL,GAAc,EAAd;AACA,SAAKqX,UAAL,GAAkB,EAAlB;AACA,SAAKoZ,OAAL,GAAe,IAAf;AACA,SAAKhqB,SAAL,GAAiB,EAAjB;AACA,SAAKiqB,cAAL,GAAsB,EAAtB;AACA,SAAK/pB,UAAL,GAAkB,EAAlB;AACA,SAAKgqB,eAAL,GAAuB,EAAvB;AACA,SAAK9pB,UAAL,GAAkB,EAAlB;AACA,SAAK+W,aAAL,GAAqB,EAArB;AACA,SAAKqO,iBAAL,GAAyB,EAAzB;AAEA,SAAKtsB,eAAL,GAAuB;AACrBsa,MAAAA,YAAY,EAAE,CAAC;AAAEha,QAAAA,KAAF;AAAS4P,QAAAA,SAAT;AAAoBqG,QAAAA,eAApB;AAAqC,WAAGJ;AAAxC,OAAD,KAAoD;AAChE,eAAO,KAAK8a,wBAAL,CAA8B;AAAE/oB,UAAAA,QAAQ,EAAE,cAAZ;AAA4BlB,UAAAA,UAAU,EAAG1G,KAAK,CAAC0Z,cAAN,IAAwB,EAAjE;AAAsE1Z,UAAAA,KAAtE;AAA6E4P,UAAAA,SAA7E;AAAwFqG,UAAAA,eAAxF;AAAyG,aAAGJ;AAA5G,SAA9B,CAAP;AACD,OAHoB;AAIrBuE,MAAAA,UAAU,EAAE,CAAC;AAAEpa,QAAAA,KAAF;AAAS4P,QAAAA,SAAT;AAAoBqG,QAAAA,eAApB;AAAqC,WAAGJ;AAAxC,OAAD,KAAoD;AAC9D,eAAO,KAAK8a,wBAAL,CAA8B;AAAE/oB,UAAAA,QAAQ,EAAE,YAAZ;AAA0BlB,UAAAA,UAAU,EAAG1G,KAAK,CAAC2Z,YAAN,IAAsB,EAA7D;AAAkE3Z,UAAAA,KAAlE;AAAyE4P,UAAAA,SAAzE;AAAoFqG,UAAAA,eAApF;AAAqG,aAAGJ;AAAxG,SAA9B,CAAP;AACD,OANoB;AAOrBsF,MAAAA,SAAS,EAAE,CAAC;AAAEnb,QAAAA,KAAF;AAAS4P,QAAAA,SAAT;AAAoBqG,QAAAA,eAApB;AAAqC,WAAGJ;AAAxC,OAAD,KAAoD;AAC7D,eAAO,KAAK8a,wBAAL,CAA8B;AAAE/oB,UAAAA,QAAQ,EAAE,WAAZ;AAAyBlB,UAAAA,UAAU,EAAGkJ,SAAS,CAAClJ,UAAV,IAAwB,EAA9D;AAAmE1G,UAAAA,KAAnE;AAA0E4P,UAAAA,SAA1E;AAAqFqG,UAAAA,eAArF;AAAsG,aAAGJ;AAAzG,SAA9B,CAAP;AACD,OAToB;AAUrBuF,MAAAA,WAAW,EAAE,CAAC;AAAEpb,QAAAA,KAAF;AAAS4P,QAAAA,SAAT;AAAoBqG,QAAAA,eAApB;AAAqC,WAAGJ;AAAxC,OAAD,KAAoD;AAC/D,eAAO,KAAK8a,wBAAL,CAA8B;AAAE/oB,UAAAA,QAAQ,EAAE,aAAZ;AAA2BlB,UAAAA,UAAU,EAAGkJ,SAAS,CAAClJ,UAAV,IAAwB,EAAhE;AAAqE1G,UAAAA,KAArE;AAA4E4P,UAAAA,SAA5E;AAAuFqG,UAAAA,eAAvF;AAAwG,aAAGJ;AAA3G,SAA9B,CAAP;AACD,OAZoB;AAarB4F,MAAAA,OAAO,EAAE,CAAC;AAAEzb,QAAAA,KAAF;AAAS4P,QAAAA,SAAT;AAAoBqG,QAAAA,eAApB;AAAqC,WAAGJ;AAAxC,OAAD,KAAoD;AAC3D,eAAO,KAAK8a,wBAAL,CAA8B;AAAE/oB,UAAAA,QAAQ,EAAE,SAAZ;AAAuBlB,UAAAA,UAAU,EAAGkJ,SAAS,CAAClJ,UAAV,IAAwB,EAA5D;AAAiE1G,UAAAA,KAAjE;AAAwE4P,UAAAA,SAAxE;AAAmFqG,UAAAA,eAAnF;AAAoG,aAAGJ;AAAvG,SAA9B,CAAP;AACD,OAfoB;AAgBrB8F,MAAAA,UAAU,EAAE,CAAC;AAAE3b,QAAAA,KAAF;AAAS4P,QAAAA,SAAT;AAAoBqG,QAAAA,eAApB;AAAqC,WAAGJ;AAAxC,OAAD,KAAoD;AAC9D,eAAO,KAAK8a,wBAAL,CAA8B;AAAE/oB,UAAAA,QAAQ,EAAE,YAAZ;AAA0BlB,UAAAA,UAAU,EAAGkJ,SAAS,CAAClJ,UAAV,IAAwB,EAA/D;AAAoE1G,UAAAA,KAApE;AAA2E4P,UAAAA,SAA3E;AAAsFqG,UAAAA,eAAtF;AAAuG,aAAGJ;AAA1G,SAA9B,CAAP;AACD,OAlBoB;AAmBrBgG,MAAAA,YAAY,EAAE,CAAC;AAAE7b,QAAAA,KAAF;AAAS4P,QAAAA,SAAT;AAAoBqG,QAAAA,eAApB;AAAqC,WAAGJ;AAAxC,OAAD,KAAoD;AAChE,eAAO,KAAK8a,wBAAL,CAA8B;AAAE/oB,UAAAA,QAAQ,EAAE,cAAZ;AAA4BlB,UAAAA,UAAU,EAAGkJ,SAAS,CAAClJ,UAAV,IAAwB,EAAjE;AAAsE1G,UAAAA,KAAtE;AAA6E4P,UAAAA,SAA7E;AAAwFqG,UAAAA,eAAxF;AAAyG,aAAGJ;AAA5G,SAA9B,CAAP;AACD,OArBoB;AAsBrB4G,MAAAA,QAAQ,EAAE,CAAC;AAAEzc,QAAAA,KAAF;AAAS4P,QAAAA,SAAT;AAAoBqG,QAAAA,eAApB;AAAqC,WAAGJ;AAAxC,OAAD,KAAoD;AAC5D,eAAO,KAAK8a,wBAAL,CAA8B;AAAE/oB,UAAAA,QAAQ,EAAE,UAAZ;AAAwBlB,UAAAA,UAAU,EAAGkJ,SAAS,CAAClJ,UAAV,IAAwB,EAA7D;AAAkE1G,UAAAA,KAAlE;AAAyE4P,UAAAA,SAAzE;AAAoFqG,UAAAA,eAApF;AAAqG,aAAGJ;AAAxG,SAA9B,CAAP;AACD,OAxBoB;AAyBrBoE,MAAAA,gBAAgB,EAAE,CAAC;AAAEja,QAAAA,KAAF;AAAS4P,QAAAA,SAAT;AAAoBqG,QAAAA,eAApB;AAAqC,WAAGJ;AAAxC,OAAD,KAAoD;AACpE,eAAO,KAAK+a,uBAAL,CAA6B;AAAEC,UAAAA,YAAY,EAAE,kBAAhB;AAAoCrqB,UAAAA,SAAS,EAAGxG,KAAK,CAACqZ,aAAN,IAAuB,EAAvE;AAA4ErZ,UAAAA,KAA5E;AAAmF4P,UAAAA,SAAnF;AAA8FqG,UAAAA,eAA9F;AAA+G,aAAGJ;AAAlH,SAA7B,CAAP;AACD,OA3BoB;AA4BrB2G,MAAAA,eAAe,EAAE,CAAC;AAAExc,QAAAA,KAAF;AAAS4P,QAAAA,SAAT;AAAoBqG,QAAAA,eAApB;AAAqC,WAAGJ;AAAxC,OAAD,KAAoD;AACnE,eAAO,KAAK+a,uBAAL,CAA6B;AAAEC,UAAAA,YAAY,EAAE,iBAAhB;AAAmCrqB,UAAAA,SAAS,EAAGoJ,SAAS,CAACpJ,SAAV,IAAuB,EAAtE;AAA2ExG,UAAAA,KAA3E;AAAkF4P,UAAAA,SAAlF;AAA6FqG,UAAAA,eAA7F;AAA8G,aAAGJ;AAAjH,SAA7B,CAAP;AACD,OA9BoB;AA+BrByE,MAAAA,cAAc,EAAE,CAAC;AAAEta,QAAAA,KAAF;AAAS4P,QAAAA,SAAT;AAAoBqG,QAAAA,eAApB;AAAqC,WAAGJ;AAAxC,OAAD,KAAoD;AAClE,eAAO,KAAK+a,uBAAL,CAA6B;AAAEC,UAAAA,YAAY,EAAE,gBAAhB;AAAkCrqB,UAAAA,SAAS,EAAGxG,KAAK,CAACwZ,WAAN,IAAqB,EAAnE;AAAwExZ,UAAAA,KAAxE;AAA+E4P,UAAAA,SAA/E;AAA0FqG,UAAAA,eAA1F;AAA2G,aAAGJ;AAA9G,SAA7B,CAAP;AACD,OAjCoB;AAkCrBqF,MAAAA,YAAY,EAAE,CAAC;AAAElb,QAAAA,KAAF;AAAS4P,QAAAA,SAAT;AAAoBqG,QAAAA,eAApB;AAAqC,WAAGJ;AAAxC,OAAD,KAAoD;AAChE,eAAO,KAAKib,wBAAL,CAA8B;AAAE9wB,UAAAA,KAAF;AAAS4P,UAAAA,SAAT;AAAoBqG,UAAAA,eAApB;AAAqC,aAAGJ;AAAxC,SAA9B,CAAP;AACD,OApCoB;AAqCrBwB,MAAAA,gBAAgB,EAAE,CAAC;AAAEL,QAAAA,SAAF;AAAa+Z,QAAAA;AAAb,OAAD,KAA0C;AAC1D,eAAO,KAAKC,iBAAL,CAAuB;AAAEha,UAAAA,SAAF;AAAa+Z,UAAAA;AAAb,SAAvB,CAAP;AACD,OAvCoB;AAwCrBpxB,MAAAA,iBAAiB,EAAE,CAACwf,WAAD,EAAc/C,OAAd,EAAuBhE,OAAvB,EAAgC2C,KAAhC,KAA0C;AAC3D,YAAI,CAACza,0BAAC,CAACgD,OAAF,CAAU8Y,OAAV,CAAL,EAAyB;AACvBA,UAAAA,OAAO,GAAG,CAACA,OAAD,CAAV;AACD;;AACDxW,QAAAA,OAAK,CAAE,qBAAoBwS,OAAQ,IAAG2C,KAAK,GAAI,IAAGA,KAAM,IAAb,GAAmB,EAAG,QAAOoE,WAAY,MAAK/C,OAAQ,MAA5F,CAAL;;AACA,cAAM6U,KAAK,GAAG3wB,0BAAC,CAACuH,IAAF,CAAOuU,OAAP,EAAiB8U,GAAD,IAAS,KAAKV,OAAL,CAAarR,WAAb,EAA0B+R,GAA1B,CAAzB,CAAd;;AACA,YAAI5wB,0BAAC,CAAC6wB,KAAF,CAAQF,KAAR,CAAJ,EAAoB;AAClB,cAAIruB,OAAO,GAAI,GAAEwV,OAAQ,iBAAzB;AACAxV,UAAAA,OAAO,IAAImY,KAAK,GAAI,OAAMA,KAAM,IAAhB,GAAsB,EAAtC;AACAnY,UAAAA,OAAO,IAAIuc,WAAW,GAAI,MAAMA,WAAN,GAAoB,GAAxB,GAA+B,eAArD;AACAvc,UAAAA,OAAO,IAAI,qBAAX;AACAA,UAAAA,OAAO,IAAIwZ,OAAO,IAAIA,OAAO,CAAC9X,MAAR,GAAiB,CAA5B,GAAgC,SAAhC,GAA4C,EAAvD;AACA1B,UAAAA,OAAO,IAAK,GAAEwZ,OAAO,CAACtX,GAAR,CAAYmb,CAAC,IAAIA,CAAC,GAAG,MAAMA,CAAN,GAAU,GAAb,GAAmB,gBAArC,EAAuD9b,IAAvD,CAA4D,IAA5D,CAAkE,EAAhF;AACA,gBAAM,IAAIzB,aAAJ,CACJE,OADI,EAEJ;AACEa,YAAAA,IAAI,EAAE,UADR;AAEEE,YAAAA,MAAM,EAAE,mBAFV;AAGEd,YAAAA,OAAO,EAAE;AACPuV,cAAAA;AADO,aAHX;AAMEvU,YAAAA,KAAK,EAAE;AACLC,cAAAA,QAAQ,EAAEsY,OADL;AAELlY,cAAAA,MAAM,EAAEib,WAFH;AAGLW,cAAAA,YAAY,EAAE,KAAKvZ,IAAL,CAAUtJ,YAAY,CAAC5B,uBAAvB;AAHT;AANT,WAFI,CAAN;AAeD;AACF,OArEoB;AAsErBihB,MAAAA,oBAAoB,EAAE,CAAC6C,WAAD,EAAciS,UAAd,EAA0BhZ,OAA1B,EAAmC2C,KAAnC,KAA6C;AACjE,YAAI,CAACza,0BAAC,CAACgD,OAAF,CAAU8tB,UAAV,CAAL,EAA4B;AAC1BA,UAAAA,UAAU,GAAG,CAACA,UAAD,CAAb;AACD;;AACDxrB,QAAAA,OAAK,CAAE,wBAAuBwS,OAAQ,IAAG2C,KAAK,GAAI,IAAGA,KAAM,IAAb,GAAmB,EAAG,QAAOoE,WAAY,OAAMiS,UAAW,MAAnG,CAAL;;AACA,cAAMH,KAAK,GAAG3wB,0BAAC,CAACuH,IAAF,CAAOupB,UAAP,EAAoBF,GAAD,IAAS,KAAKV,OAAL,CAAarR,WAAb,EAA0B+R,GAA1B,CAA5B,CAAd;;AACA,YAAI,CAAC5wB,0BAAC,CAAC6wB,KAAF,CAAQF,KAAR,CAAL,EAAqB;AACnB,cAAIruB,OAAO,GAAI,GAAEwV,OAAQ,iBAAzB;AACAxV,UAAAA,OAAO,IAAImY,KAAK,GAAI,OAAMA,KAAM,IAAhB,GAAsB,EAAtC;AACAnY,UAAAA,OAAO,IAAIuc,WAAW,GAAI,MAAMA,WAAN,GAAoB,GAAxB,GAA+B,eAArD;AACAvc,UAAAA,OAAO,IAAI,yBAAX;AACAA,UAAAA,OAAO,IAAIwuB,UAAU,IAAIA,UAAU,CAAC9sB,MAAX,GAAoB,CAAlC,GAAsC,SAAtC,GAAkD,EAA7D;AACA1B,UAAAA,OAAO,IAAK,GAAEwuB,UAAU,CAACtsB,GAAX,CAAemb,CAAC,IAAIA,CAAC,GAAG,MAAMA,CAAN,GAAU,GAAb,GAAmB,gBAAxC,EAA0D9b,IAA1D,CAA+D,IAA/D,CAAqE,EAAnF;AACA,gBAAM,IAAIzB,aAAJ,CACJE,OADI,EAEJ;AACEa,YAAAA,IAAI,EAAE,UADR;AAEEE,YAAAA,MAAM,EAAE,mBAFV;AAGEd,YAAAA,OAAO,EAAE;AACPuV,cAAAA;AADO,aAHX;AAMEvU,YAAAA,KAAK,EAAE;AACLE,cAAAA,GAAG,EAAE,IADA;AAELD,cAAAA,QAAQ,EAAEstB,UAFL;AAGLltB,cAAAA,MAAM,EAAEib,WAHH;AAILW,cAAAA,YAAY,EAAE,KAAKvZ,IAAL,CAAUtJ,YAAY,CAAC5B,uBAAvB;AAJT;AANT,WAFI,CAAN;AAgBD;AACF,OApGoB;AAqGrBwE,MAAAA,IAAI,EAAE;AArGe,KAAvB;AAuGA,SAAKwxB,mBAAL,GAA2B,IAAIhT,aAAJ,CAAgB,KAAK9X,IAArB,EAA2B,UAA3B,CAA3B;AACA,SAAK+qB,oBAAL,GAA4B,IAAIjT,aAAJ,CAAgB,KAAK9X,IAArB,EAA2B,WAA3B,CAA5B;AACA,SAAKgrB,oBAAL,GAA4B,IAAIlT,aAAJ,CAAgB,KAAK9X,IAArB,EAA2B,WAA3B,CAA5B;AACD;;AAEDqqB,EAAAA,uBAAuB,CAAE;AAAEC,IAAAA,YAAF;AAAgBrqB,IAAAA,SAAhB;AAA2BxG,IAAAA,KAA3B;AAAkC4P,IAAAA,SAAlC;AAA6CqG,IAAAA,eAA7C;AAA8D,OAAGJ;AAAjE,GAAF,EAA2E;AAChG,QAAI,CAAC,KAAK2b,oBAAL,CAA0BX,YAA1B,CAAL,EAA8C;AAC5C,YAAMluB,KAAK,CAAE,wBAAuBkuB,YAAa,EAAtC,CAAX;AACD;;AAED,UAAMY,MAAM,GAAG;AACbxX,MAAAA,gBAAgB,EAAE,qBADL;AAEbuC,MAAAA,eAAe,EAAE,oBAFJ;AAGblC,MAAAA,cAAc,EAAE;AAHH,KAAf;;AAKA,UAAMoX,YAAY,GAAG,CAACC,YAAD,EAAe3rB,QAAf,EAAyB4rB,MAAzB,KAAoC;AACvD,UAAID,YAAY,CAAC5tB,GAAjB,EAAsB;AACpB,cAAM8tB,eAAe,GAAGJ,MAAM,CAACZ,YAAD,CAA9B;;AACA,YAAI7qB,QAAQ,CAAC6rB,eAAD,CAAZ,EAA+B;AAC7B,iBAAO9N,CAAC,CAAC,KAAKsN,mBAAN,EAA2B,MAAMrrB,QAAQ,CAAC6rB,eAAD,CAAR,CAA0BD,MAA1B,CAAjC,CAAR;AACD,SAFD,MAEO;AACL,iBAAOzB,IAAI,CAAC,KAAKkB,mBAAN,EAA2B,MAAMrrB,QAAQ,CAAC6qB,YAAD,CAAR,CAAuBe,MAAvB,CAAjC,EACT,IAAIlvB,aAAJ,CACG,GAAEkN,SAAS,CAACwI,OAAQ,uBAAsBpS,QAAQ,CAAChD,IAAT,IAAiB2uB,YAAY,CAAC3uB,IAAK,eAAc4uB,MAAM,CAACjqB,IAAK,WAD1G,EAEE;AACElE,YAAAA,IAAI,EAAE,UADR;AAEEE,YAAAA,MAAM,EAAEqC,QAAQ,CAAChD,IAAT,IAAiB2uB,YAAY,CAAC3uB,IAFxC;AAGE4uB,YAAAA,MAAM,EAAE;AACNjqB,cAAAA,IAAI,EAAEiqB,MAAM,CAACjqB;AADP,aAHV;AAME9D,YAAAA,KAAK,EAAE;AACLE,cAAAA,GAAG,EAAE,IADA;AAELD,cAAAA,QAAQ,EAAE,QAFL;AAGLI,cAAAA,MAAM,EAAE;AAHH;AANT,WAFF,CADS,CAAX;AAiBD;AACF,OAvBD,MAuBO;AACL,eAAO6f,CAAC,CAAC,KAAKsN,mBAAN,EAA2B,MAAMrrB,QAAQ,CAAC6qB,YAAD,CAAR,CAAuBe,MAAvB,CAAjC,CAAR;AACD;AACF,KA3BD;;AA6BA,UAAME,aAAa,GAAGtrB,SAAS,CAC5BkI,MADmB,CACZrC,CAAC,IAAI,KAAK7F,SAAL,CAAe6F,CAAC,CAACrJ,IAAjB,EAAuB6tB,YAAvB,CADO,EAEnB/rB,GAFmB,CAEfuH,CAAC,IAAIqlB,YAAY,CAACrlB,CAAD,EAAI,KAAK7F,SAAL,CAAe6F,CAAC,CAACrJ,IAAjB,CAAJ,EAA4B;AAChDhD,MAAAA,KADgD;AAEhD4P,MAAAA,SAFgD;AAGhDqG,MAAAA,eAHgD;AAIhDtO,MAAAA,IAAI,EAAEqT,eAAe,CAAC7E,WAAhB,CAA4B9J,CAAC,CAAC1E,IAA9B,EAAoCsO,eAApC,EAAqD,KAAK1P,IAA1D,EAAgEsP,IAAI,CAAC9U,MAArE,CAJ0C;AAKhDgxB,MAAAA,QAAQ,EAAE,KALsC;AAMhD,SAAGlc;AAN6C,KAA5B,CAFF,CAAtB;AAUA,UAAM4a,cAAc,GAAG/vB,MAAM,CAACopB,MAAP,CAAc,KAAK2G,cAAnB,EACpB/hB,MADoB,CACbrC,CAAC,IAAIA,CAAC,CAACwkB,YAAD,CADO,EAEpB/rB,GAFoB,CAEhBuH,CAAC,IAAI0X,CAAC,CAAC,KAAKsN,mBAAN,EAA2B,MAAMhlB,CAAC,CAACwkB,YAAD,CAAD,CAAgB;AAAE7wB,MAAAA,KAAF;AAAS4P,MAAAA,SAAT;AAAoBqG,MAAAA,eAApB;AAAqCtO,MAAAA,IAAI,EAAE,EAA3C;AAA+CoqB,MAAAA,QAAQ,EAAE,IAAzD;AAA+D,SAAGlc;AAAlE,KAAhB,CAAjC,CAFU,CAAvB;AAIA,UAAMmc,WAAW,GAAG,CAAC,GAAGF,aAAJ,EAAmB,GAAGrB,cAAtB,CAApB;;AACA,QAAI,KAAKlqB,IAAL,CAAUtJ,YAAY,CAAC9B,uCAAvB,CAAJ,EAAqE;AACnE,aAAO2C,OAAO,CAACm0B,UAAR,CAAmBD,WAAnB,EAAgC9zB,IAAhC,CAAsCg0B,OAAD,IAAa;AACvD,cAAMC,QAAQ,GAAGD,OAAO,CAACxjB,MAAR,CAAetJ,MAAM,IAAIA,MAAM,CAACgtB,MAAP,KAAkB,UAA3C,EAAuDttB,GAAvD,CAA2DM,MAAM,IAAIA,MAAM,CAACitB,MAA5E,CAAjB;;AACA,YAAIF,QAAQ,CAAC7tB,MAAb,EAAqB;AACnB,gBAAMM,mBAAmB,CAACutB,QAAD,EAAW,EAAX,CAAzB;AACD;;AACD,eAAOD,OAAO,CAACxjB,MAAR,CAAetJ,MAAM,IAAIA,MAAM,CAACgtB,MAAP,KAAkB,WAA3C,EAAwDttB,GAAxD,CAA4DM,MAAM,IAAIA,MAAM,CAAC8H,KAA7E,CAAP;AACD,OANM,CAAP;AAOD;;AACD,QAAI8kB,WAAW,CAAC1tB,MAAZ,GAAqB,CAAzB,EAA4B,OAAOxG,OAAO,CAACw0B,GAAR,CAAYN,WAAZ,EAAyB9zB,IAAzB,CAA8B,MAAM,IAApC,CAAP;AAC5B,WAAOJ,OAAO,CAACC,OAAR,CAAgB,KAAhB,CAAP;AACD;;AAED4yB,EAAAA,wBAAwB,CAAE;AAAE/oB,IAAAA,QAAF;AAAYlB,IAAAA,UAAZ;AAAwB1G,IAAAA,KAAxB;AAA+B4P,IAAAA,SAA/B;AAA0CqG,IAAAA,eAA1C;AAA2D,OAAGJ;AAA9D,GAAF,EAAwE;AAC9F,QAAIjO,QAAQ,KAAK,WAAb,IAA4BA,QAAQ,KAAK,aAAzC,IAA0DA,QAAQ,KAAK,SAAvE,IAAoFA,QAAQ,KAAK,YAAjG,IAAiHA,QAAQ,KAAK,cAA9H,IAAgJA,QAAQ,KAAK,UAA7J,IACFA,QAAQ,KAAK,cADX,IAC6BA,QAAQ,KAAK,YAD9C,EAEE;AACA,YAAMjF,KAAK,CAAE,oBAAmBiF,QAAS,EAA9B,CAAX;AACD;;AAED,UAAM2qB,iBAAiB,GAAG,CAAC7rB,UAAU,IAAI,EAAf,EACvBgI,MADuB,CAChBqD,CAAC,IAAI,KAAKrL,UAAL,CAAgBqL,CAAC,CAAC/O,IAAlB,EAAwB4E,QAAxB,CADW,EAEvB9C,GAFuB,CAEnBiN,CAAC,IAAIgS,CAAC,CAAC,KAAKuN,oBAAN,EAA4B,MAAM,KAAK5qB,UAAL,CAAgBqL,CAAC,CAAC/O,IAAlB,EAAwB4E,QAAxB,EAAkC;AAC7E5H,MAAAA,KAD6E;AAE7E4P,MAAAA,SAF6E;AAG7EqG,MAAAA,eAH6E;AAI7EtO,MAAAA,IAAI,EAAEqT,eAAe,CAAC7E,WAAhB,CAA4BpE,CAAC,CAACpK,IAA9B,EAAoCsO,eAApC,EAAqD,KAAK1P,IAA1D,EAAgEsP,IAAI,CAAC9U,MAArE,CAJuE;AAK7EgxB,MAAAA,QAAQ,EAAE,KALmE;AAM7E,SAAGlc;AAN0E,KAAlC,CAAlC,CAFa,CAA1B;AAWA,UAAM2c,cAAc,GAAG9xB,MAAM,CAACopB,MAAP,CAAc,KAAK4G,eAAnB,EACpBhiB,MADoB,CACbqD,CAAC,IAAIA,CAAC,CAACnK,QAAD,CADO,EAEpB9C,GAFoB,CAEhBiN,CAAC,IAAIgS,CAAC,CAAC,KAAKuN,oBAAN,EAA4B,MAAMvf,CAAC,CAACnK,QAAD,CAAD,CAAY;AAAE5H,MAAAA,KAAF;AAAS4P,MAAAA,SAAT;AAAoBqG,MAAAA,eAApB;AAAqCtO,MAAAA,IAAI,EAAE,EAA3C;AAA+CoqB,MAAAA,QAAQ,EAAE,IAAzD;AAA+D,SAAGlc;AAAlE,KAAZ,CAAlC,CAFU,CAAvB;AAIA,UAAMmc,WAAW,GAAG,CAAC,GAAGO,iBAAJ,EAAuB,GAAGC,cAA1B,CAApB;AACA,QAAIR,WAAW,CAAC1tB,MAAZ,GAAqB,CAAzB,EAA4B,OAAOxG,OAAO,CAACw0B,GAAR,CAAYN,WAAZ,EAAyB9zB,IAAzB,CAA8B,MAAM,IAApC,CAAP;AAC5B,WAAOJ,OAAO,CAACC,OAAR,CAAgB,KAAhB,CAAP;AACD;;AAED+yB,EAAAA,wBAAwB,CAAE;AAAE9wB,IAAAA,KAAF;AAAS4P,IAAAA,SAAT;AAAoBqG,IAAAA,eAApB;AAAqC,OAAGJ;AAAxC,GAAF,EAAkD;AACxE,UAAM0c,iBAAiB,GAAG,CAAC3iB,SAAS,CAAChJ,UAAV,IAAwB,EAAzB,EACvB8H,MADuB,CAChBtH,EAAE,IAAI,KAAKR,UAAL,CAAgBQ,EAAE,CAACpE,IAAnB,CADU,EAEvB8B,GAFuB,CAEnBsC,EAAE,IAAI2c,CAAC,CAAC,KAAKwN,oBAAN,EAA4B,MAAM,KAAK3qB,UAAL,CAAgBQ,EAAE,CAACpE,IAAnB,EAAyBkY,YAAzB,CAAsC;AAClFlb,MAAAA,KADkF;AAElF4P,MAAAA,SAFkF;AAGlFqG,MAAAA,eAHkF;AAIlFtO,MAAAA,IAAI,EAAEqT,eAAe,CAAC7E,WAAhB,CAA4B/O,EAAE,CAACO,IAA/B,EAAqCsO,eAArC,EAAsD,KAAK1P,IAA3D,EAAiEsP,IAAI,CAACkF,KAAtE,CAJ4E;AAKlF,SAAGlF;AAL+E,KAAtC,CAAlC,CAFY,CAA1B;AAUA,QAAI0c,iBAAiB,CAACjuB,MAAlB,GAA2B,CAA/B,EAAkC,OAAOxG,OAAO,CAACw0B,GAAR,CAAYC,iBAAZ,EAA+Br0B,IAA/B,CAAoC,MAAM,IAA1C,CAAP;AAClC,WAAOJ,OAAO,CAACC,OAAR,CAAgB,KAAhB,CAAP;AACD;;AAEDyzB,EAAAA,oBAAoB,CAAEX,YAAF,EAAgB;AAClC,WAAO,CAAC,kBAAD,EAAqB,iBAArB,EAAwC,gBAAxC,EAA0D4B,IAA1D,CAA+DC,CAAC,IAAI7B,YAAY,KAAK6B,CAArF,CAAP;AACD;;AAED1B,EAAAA,iBAAiB,CAAE;AAAEha,IAAAA,SAAF;AAAa+Z,IAAAA,qBAAqB,GAAG;AAArC,GAAF,EAAgD;AAC/D,QAAIzwB,0BAAC,CAACiI,QAAF,CAAWyO,SAAX,CAAJ,EAA2B;AACzB,UAAI,KAAKI,UAAL,CAAgBJ,SAAhB,CAAJ,EAAgC;AAC9B,eAAO,KAAKI,UAAL,CAAgBJ,SAAhB,EAA2BI,UAAlC;AACD,OAFD,MAEO;AACL,cAAMub,KAAK,GAAG3b,SAAS,CAAC1I,KAAV,CAAgB,GAAhB,CAAd;;AACA,YAAI,KAAK8I,UAAL,CAAgBub,KAAK,CAAC,CAAD,CAArB,CAAJ,EAA+B;AAC7B,gBAAMC,OAAO,GAAGD,KAAK,CAAC1kB,KAAN,CAAY,CAAZ,CAAhB;AACA,iBAAO,KAAKmJ,UAAL,CAAgBub,KAAK,CAAC,CAAD,CAArB,EAA0Bvb,UAA1B,CAAqCtS,GAArC,CAAyCosB,GAAG,IAAIja,wBAAI,CAACvE,MAAL,CAAYwe,GAAZ,EAAiB,GAAG0B,OAApB,CAAhD,CAAP;AACD;AACF;AACF;;AACD,QAAI7B,qBAAJ,EAA2B,OAAO,IAAP,CAA3B,KACK,OAAO,CAAC/Z,SAAD,CAAP;AACN;;AAED6b,EAAAA,mBAAmB,GAAI;AACrB,WAAO;AACLvN,MAAAA,SAAS,EAAE,KAAKA,SAAL,CAAe1lB,IAAf,CAAoB,IAApB,CADN;AAEL4lB,MAAAA,aAAa,EAAE,KAAKA,aAAL,CAAmB5lB,IAAnB,CAAwB,IAAxB,CAFV;AAGL2lB,MAAAA,gBAAgB,EAAE,KAAKA,gBAAL,CAAsB3lB,IAAtB,CAA2B,IAA3B,CAHb;AAIL6lB,MAAAA,oBAAoB,EAAE,KAAKA,oBAAL,CAA0B7lB,IAA1B,CAA+B,IAA/B,CAJjB;AAKLkzB,MAAAA,KAAK,EAAE,KAAKA,KAAL,CAAWlzB,IAAX,CAAgB,IAAhB,CALF;AAMLsQ,MAAAA,eAAe,EAAE,KAAKA,eAAL,CAAqBtQ,IAArB,CAA0B,IAA1B,CANZ;AAOLwQ,MAAAA,gBAAgB,EAAE,KAAKA,gBAAL,CAAsBxQ,IAAtB,CAA2B,IAA3B,CAPb;AAQLuQ,MAAAA,gBAAgB,EAAE,KAAKA,gBAAL,CAAsBvQ,IAAtB,CAA2B,IAA3B,CARb;AASLge,MAAAA,gBAAgB,EAAE,KAAKA,gBAAL,CAAsBhe,IAAtB,CAA2B,IAA3B,CATb;AAULF,MAAAA,eAAe,EAAE;AACfua,QAAAA,gBAAgB,EAAE,KAAKva,eAAL,CAAqBua,gBAArB,CAAsCra,IAAtC,CAA2C,IAA3C,CADH;AAEf4c,QAAAA,eAAe,EAAE,KAAK9c,eAAL,CAAqB8c,eAArB,CAAqC5c,IAArC,CAA0C,IAA1C,CAFF;AAGf0a,QAAAA,cAAc,EAAE,KAAK5a,eAAL,CAAqB4a,cAArB,CAAoC1a,IAApC,CAAyC,IAAzC,CAHD;AAIfyX,QAAAA,gBAAgB,EAAE,KAAK3X,eAAL,CAAqB2X,gBAArB,CAAsCzX,IAAtC,CAA2C,IAA3C,CAJH;AAKfD,QAAAA,iBAAiB,EAAE,KAAKD,eAAL,CAAqBC,iBAArB,CAAuCC,IAAvC,CAA4C,IAA5C,CALJ;AAMf0c,QAAAA,oBAAoB,EAAE,KAAK5c,eAAL,CAAqB4c,oBAArB,CAA0C1c,IAA1C,CAA+C,IAA/C,CANP;AAOfoa,QAAAA,YAAY,EAAE,KAAKta,eAAL,CAAqBsa,YAArB,CAAkCpa,IAAlC,CAAuC,IAAvC,CAPC;AAQfwa,QAAAA,UAAU,EAAE,KAAK1a,eAAL,CAAqB0a,UAArB,CAAgCxa,IAAhC,CAAqC,IAArC,CARG;AASfub,QAAAA,SAAS,EAAE,KAAKzb,eAAL,CAAqByb,SAArB,CAA+Bvb,IAA/B,CAAoC,IAApC,CATI;AAUfwb,QAAAA,WAAW,EAAE,KAAK1b,eAAL,CAAqB0b,WAArB,CAAiCxb,IAAjC,CAAsC,IAAtC,CAVE;AAWf6b,QAAAA,OAAO,EAAE,KAAK/b,eAAL,CAAqB+b,OAArB,CAA6B7b,IAA7B,CAAkC,IAAlC,CAXM;AAYf+b,QAAAA,UAAU,EAAE,KAAKjc,eAAL,CAAqBic,UAArB,CAAgC/b,IAAhC,CAAqC,IAArC,CAZG;AAafic,QAAAA,YAAY,EAAE,KAAKnc,eAAL,CAAqBmc,YAArB,CAAkCjc,IAAlC,CAAuC,IAAvC,CAbC;AAcf6c,QAAAA,QAAQ,EAAE,KAAK/c,eAAL,CAAqB+c,QAArB,CAA8B7c,IAA9B,CAAmC,IAAnC,CAdK;AAefsb,QAAAA,YAAY,EAAE,KAAKxb,eAAL,CAAqBwb,YAArB,CAAkCtb,IAAlC,CAAuC,IAAvC,CAfC;AAgBfC,QAAAA,IAAI,EAAE,KAAKH,eAAL,CAAqBG,IAArB,IAA6B,KAAKH,eAAL,CAAqBG,IAArB,CAA0BD,IAA1B,CAA+B,IAA/B;AAhBpB;AAVZ,KAAP;AA6BD;;AAED3B,EAAAA,KAAK,GAAI;AACP,UAAMkoB,YAAY,GAAGtB,cAArB;AACA,SAAK0L,SAAL,CAAe3J,SAAS,CAACxc,qBAAzB,IAAkD,IAAI+b,YAAJ,CAAiB,KAAK0M,mBAAL,EAAjB,EAA6C,KAAKtsB,IAAlD,CAAlD;AACA,SAAKgqB,SAAL,CAAe3J,SAAS,CAACxc,qBAAzB,EAAgDsb,QAAhD;AACA,UAAMsF,WAAW,GAAG+H,aAApB;AACA,SAAKxC,SAAL,CAAe3J,SAAS,CAACvc,oBAAzB,IAAiD,IAAI2gB,WAAJ,CAAgB,KAAK6H,mBAAL,EAAhB,EAA4C,KAAKtsB,IAAjD,CAAjD;AACA,SAAKgqB,SAAL,CAAe3J,SAAS,CAACvc,oBAAzB,EAA+Cqb,QAA/C;AACA,UAAMoH,WAAW,GAAGkG,aAApB;AACA,SAAKzC,SAAL,CAAe3J,SAAS,CAACpc,oBAAzB,IAAiD,IAAIsiB,WAAJ,CAAgB,KAAK+F,mBAAL,EAAhB,EAA4C,KAAKtsB,IAAjD,CAAjD;AACA,SAAKgqB,SAAL,CAAe3J,SAAS,CAACpc,oBAAzB,EAA+Ckb,QAA/C;AACA,UAAM+I,YAAY,GAAGwE,cAArB;AACA,SAAK1C,SAAL,CAAe3J,SAAS,CAACtc,qBAAzB,IAAkD,IAAImkB,YAAJ,CAAiB,KAAKoE,mBAAL,EAAjB,EAA6C,KAAKtsB,IAAlD,CAAlD;AACA,SAAKgqB,SAAL,CAAe3J,SAAS,CAACtc,qBAAzB,EAAgDob,QAAhD;AACA,UAAMiJ,YAAY,GAAGuE,cAArB;AACA,SAAK3C,SAAL,CAAe3J,SAAS,CAACrc,qBAAzB,IAAkD,IAAIokB,YAAJ,CAAiB,KAAKkE,mBAAL,EAAjB,EAA6C,KAAKtsB,IAAlD,CAAlD;AACA,SAAKgqB,SAAL,CAAe3J,SAAS,CAACrc,qBAAzB,EAAgDmb,QAAhD;AACA,UAAMmJ,gBAAgB,GAAGsE,kBAAzB;AACA,SAAK5C,SAAL,CAAe3J,SAAS,CAACnc,yBAAzB,IAAsD,IAAIokB,gBAAJ,CAAqB,KAAKgE,mBAAL,EAArB,EAAiD,KAAKtsB,IAAtD,CAAtD;AACA,SAAKgqB,SAAL,CAAe3J,SAAS,CAACnc,yBAAzB,EAAoDib,QAApD;AAEA,SAAK8K,OAAL,GAAe3Q,gBAAgB,CAAC,KAAKtZ,IAAL,CAAUtJ,YAAY,CAAC5B,uBAAvB,CAAD,CAA/B;AAEA,UAAM+3B,cAAc,GAAG,IAAI/sB,gBAAJ,CAAmB;AAAEC,MAAAA,kBAAkB,EAAE,KAAKusB,mBAAL,EAAtB;AAAkDtsB,MAAAA,IAAI,EAAE,KAAKA;AAA7D,KAAnB,CAAvB;AACA,SAAKC,SAAL,GAAiB4sB,cAAc,CAAC5sB,SAAhC;AACA,SAAKiqB,cAAL,GAAsB2C,cAAc,CAAC5rB,iBAAf,EAAtB;AACA,SAAKd,UAAL,GAAkB0sB,cAAc,CAAC1sB,UAAjC;AACA,SAAKgqB,eAAL,GAAuB0C,cAAc,CAAC3rB,kBAAf,EAAvB;AACA,SAAKb,UAAL,GAAkBwsB,cAAc,CAACxsB,UAAjC;AACD;;AAEDsJ,EAAAA,eAAe,CAAElN,IAAF,EAAQ;AACrB,WAAO,KAAKwD,SAAL,CAAexD,IAAf,KAAwB,KAA/B;AACD;;AAEDoN,EAAAA,gBAAgB,CAAEpN,IAAF,EAAQ;AACtB,WAAO,KAAK0D,UAAL,CAAgB1D,IAAhB,KAAyB,KAAhC;AACD;;AAEDmN,EAAAA,gBAAgB,CAAEnN,IAAF,EAAQ;AACtB,WAAO,KAAK4D,UAAL,CAAgB5D,IAAhB,KAAyB,KAAhC;AACD;;AAED8vB,EAAAA,KAAK,CAAE3T,WAAF,EAAenI,SAAf,EAA0B;AAC7B,WAAO,KAAKwZ,OAAL,CAAarR,WAAb,EAA0BnI,SAA1B,CAAP;AACD;;AAED7X,EAAAA,OAAO,CAAEC,YAAF,EAAgBC,YAAhB,EAA8BC,UAA9B,EAA0C;AAC/C,UAAM7B,QAAQ,GAAG,KAAK41B,WAAL,CAAiBh0B,YAAjB,CAAjB;AACA,WAAO5B,QAAQ,CAAC0B,OAAT,CAAiBC,YAAjB,EAA+BE,UAA/B,CAAP;AACD;;AAEDsmB,EAAAA,SAAS,CAAE7lB,MAAF,EAAUV,YAAV,EAAwB;AAC/B,UAAM5B,QAAQ,GAAG,KAAK41B,WAAL,CAAiBh0B,YAAjB,CAAjB;AACA,WAAO5B,QAAQ,CAACmoB,SAAT,CAAmB7lB,MAAnB,CAAP;AACD;;AAEDszB,EAAAA,WAAW,CAAEh0B,YAAF,EAAgB;AACzB,UAAM+F,MAAM,GAAG,KAAKmrB,SAAL,CAAelxB,YAAf,CAAf;AACA,QAAI+F,MAAJ,EAAY,OAAOA,MAAP;AACZ,UAAM,IAAIzC,KAAJ,CAAW,sCAAqCtD,YAAa,EAA7D,CAAN;AACD;;AAEDi0B,EAAAA,4BAA4B,CAAEv0B,QAAF,EAAYC,UAAZ,EAAwB;AAClD,UAAMu0B,QAAQ,GAAGC,0BAAM,CAACC,IAAP,CAAY9D,WAAZ,EAAyB;AAAE1lB,MAAAA,GAAG,EAAElL,QAAP;AAAiB20B,MAAAA,SAAS,EAAE;AAA5B,KAAzB,CAAjB;;AACA,QAAI10B,UAAJ,EAAgB;AACd,YAAM20B,eAAe,GAAGH,0BAAM,CAACC,IAAP,CAAYz0B,UAAZ,EAAwB;AAAEiL,QAAAA,GAAG,EAAElL,QAAP;AAAiB20B,QAAAA,SAAS,EAAE;AAA5B,OAAxB,CAAxB;;AACApzB,MAAAA,0BAAC,CAACszB,MAAF,CAASL,QAAT,EAAoBM,IAAD,IAAUF,eAAe,CAACtqB,OAAhB,CAAwBwqB,IAAxB,IAAgC,CAA7D;AACD;;AACDvzB,IAAAA,0BAAC,CAACszB,MAAF,CAASL,QAAT,EAAoBM,IAAD,IAAU;AAC3B,YAAMC,MAAM,GAAGlE,WAAW,CAACtQ,IAAZ,CAAiBvX,wBAAI,CAACC,QAAL,CAAc6rB,IAAd,CAAjB,CAAf;AACA,UAAIC,MAAJ,EAAYluB,OAAK,CAAE,iDAAgDiuB,IAAK,GAAvD,CAAL;AACZ,aAAOC,MAAP;AACD,KAJD;;AAKA,WAAOP,QAAP;AACD;;AAEDr0B,EAAAA,wBAAwB,CAAEH,QAAF,EAAYC,UAAZ,EAAwB;AAC9C,QAAIu0B,QAAQ,GAAG,EAAf;AAEA,UAAMQ,aAAa,GAAG7pB,sBAAE,CAAC8pB,QAAH,CAAYj1B,QAAZ,CAAtB;;AACA,QAAIg1B,aAAa,CAACE,MAAd,EAAJ,EAA4B;AAC1BV,MAAAA,QAAQ,GAAG,CAACxrB,wBAAI,CAACC,QAAL,CAAcjJ,QAAd,CAAD,CAAX;AACAA,MAAAA,QAAQ,GAAGgJ,wBAAI,CAACmsB,OAAL,CAAan1B,QAAb,CAAX;AACD,KAHD,MAGO;AACLw0B,MAAAA,QAAQ,GAAG,KAAKD,4BAAL,CAAkCv0B,QAAlC,EAA4CC,UAA5C,CAAX;AACD;;AACD4G,IAAAA,OAAK,CAAE,2BAA0B7G,QAAS,sBAAqBw0B,QAAS,EAAnE,CAAL;AAEA,UAAMY,SAAS,GAAG,EAAlB;AACA,UAAMC,aAAa,GAAG,EAAtB;AACA,UAAMC,gBAAgB,GAAG,EAAzB;AACA,UAAMC,oBAAoB,GAAG,EAA7B;AACAf,IAAAA,QAAQ,CAAChwB,OAAT,CAAkB4d,QAAD,IAAc;AAC7B,YAAM;AAAEphB,QAAAA,MAAF;AAAUqX,QAAAA,UAAV;AAAsBmd,QAAAA,OAAtB;AAA+BvI,QAAAA;AAA/B,UAAqD,KAAKwI,UAAL,CAAgBz1B,QAAhB,EAA0BoiB,QAA1B,CAA3D;AACA,UAAIphB,MAAJ,EAAYo0B,SAAS,CAACt2B,IAAV,CAAe,GAAGkC,MAAlB;AACZ,UAAIqX,UAAJ,EAAgBgd,aAAa,CAACv2B,IAAd,CAAmB,GAAGuZ,UAAtB;AAChB,UAAImd,OAAJ,EAAaF,gBAAgB,CAACx2B,IAAjB,CAAsB,GAAG02B,OAAzB;AACb,UAAIvI,iBAAJ,EAAuBsI,oBAAoB,CAACz2B,IAArB,CAA0B,GAAGmuB,iBAA7B;AACxB,KAND;AAOApmB,IAAAA,OAAK,CAAE,2BAA0B7G,QAAS,qBAAoBo1B,SAAS,CAAC7vB,MAAV,GAAmB6vB,SAAS,CAAChwB,IAAV,CAAe,IAAf,CAAnB,GAA0C,MAAO,EAA1G,CAAL;AACAyB,IAAAA,OAAK,CAAE,2BAA0B7G,QAAS,yBAAwBq1B,aAAa,CAAC9vB,MAAd,GAAuBhE,0BAAC,CAACwE,GAAF,CAAMsvB,aAAN,EAAsB7b,CAAD,IAAOA,CAA5B,EAA+BpU,IAA/B,CAAoC,IAApC,CAAvB,GAAmE,MAAO,EAAvI,CAAL;AACAyB,IAAAA,OAAK,CAAE,2BAA0B7G,QAAS,6BAA4Bs1B,gBAAgB,CAAC/vB,MAAjB,GAA0B+vB,gBAAgB,CAAClwB,IAAjB,CAAsB,IAAtB,CAA1B,GAAwD,MAAO,EAAhI,CAAL;AACAyB,IAAAA,OAAK,CAAE,2BAA0B7G,QAAS,2BAA0Bu1B,oBAAoB,CAAChwB,MAArB,GAA8BgwB,oBAAoB,CAACxvB,GAArB,CAA0B2vB,kBAAD,IAAwBxd,wBAAI,CAACC,OAAL,CAAaud,kBAAb,CAAjD,EAAmFtwB,IAAnF,CAAwF,IAAxF,CAA9B,GAA8H,MAAO,EAApM,CAAL;AACA,WAAO;AAAEpE,MAAAA,MAAM,EAAEo0B,SAAV;AAAqB/c,MAAAA,UAAU,EAAEgd,aAAjC;AAAgDG,MAAAA,OAAO,EAAEF,gBAAzD;AAA2ErI,MAAAA,iBAAiB,EAAEsI;AAA9F,KAAP;AACD;;AAEDI,EAAAA,oBAAoB,CAAEt1B,YAAF,EAAgBu1B,eAAhB,EAAiCC,cAAc,GAAG,IAAlD,EAAwD;AAC1E,QAAIt0B,0BAAC,CAACiI,QAAF,CAAWqsB,cAAX,CAAJ,EAAgCA,cAAc,GAAG,CAACA,cAAD,CAAjB;AAChC,QAAIt0B,0BAAC,CAACgD,OAAF,CAAUsxB,cAAV,KAA6BA,cAAc,CAACtwB,MAAf,KAA0B,CAA3D,EAA8DswB,cAAc,GAAG,IAAjB;AAE9D,UAAMxvB,MAAM,GAAG;AACbrF,MAAAA,MAAM,EAAE,EADK;AAEbqX,MAAAA,UAAU,EAAE,EAFC;AAGbmd,MAAAA,OAAO,EAAE,EAHI;AAIbvI,MAAAA,iBAAiB,EAAE;AAJN,KAAf;;AAMA,QAAI,CAAC4I,cAAD,IAAmBA,cAAc,CAAC9I,QAAf,CAAwBlF,SAAS,CAAChc,yBAAlC,CAAvB,EAAqF;AACnFxF,MAAAA,MAAM,CAACgS,UAAP,GAAoB,KAAKjY,OAAL,CAAaC,YAAb,EAA2Bu1B,eAA3B,EAA4C/N,SAAS,CAAChc,yBAAtD,CAApB;AACD;;AACD,QAAI,CAACgqB,cAAD,IAAmBA,cAAc,CAAC9I,QAAf,CAAwBlF,SAAS,CAACjc,qBAAlC,CAAvB,EAAiF;AAC/EvF,MAAAA,MAAM,CAACmvB,OAAP,GAAiB,KAAKp1B,OAAL,CAAaC,YAAb,EAA2Bu1B,eAA3B,EAA4C/N,SAAS,CAACjc,qBAAtD,CAAjB;AACD;;AACD,QAAI,CAACiqB,cAAD,IAAmBA,cAAc,CAAC9I,QAAf,CAAwBlF,SAAS,CAAClc,oBAAlC,CAAvB,EAAgF;AAC9EtF,MAAAA,MAAM,CAACrF,MAAP,GAAgB,KAAKZ,OAAL,CAAaC,YAAb,EAA2Bu1B,eAA3B,EAA4C/N,SAAS,CAAClc,oBAAtD,CAAhB;AACD;;AACD,QAAI,CAACkqB,cAAD,IAAmBA,cAAc,CAAC9I,QAAf,CAAwBlF,SAAS,CAAC/b,+BAAlC,CAAvB,EAA2F;AACzFzF,MAAAA,MAAM,CAAC4mB,iBAAP,GAA2B,KAAK7sB,OAAL,CAAaC,YAAb,EAA2Bu1B,eAA3B,EAA4C/N,SAAS,CAAC/b,+BAAtD,CAA3B;AACD;;AACD,WAAOzF,MAAP;AACD;;AAEDovB,EAAAA,UAAU,CAAEz1B,QAAF,EAAYoiB,QAAZ,EAAsB;AAC9B,QAAI/b,MAAM,GAAG,EAAb;;AAEA,QAAI;AACF,UAAIhG,YAAY,GAAG8K,sBAAE,CAAC2qB,YAAH,CAAgB9sB,wBAAI,CAAChK,OAAL,CAAagB,QAAb,EAAuBoiB,QAAvB,CAAhB,CAAnB;AAEA,YAAM2T,eAAe,GAAGC,YAAY,CAACC,OAAb,CAAqB51B,YAArB,EAAmC;AACzDL,QAAAA,QADyD;AAEzDoiB,QAAAA,QAFyD;AAGzD5a,QAAAA,IAAI,EAAE,KAAKA;AAH8C,OAAnC,CAAxB;;AAKA,UAAIuuB,eAAJ,EAAqB;AACnB11B,QAAAA,YAAY,GAAG01B,eAAe,CAAC11B,YAA/B;AACAwG,QAAAA,OAAK,CAAE,QAAOub,QAAS,mBAAkB2T,eAAe,CAAC1P,WAAY,EAA/D,IACH0P,eAAe,CAAC3T,QAAhB,GAA4B,4BAA2B2T,eAAe,CAAC3T,QAAS,EAAhF,GAAoF,EADjF,CAAD,CAAL;AAGAA,QAAAA,QAAQ,GAAG2T,eAAe,CAAC3T,QAAhB,IAA4BA,QAAvC;AACD;;AAED,UAAIA,QAAQ,CAACC,QAAT,CAAkB,OAAlB,KAA8BD,QAAQ,CAACC,QAAT,CAAkB,OAAlB,CAAlC,EAA8D;AAC5Dhc,QAAAA,MAAM,GAAG,KAAKsvB,oBAAL,CAA0Bt1B,YAA1B,EAAwCwnB,SAAS,CAACxc,qBAAlD,EAAyE,CAACwc,SAAS,CAAChc,yBAAX,EAAsCgc,SAAS,CAACjc,qBAAhD,EAAuEic,SAAS,CAAClc,oBAAjF,EAAuGkc,SAAS,CAAC/b,+BAAjH,CAAzE,CAAT;AACD,OAFD,MAEO,IAAIsW,QAAQ,CAACC,QAAT,CAAkB,YAAlB,CAAJ,EAAqC;AAC1Chc,QAAAA,MAAM,GAAG,KAAKsvB,oBAAL,CAA0Bt1B,YAA1B,EAAwCwnB,SAAS,CAACvc,oBAAlD,EAAwEuc,SAAS,CAAClc,oBAAlF,CAAT;AACD,OAFM,MAEA,IAAIyW,QAAQ,CAACC,QAAT,CAAkB,aAAlB,CAAJ,EAAsC;AAC3Chc,QAAAA,MAAM,GAAG,KAAKsvB,oBAAL,CAA0Bt1B,YAA1B,EAAwCwnB,SAAS,CAACvc,oBAAlD,EAAwEuc,SAAS,CAACjc,qBAAlF,CAAT;AACD,OAFM,MAEA,IAAIwW,QAAQ,CAACC,QAAT,CAAkB,iBAAlB,CAAJ,EAA0C;AAC/Chc,QAAAA,MAAM,GAAG,KAAKsvB,oBAAL,CAA0Bt1B,YAA1B,EAAwCwnB,SAAS,CAACvc,oBAAlD,EAAwEuc,SAAS,CAAChc,yBAAlF,CAAT;AACD,OAFM,MAEA,IAAIuW,QAAQ,CAACC,QAAT,CAAkB,sBAAlB,CAAJ,EAA+C;AACpDhc,QAAAA,MAAM,GAAG,KAAKsvB,oBAAL,CAA0Bt1B,YAA1B,EAAwCwnB,SAAS,CAACvc,oBAAlD,EAAwEuc,SAAS,CAAC/b,+BAAlF,CAAT;AACD,OAFM,MAEA,IAAIsW,QAAQ,CAACC,QAAT,CAAkB,YAAlB,CAAJ,EAAqC;AAC1Chc,QAAAA,MAAM,GAAG,KAAKsvB,oBAAL,CAA0Bt1B,YAA1B,EAAwCwnB,SAAS,CAACpc,oBAAlD,EAAwEoc,SAAS,CAAClc,oBAAlF,CAAT;AACD,OAFM,MAEA,IAAIyW,QAAQ,CAACC,QAAT,CAAkB,aAAlB,CAAJ,EAAsC;AAC3Chc,QAAAA,MAAM,GAAG,KAAKsvB,oBAAL,CAA0Bt1B,YAA1B,EAAwCwnB,SAAS,CAACpc,oBAAlD,EAAwEoc,SAAS,CAACjc,qBAAlF,CAAT;AACD,OAFM,MAEA,IAAIwW,QAAQ,CAACC,QAAT,CAAkB,OAAlB,KAA8BD,QAAQ,CAACC,QAAT,CAAkB,MAAlB,CAAlC,EAA6D;AAClEhc,QAAAA,MAAM,GAAG,KAAKsvB,oBAAL,CAA0Bt1B,YAA1B,EAAwCwnB,SAAS,CAACtc,qBAAlD,EAAyE,CAACsc,SAAS,CAAChc,yBAAX,EAAsCgc,SAAS,CAACjc,qBAAhD,EAAuEic,SAAS,CAAClc,oBAAjF,EAAuGkc,SAAS,CAAC/b,+BAAjH,CAAzE,CAAT;AACD,OAFM,MAEA,IAAIsW,QAAQ,CAACC,QAAT,CAAkB,OAAlB,CAAJ,EAAgC;AACrChc,QAAAA,MAAM,GAAG,KAAKsvB,oBAAL,CAA0Bt1B,YAA1B,EAAwCwnB,SAAS,CAACrc,qBAAlD,EAAyE,CAACqc,SAAS,CAAChc,yBAAX,EAAsCgc,SAAS,CAACjc,qBAAhD,EAAuEic,SAAS,CAAClc,oBAAjF,EAAuGkc,SAAS,CAAC/b,+BAAjH,CAAzE,CAAT;AACD,OAFM,MAEA,IAAIsW,QAAQ,CAACC,QAAT,CAAkB,WAAlB,KAAkCD,QAAQ,CAACC,QAAT,CAAkB,KAAlB,CAAtC,EAAgE;AACrEhc,QAAAA,MAAM,GAAG,KAAKsvB,oBAAL,CAA0Bt1B,YAA1B,EAAwCwnB,SAAS,CAACnc,yBAAlD,EAA6E,CAACmc,SAAS,CAAChc,yBAAX,EAAsCgc,SAAS,CAACjc,qBAAhD,EAAuEic,SAAS,CAAClc,oBAAjF,CAA7E,CAAT;AACD,OAFM,MAEA;AACL9E,QAAAA,OAAK,CAAE,8BAA6Bub,QAAS,0BAAxC,CAAL;AACD;AACF,KAvCD,CAuCE,OAAO/iB,GAAP,EAAY;AACZwH,MAAAA,OAAK,CAAE,sCAAqCub,QAAS,WAAU/iB,GAAI,EAA9D,CAAL;AACA,YAAMuG,kBAAkB,CAAE,sCAAqCwc,QAAS,WAAU/iB,GAAG,CAACwE,OAAQ,EAAtE,EAAyExE,GAAzE,CAAxB;AACD,KA7C6B;;;AAgD9B,QAAIgH,MAAM,CAACrF,MAAP,IAAiBqF,MAAM,CAACrF,MAAP,CAAcuE,MAAd,GAAuB,CAA5C,EAA+C;AAC7Cc,MAAAA,MAAM,CAACrF,MAAP,CAAcwD,OAAd,CAAuB0xB,SAAD,IAAe;AACnCA,QAAAA,SAAS,CAAC1b,SAAV,GAAsB;AAAExa,UAAAA,QAAF;AAAYoiB,UAAAA;AAAZ,SAAtB;;AACA,YAAI,CAAC8T,SAAS,CAAC3b,MAAV,CAAiBtW,IAAtB,EAA4B;AAC1BiyB,UAAAA,SAAS,CAAC3b,MAAV,CAAiBtW,IAAjB,GAAwBme,QAAxB;AACD;AACF,OALD;;AAMA,YAAM2S,MAAM,GAAI7mB,CAAD,IAAOA,CAAC,CAACqM,MAAF,CAAStW,IAAT,IAAiB4sB,WAAW,CAACtQ,IAAZ,CAAiBrS,CAAC,CAACqM,MAAF,CAAStW,IAAT,CAAcgM,WAAd,EAAjB,CAAvC;;AACA5J,MAAAA,MAAM,CAACrF,MAAP,CAAc2O,MAAd,CAAqBzB,CAAC,IAAI6mB,MAAM,CAAC7mB,CAAD,CAAhC,EAAqC1J,OAArC,CAA6C0J,CAAC,IAAIrH,OAAK,CAAE,gCAA+BqH,CAAC,CAACqM,MAAF,CAAStW,IAAK,GAA/C,CAAvD;AACAoC,MAAAA,MAAM,CAACrF,MAAP,GAAgBqF,MAAM,CAACrF,MAAP,CAAc2O,MAAd,CAAqBzB,CAAC,IAAI,CAAC6mB,MAAM,CAAC7mB,CAAD,CAAjC,CAAhB;AACD;;AACD,QAAI7H,MAAM,CAACmvB,OAAP,IAAkBnvB,MAAM,CAACmvB,OAAP,CAAejwB,MAAf,GAAwB,CAA9C,EAAiD;AAC/Cc,MAAAA,MAAM,CAACmvB,OAAP,CAAehxB,OAAf,CAAwB2xB,gBAAD,IAAsB;AAC3CA,QAAAA,gBAAgB,CAAC3b,SAAjB,GAA6B;AAAExa,UAAAA,QAAF;AAAYoiB,UAAAA;AAAZ,SAA7B;;AACA,YAAI,CAAC+T,gBAAgB,CAAC5b,MAAjB,CAAwBtW,IAA7B,EAAmC;AACjCkyB,UAAAA,gBAAgB,CAAC5b,MAAjB,CAAwBtW,IAAxB,GAA+Bme,QAA/B;AACD;AACF,OALD;AAMD;;AACD,QAAI/b,MAAM,CAAC4mB,iBAAP,IAA4B5mB,MAAM,CAAC4mB,iBAAP,CAAyB1nB,MAAzB,GAAkC,CAAlE,EAAqE;AACnEc,MAAAA,MAAM,CAAC4mB,iBAAP,CAAyBzoB,OAAzB,CAAkC0S,eAAD,IAAqB;AACpDA,QAAAA,eAAe,CAACsD,SAAhB,GAA4B;AAAE4H,UAAAA;AAAF,SAA5B;AACD,OAFD;AAGD;;AACD,QAAI/b,MAAM,CAACgS,UAAX,EAAuB;AACrBhS,MAAAA,MAAM,CAACgS,UAAP,GAAoB,KAAK+d,wBAAL,CAA8B/vB,MAAM,CAACgS,UAArC,EAAiDrY,QAAjD,EAA2DoiB,QAA3D,CAApB;AACD;;AACD,WAAO;AAAEphB,MAAAA,MAAM,EAAEqF,MAAM,CAACrF,MAAP,IAAiB,EAA3B;AAA+BqX,MAAAA,UAAU,EAAEhS,MAAM,CAACgS,UAAP,IAAqB,EAAhE;AAAoEmd,MAAAA,OAAO,EAAEnvB,MAAM,CAACmvB,OAAP,IAAkB,EAA/F;AAAmGvI,MAAAA,iBAAiB,EAAE5mB,MAAM,CAAC4mB,iBAAP,IAA4B;AAAlJ,KAAP;AACD;;AAEDmJ,EAAAA,wBAAwB,CAAEC,cAAF,EAAkBr2B,QAAlB,EAA4BoiB,QAA5B,EAAsC;AAC5D,WAAOiU,cAAc,CAACtwB,GAAf,CAAoBuwB,OAAD,IAAa;AACrCA,MAAAA,OAAO,CAAC9b,SAAR,GAAoB;AAAExa,QAAAA,QAAF;AAAYoiB,QAAAA;AAAZ,OAApB;AACAkU,MAAAA,OAAO,CAACje,UAAR,GAAqBie,OAAO,CAACje,UAAR,CAAmB1I,MAAnB,CAA0B6J,CAAC,IAAIA,CAA/B,CAArB;AACA,aAAO8c,OAAP;AACD,KAJM,CAAP;AAKD;;AAEDC,EAAAA,6BAA6B,GAAI;AAC/B,QAAI,CAAC,KAAK/uB,IAAL,CAAUtJ,YAAY,CAAC/B,uBAAvB,CAAL,EAAsD;AACpD0K,MAAAA,OAAK,CAAC,iFAAD,CAAL;AACA;AACD,KAJ8B;;;AAO/B,UAAM2vB,iBAAiB,GAAG,KAAKvJ,iBAAL,CAAuBtd,MAAvB,CAA+B7B,KAAD,IAAW;AACjE,aAAO,CAACA,KAAK,CAACyM,MAAN,CAAatW,IAArB;AACD,KAFyB,CAA1B;;AAGA,QAAIuyB,iBAAiB,CAACjxB,MAAtB,EAA8B;AAC5B,YAAM,IAAI5B,aAAJ,CACJ,6CADI,EAEJ;AACEe,QAAAA,IAAI,EAAE,kBADR;AAEEG,QAAAA,OAAO,EAAE,+BAFX;AAGED,QAAAA,MAAM,EAAE,mBAHV;AAIEE,QAAAA,KAAK,EAAE;AACL0xB,UAAAA;AADK;AAJT,OAFI,CAAN;AAWD,KAtB8B;;;AAyB/B,UAAMC,qBAAqB,GAAG,KAAKxJ,iBAAL,CAAuBtd,MAAvB,CAA+B7B,KAAD,IAAW;AACrE,aAAO,CAACA,KAAK,CAACid,MAAP,IAAiB,CAACppB,MAAM,CAAC+H,IAAP,CAAYoE,KAAK,CAACid,MAAlB,EAA0BxlB,MAAnD;AACD,KAF6B,CAA9B;;AAGA,QAAIkxB,qBAAqB,CAAClxB,MAA1B,EAAkC;AAChC,YAAM,IAAI5B,aAAJ,CACH,kCAAiC8yB,qBAAqB,CAAC1wB,GAAtB,CAA0Bmb,CAAC,IAAIA,CAAC,CAAC3G,MAAF,CAAStW,IAAxC,EAA8CmB,IAA9C,CAAmD,IAAnD,CAAyD,mBADvF,EAEJ;AACEV,QAAAA,IAAI,EAAE,kBADR;AAEEG,QAAAA,OAAO,EAAE,mCAFX;AAGED,QAAAA,MAAM,EAAE,mBAHV;AAIEE,QAAAA,KAAK,EAAE;AACL2xB,UAAAA;AADK;AAJT,OAFI,CAAN;AAWD,KAxC8B;;;AA2C/B,UAAMC,yBAAyB,GAAG,KAAKzJ,iBAAL,CAAuBtd,MAAvB,CAA+B7B,KAAD,IAAW;AACzE,aAAO,CAACvM,0BAAC,CAAC6O,WAAF,CAActC,KAAK,CAACid,MAAN,CAAa,EAAb,CAAd,CAAR;AACD,KAFiC,CAAlC;;AAGA,QAAI2L,yBAAyB,CAACnxB,MAA9B,EAAsC;AACpC,YAAM,IAAI5B,aAAJ,CACH,kCAAiC+yB,yBAAyB,CAAC3wB,GAA1B,CAA8Bmb,CAAC,IAAIA,CAAC,CAAC3G,MAAF,CAAStW,IAA5C,EAAkDmB,IAAlD,CAAuD,IAAvD,CAA6D,wBAD3F,EAEJ;AACEV,QAAAA,IAAI,EAAE,kBADR;AAEEG,QAAAA,OAAO,EAAE,wCAFX;AAGED,QAAAA,MAAM,EAAE,mBAHV;AAIEE,QAAAA,KAAK,EAAE;AACL4xB,UAAAA;AADK;AAJT,OAFI,CAAN;AAWD,KA1D8B;;;AA6D/B,UAAMC,oBAAoB,GAAG,EAA7B;;AACA,SAAK,IAAIlkB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAAC,KAAKwa,iBAAL,IAA0B,EAA3B,EAA+B1nB,MAAnD,EAA2DkN,CAAC,EAA5D,EAAgE;AAC9D,YAAMyE,eAAe,GAAG,KAAK+V,iBAAL,CAAuBxa,CAAvB,CAAxB;AACA,YAAMmkB,SAAS,GAAG,KAAK3J,iBAAL,CAAuBtd,MAAvB,CAA8B,CAAC7B,KAAD,EAAQ+oB,CAAR,KAAc;AAC5D,YAAIA,CAAC,KAAKpkB,CAAN,IAAW,EAAE3E,KAAK,CAACid,MAAN,IAAgB7T,eAAe,CAAC6T,MAAhC,IAA0Cjd,KAAK,CAACyM,MAAhD,IAA0DrD,eAAe,CAACqD,MAA5E,CAAf,EAAoG;AAClG,iBAAO,KAAP;AACD;;AACD,eAAQzM,KAAK,CAACyM,MAAN,CAAatW,IAAb,KAAsBiT,eAAe,CAACqD,MAAhB,CAAuBtW,IAA9C,IAAwDgB,IAAI,CAACC,SAAL,CAAevD,MAAM,CAAC+H,IAAP,CAAYoE,KAAK,CAACid,MAAlB,CAAf,MAA8C9lB,IAAI,CAACC,SAAL,CAAevD,MAAM,CAAC+H,IAAP,CAAYwN,eAAe,CAAC6T,MAA5B,CAAf,CAA7G;AACD,OALiB,CAAlB;;AAMA,UAAI6L,SAAS,CAACrxB,MAAd,EAAsB;AACpBoxB,QAAAA,oBAAoB,CAAC73B,IAArB,CAA0B;AAAEoY,UAAAA,eAAF;AAAmB0f,UAAAA;AAAnB,SAA1B;AACD;AACF;;AACD,QAAID,oBAAoB,CAACpxB,MAAzB,EAAiC;AAC/B,YAAM,IAAI5B,aAAJ,CACH,wCAAuCpC,0BAAC,CAACkjB,IAAF,CAAOkS,oBAAoB,CAAC5wB,GAArB,CAAyBmoB,CAAC,IAAIA,CAAC,CAAChX,eAAF,CAAkBqD,MAAlB,CAAyBtW,IAAvD,CAAP,EAAqEmB,IAArE,CAA0E,IAA1E,CAAgF,kBADpH,EAEJ;AACEV,QAAAA,IAAI,EAAE,kBADR;AAEEG,QAAAA,OAAO,EAAE,iCAFX;AAGED,QAAAA,MAAM,EAAE,mBAHV;AAIEE,QAAAA,KAAK,EAAE;AACL6xB,UAAAA;AADK;AAJT,OAFI,CAAN;AAWD,KAtF8B;;;AAyF/B,UAAMG,uBAAuB,GAAG,EAAhC;;AACA,SAAK,IAAIrkB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAAC,KAAKwa,iBAAL,IAA0B,EAA3B,EAA+B1nB,MAAnD,EAA2DkN,CAAC,EAA5D,EAAgE;AAC9D,YAAMyE,eAAe,GAAG,KAAK+V,iBAAL,CAAuBxa,CAAvB,CAAxB;AACA,YAAMskB,YAAY,GAAG,KAAK9J,iBAAL,CAAuBtd,MAAvB,CAA8B,CAAC7B,KAAD,EAAQ+oB,CAAR,KAAc;AAC/D,YAAIA,CAAC,KAAKpkB,CAAN,IAAW,EAAE3E,KAAK,CAACid,MAAN,IAAgB7T,eAAe,CAAC6T,MAAhC,IAA0Cjd,KAAK,CAACyM,MAAhD,IAA0DrD,eAAe,CAACqD,MAA5E,CAAf,EAAoG;AAClG,iBAAO,KAAP;AACD;;AACD,cAAMyc,EAAE,GAAGr1B,MAAM,CAAC+H,IAAP,CAAYoE,KAAK,CAACid,MAAlB,CAAX;AACA,cAAMkM,EAAE,GAAGt1B,MAAM,CAAC+H,IAAP,CAAYwN,eAAe,CAAC6T,MAA5B,CAAX;;AACA,cAAMmM,IAAI,GAAG31B,0BAAC,CAACw1B,YAAF,CAAeC,EAAf,EAAmBC,EAAnB,CAAb;;AACA,eAAOC,IAAI,CAAC3xB,MAAL,KAAgB2xB,IAAI,CAAC3xB,MAAL,KAAgByxB,EAAE,CAACzxB,MAAnB,IAA6B2xB,IAAI,CAAC3xB,MAAL,KAAgB0xB,EAAE,CAAC1xB,MAAhE,CAAP;AACD,OARoB,CAArB;;AASA,UAAIwxB,YAAY,CAACxxB,MAAjB,EAAyB;AACvBuxB,QAAAA,uBAAuB,CAACh4B,IAAxB,CAA6B;AAAEoY,UAAAA,eAAF;AAAmB6f,UAAAA;AAAnB,SAA7B;AACD;AACF;;AACD,QAAID,uBAAuB,CAACvxB,MAA5B,EAAoC;AAClC,YAAM,IAAI5B,aAAJ,CACH,iCAAgCmzB,uBAAuB,CAAC/wB,GAAxB,CAA4B0M,CAAC,IAAIA,CAAC,CAACyE,eAAF,CAAkBqD,MAAlB,CAAyBtW,IAA1D,EAAgEmB,IAAhE,CAAqE,IAArE,CAA2E,gDADxG,EAEJ;AACEV,QAAAA,IAAI,EAAE,kBADR;AAEEG,QAAAA,OAAO,EAAE,0CAFX;AAGED,QAAAA,MAAM,EAAE,mBAHV;AAIEE,QAAAA,KAAK,EAAE;AACLgyB,UAAAA;AADK;AAJT,OAFI,CAAN;AAWD;;AAED,UAAMK,0BAA0B,GAAG,IAAIC,GAAJ,EAAnC;AACA,SAAKnK,iBAAL,CAAuBzoB,OAAvB,CAAgC0S,eAAD,IAAqB;AAClD,YAAMtN,GAAG,GAAG3E,IAAI,CAACC,SAAL,CAAevD,MAAM,CAAC+H,IAAP,CAAYwN,eAAe,CAAC6T,MAA5B,EAAoCvT,IAApC,EAAf,CAAZ;;AACA,UAAI2f,0BAA0B,CAACxkB,GAA3B,CAA+B/I,GAA/B,CAAJ,EAAyC;AACvCutB,QAAAA,0BAA0B,CAACE,GAA3B,CAA+BztB,GAA/B,EAAoC9K,IAApC,CAAyCoY,eAAzC;AACD,OAFD,MAEO;AACLigB,QAAAA,0BAA0B,CAACtH,GAA3B,CAA+BjmB,GAA/B,EAAoC,CAACsN,eAAD,CAApC;AACD;AACF,KAPD;AASA,QAAIogB,iBAAiB,GAAG,EAAxB;AACA,UAAMC,iBAAiB,GAAG,EAA1B;AACA,SAAKv2B,MAAL,CAAYwD,OAAZ,CAAqBvD,KAAD,IAAW;AAC7B,YAAMu2B,cAAc,GAAGv2B,KAAK,CAAC8c,8BAAN,CAAqC,IAArC,CAAvB;AACAlX,MAAAA,OAAK,CAAE,0CAAyC5F,KAAK,CAACsZ,MAAN,CAAatW,IAAK,mCAAkCiU,wBAAI,CAACC,OAAL,CAAaqf,cAAb,CAA6B,GAA5H,CAAL;;AACA,UAAI,CAACA,cAAc,CAACjyB,MAApB,EAA4B;AAC1BsB,QAAAA,OAAK,CAAE,0CAAyC5F,KAAK,CAACsZ,MAAN,CAAatW,IAAK,2CAA7D,CAAL;AACD;;AAED,UAAIwzB,cAAc,GAAG,CAACx2B,KAAD,CAArB;AACA,UAAIy2B,mBAAmB,GAAG,EAA1B,CAR6B;;AAU7B,YAAMC,WAAW,GAAG,EAApB;;AACA,WAAK,MAAM,CAAC/tB,GAAD,EAAMqjB,iBAAN,CAAX,IAAuCkK,0BAA0B,CAAC/H,OAA3B,EAAvC,EAA6E;AAC3E,cAAM1E,aAAa,GAAGzlB,IAAI,CAACkL,KAAL,CAAWvG,GAAX,CAAtB;;AACA,YAAIrI,0BAAC,CAACw1B,YAAF,CAAerM,aAAf,EAA8B8M,cAA9B,EAA8CjyB,MAAlD,EAA0D;AACxD,gBAAMqyB,sBAAsB,GAAG,EAA/B;AACAD,UAAAA,WAAW,CAAC74B,IAAZ,CAAiBmuB,iBAAiB,CAAC1nB,MAAnC;AACA0nB,UAAAA,iBAAiB,CAACzoB,OAAlB,CAA2B0S,eAAD,IAAqB;;AAE7C,iBAAK,MAAM2gB,aAAX,IAA4BJ,cAA5B,EAA4C;AAC1C,oBAAMK,aAAa,GAAGv2B,0BAAC,CAACkN,SAAF,CAAYopB,aAAZ,CAAtB;;AACAC,cAAAA,aAAa,CAACvd,MAAd,CAAqBtW,IAArB,GAA4B4zB,aAAa,CAACtd,MAAd,CAAqBtW,IAArB,GAA4B,GAA5B,GAAkCiT,eAAe,CAACqD,MAAhB,CAAuBtW,IAArF;AACAymB,cAAAA,aAAa,CAAClmB,OAAd,CAAuBP,IAAD,IAAU;AAC9B,sBAAMkK,KAAK,GAAG+I,eAAe,CAAC6T,MAAhB,CAAuB9mB,IAAvB,CAAd;;AACA,oBAAIkK,KAAJ,EAAW;AACT2pB,kBAAAA,aAAa,CAACnd,cAAd,CAA6B7b,IAA7B,CAAkC;AAAEmF,oBAAAA,IAAI,EAAE,sBAAR;AAAgC2E,oBAAAA,IAAI,EAAE,CAAC3E,IAAI,CAAC6T,SAAL,CAAe,CAAf,CAAD,EAAoBZ,eAAe,CAAC6T,MAAhB,CAAuB9mB,IAAvB,CAApB;AAAtC,mBAAlC;AACD,iBAFD,MAEO;AACL6zB,kBAAAA,aAAa,CAACnd,cAAd,CAA6B7b,IAA7B,CAAkC;AAAEmF,oBAAAA,IAAI,EAAE,wBAAR;AAAkC2E,oBAAAA,IAAI,EAAE,CAAC3E,IAAI,CAAC6T,SAAL,CAAe,CAAf,CAAD;AAAxC,mBAAlC;AACD;AACF,eAPD;AAQA8f,cAAAA,sBAAsB,CAAC94B,IAAvB,CAA4Bg5B,aAA5B;AACD;AACF,WAfD,EAHwD;;;AAqBxDL,UAAAA,cAAc,GAAGG,sBAAjB;AACAF,UAAAA,mBAAmB,GAAGE,sBAAtB;AACD,SAvBD,MAuBO;AACL/wB,UAAAA,OAAK,CAAE,0CAAyC5F,KAAK,CAACsZ,MAAN,CAAatW,IAAK,wBAAuB2F,GAAI,2DAA0DsO,wBAAI,CAACC,OAAL,CAAaqf,cAAb,CAA6B,EAA/K,CAAL;AACD;AACF;;AACD3wB,MAAAA,OAAK,CAAE,0CAAyC5F,KAAK,CAACsZ,MAAN,CAAatW,IAAK,wBAAuBhD,KAAK,CAACsZ,MAAN,CAAatW,IAAK,cAAayzB,mBAAmB,CAACnyB,MAAO,qBAAoBmyB,mBAAmB,CAACnyB,MAAO,MAAKoyB,WAAW,GAAGA,WAAW,CAACvyB,IAAZ,CAAiB,GAAjB,CAAH,GAA2B,CAAE,GAA1O,CAAL;;AAEA,UAAIsyB,mBAAmB,CAACnyB,MAAxB,EAAgC;AAC9B+xB,QAAAA,iBAAiB,GAAGA,iBAAiB,CAAClxB,MAAlB,CAAyBsxB,mBAAzB,CAApB;AACAH,QAAAA,iBAAiB,CAACz4B,IAAlB,CAAuBmC,KAAvB;AACD;AACF,KA9CD;;AAgDA,QAAI,KAAKuG,IAAL,CAAUtJ,YAAY,CAACrB,mCAAvB,MAAgE,IAApE,EAA0E;AACxEgK,MAAAA,OAAK,CAAE,4CAA2C0wB,iBAAiB,CAAChyB,MAAO,iBAAtE,CAAL;AACA,WAAKvE,MAAL,GAAc,KAAKA,MAAL,CAAY2O,MAAZ,CAAoB1O,KAAD,IAAWs2B,iBAAiB,CAACjtB,OAAlB,CAA0BrJ,KAA1B,MAAqC,CAAC,CAApE,CAAd;AACD;;AAED4F,IAAAA,OAAK,CAAE,mCAAkCywB,iBAAiB,CAAC/xB,MAAO,qCAAoC,KAAKvE,MAAL,CAAYuE,MAAO,aAAY+xB,iBAAiB,CAAC/xB,MAAlB,GAA2B,KAAKvE,MAAL,CAAYuE,MAAO,QAA9K,CAAL;AACA,SAAKvE,MAAL,GAAc,KAAKA,MAAL,CAAYoF,MAAZ,CAAmBkxB,iBAAnB,CAAd;AACD;;AAEDS,EAAAA,wBAAwB,CAAE;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAA0C,EAA5C,EAAgD;AACtE,UAAMC,cAAc,GAAG,EAAvB;;AAEA,QAAI32B,0BAAC,CAAC6O,WAAF,CAAc4nB,eAAd,CAAJ,EAAoC;AAClCA,MAAAA,eAAe,GAAG,CAAC,CAAC,KAAKxwB,IAAL,CAAUtJ,YAAY,CAACxB,sCAAvB,CAApB;AACD;;AACD,QAAI6E,0BAAC,CAAC6O,WAAF,CAAc6nB,kBAAd,CAAJ,EAAuC;AACrCA,MAAAA,kBAAkB,GAAG,KAAKzwB,IAAL,CAAUtJ,YAAY,CAACzB,sCAAvB,CAArB;AACD;;AAED,QAAIu7B,eAAe,IAAIC,kBAAvB,EAA2C;AACzC,YAAM,IAAIr0B,KAAJ,CAAU,+HAAV,CAAN;AACD;;AACD,QAAIq0B,kBAAkB,IAAI,CAAC,KAAK5f,UAAL,CAAgB4f,kBAAhB,CAA3B,EAAgE;AAC9D,YAAM,IAAIr0B,KAAJ,CAAW,yDAAwDq0B,kBAAmB,aAAtF,CAAN;AACD;;AAED,QAAID,eAAJ,EAAqB;AACnBnxB,MAAAA,OAAK,CAAC,+DAAD,CAAL;AACD,KAFD,MAEO,IAAIoxB,kBAAJ,EAAwB;AAC7BpxB,MAAAA,OAAK,CAAE,8EAA6EoxB,kBAAmB,EAAlG,CAAL;AACD;;AAED12B,IAAAA,0BAAC,CAACmI,IAAF,CAAO,KAAK2O,UAAZ,EAAwB1I,MAAxB,CAA+B6J,CAAC,IAAIA,CAAC,KAAKye,kBAA1C,EAA8DzzB,OAA9D,CAAsE2zB,OAAO,IAAI;AAC/E,YAAMhG,GAAG,GAAG,KAAK9Z,UAAL,CAAgB8f,OAAhB,CAAZ;AACAD,MAAAA,cAAc,CAACp5B,IAAf,CAAoB,IAAIub,KAAJ,CAAU,KAAKyZ,mBAAL,EAAV,EAAsC;AACxDvZ,QAAAA,MAAM,EAAE;AACNtW,UAAAA,IAAI,EAAEkuB,GAAG,CAACluB,IADJ;AAEN+U,UAAAA,WAAW,EAAG,yBAAwBmZ,GAAG,CAACluB,IAAK;AAFzC,SADgD;AAKxDyO,QAAAA,YAAY,EAAE,CACZ;AACE7D,UAAAA,MAAM,EAAE,IADV;AAEEnN,UAAAA,WAAW,EAAEywB,GAAG,CAACluB,IAFnB;AAGEoV,UAAAA,OAAO,EAAE;AAHX,SADY,EAMZ2e,eAAe,GACX;AACEnpB,UAAAA,MAAM,EAAE,KADV;AAEEpH,UAAAA,SAAS,EAAE,CACT;AACExD,YAAAA,IAAI,EAAE,QADR;AAEE2E,YAAAA,IAAI,EAAE,CAACupB,GAAG,CAACluB,IAAL;AAFR,WADS,CAFb;AAQEoV,UAAAA,OAAO,EAAE,uBARX;AASErU,UAAAA,GAAG,EAAE;AATP,SADW,GAYXizB,kBAAkB,GAChB;AACEppB,UAAAA,MAAM,EAAE,KADV;AAEEnN,UAAAA,WAAW,EAAEu2B,kBAFf;AAGE5e,UAAAA,OAAO,EAAE,gCAHX;AAIErU,UAAAA,GAAG,EAAE;AAJP,SADgB,GAOhB;AACE6J,UAAAA,MAAM,EAAE,KADV;AAEEnN,UAAAA,WAAW,EAAE,EAFf;AAGE2X,UAAAA,OAAO,EAAE,6BAHX;AAIErU,UAAAA,GAAG,EAAE;AAJP,SAzBM,CAL0C;AAqCxDwV,QAAAA,SAAS,EAAE7Y,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBuwB,GAAG,CAAC3X,SAAtB,EAAiC;AAAE4d,UAAAA,WAAW,EAAEjG,GAAG,CAACluB;AAAnB,SAAjC;AArC6C,OAAtC,CAApB;AAuCD,KAzCD;;AA0CA,SAAKjD,MAAL,GAAc,KAAKA,MAAL,CAAYoF,MAAZ,CAAmB8xB,cAAnB,CAAd;;AACA,SAAKG,WAAL;AACD;;AAEDt3B,EAAAA,YAAY,GAAI;AACd,UAAMm3B,cAAc,GAAG,EAAvB;AACArxB,IAAAA,OAAK,CAAE,mDAAkD,KAAKW,IAAL,CAAUtJ,YAAY,CAAC3B,2BAAvB,CAAoD,EAAxG,CAAL;AACA,SAAKyE,MAAL,CAAYwD,OAAZ,CAAqBvD,KAAD,IAAW;AAC7BA,MAAAA,KAAK,CAACwd,mBAAN;;AACA,WAAK6Z,YAAL,CAAkBJ,cAAlB,EAAkCj3B,KAAlC;AACD,KAHD;AAIA,SAAKD,MAAL,GAAck3B,cAAd;;AACA,SAAKG,WAAL;AACD;;;;;;;;;;;AAUDC,EAAAA,YAAY,CAAEJ,cAAF,EAAkBlO,YAAlB,EAAgCuO,cAAc,GAAG,CAAjD,EAAoDC,eAAe,GAAG,EAAtE,EAA0E;AACpF,UAAMC,gBAAgB,GAAG,CAACpJ,OAAD,EAAUqJ,cAAV,KAA6B;AACpD,YAAMC,MAAM,GAAG,KAAKnxB,IAAL,CAAUtJ,YAAY,CAACvB,kCAAvB,KAA8D40B,UAAQ,CAACqH,YAAT,CAAsB16B,YAAY,CAACvB,kCAAnC,CAA7E;;AACA,UAAIg8B,MAAM,KAAK,aAAf,EAA8B;AAC5B,eAAQ,IAAGtJ,OAAQ,EAAnB;AACD;;AACD,YAAMwJ,YAAY,GAAG,KAAKrxB,IAAL,CAAUtJ,YAAY,CAACtB,2CAAvB,KAAuE,CAA5F;AACA,UAAIk8B,OAAJ;;AACA,UAAID,YAAY,GAAG,CAAf,IAAoBH,cAAc,CAACnzB,MAAf,GAAwBszB,YAAhD,EAA8D;AAC5DC,QAAAA,OAAO,GAAGJ,cAAc,CAAC5gB,SAAf,CAAyB,CAAzB,EAA4B+gB,YAAY,GAAG,CAA3C,IAAgD,KAA1D;AACD,OAFD,MAEO;AACLC,QAAAA,OAAO,GAAGJ,cAAV;AACD;;AACD,aAAQ,IAAGrJ,OAAQ,IAAGyJ,OAAQ,EAA9B;AACD,KAbD;;AAcA,QAAIP,cAAc,GAAGvO,YAAY,CAACtX,YAAb,CAA0BnN,MAA/C,EAAuD;AACrD,YAAMwzB,WAAW,GAAG/O,YAAY,CAACtX,YAAb,CAA0B6lB,cAA1B,CAApB;;AACA,UAAIQ,WAAW,CAAClqB,MAAZ,KAAuB,KAAvB,IAAgCkqB,WAAW,CAAClqB,MAAZ,KAAuB,OAAvD,IAAkEkqB,WAAW,CAAClqB,MAAZ,KAAuB,KAA7F,EAAoG;AAClG,cAAMmqB,iBAAiB,GAAGR,eAAe,CAACtpB,KAAhB,EAA1B;AACA8pB,QAAAA,iBAAiB,CAACl6B,IAAlB,CAAuByC,0BAAC,CAACkN,SAAF,CAAYsqB,WAAZ,CAAvB;;AACA,aAAKT,YAAL,CAAkBJ,cAAlB,EAAkClO,YAAlC,EAAgDuO,cAAc,GAAG,CAAjE,EAAoES,iBAApE;AACD,OAJD,MAIO,IAAID,WAAW,CAAClqB,MAAZ,KAAuB,IAA3B,EAAiC;AACtC,YAAIoqB,aAAa,GAAG,IAApB;;AACA,YAAIF,WAAW,CAACr3B,WAAhB,EAA6B;AAC3B,cAAIy2B,OAAO,GAAG,IAAd;AACA,cAAItE,OAAO,GAAG,IAAd;;AACA,cAAI,KAAKxb,UAAL,CAAgB0gB,WAAW,CAACr3B,WAA5B,CAAJ,EAA8C;AAC5Cy2B,YAAAA,OAAO,GAAGY,WAAW,CAACr3B,WAAtB;AACD,WAFD,MAEO;AACL,kBAAMkyB,KAAK,GAAGmF,WAAW,CAACr3B,WAAZ,CAAwB6N,KAAxB,CAA8B,GAA9B,CAAd;;AACA,gBAAI,KAAK8I,UAAL,CAAgBub,KAAK,CAAC,CAAD,CAArB,CAAJ,EAA+B;AAC7BuE,cAAAA,OAAO,GAAGvE,KAAK,CAAC,CAAD,CAAf;AACAC,cAAAA,OAAO,GAAGD,KAAK,CAAC1kB,KAAN,CAAY,CAAZ,CAAV;AACD;AACF;;AACD,cAAI,KAAKmJ,UAAL,CAAgB8f,OAAhB,CAAJ,EAA8B;AAC5B,kBAAMe,aAAa,GAAG,KAAK7gB,UAAL,CAAgB8f,OAAhB,EAAyB9f,UAA/C;AACA,gBAAI8gB,gBAAgB,GAAGD,aAAvB;;AACA,gBAAI,KAAK1xB,IAAL,CAAUtJ,YAAY,CAAC3B,2BAAvB,MAAwD,OAA5D,EAAqE;AACnE48B,cAAAA,gBAAgB,GAAG,CAACD,aAAa,CAAC,CAAD,CAAd,CAAnB;AACD,aAFD,MAEO,IAAI,KAAK1xB,IAAL,CAAUtJ,YAAY,CAAC3B,2BAAvB,MAAwD,QAA5D,EAAsE;AAC3E48B,cAAAA,gBAAgB,GAAGD,aAAa,CAC7BnzB,GADgB,CACZqzB,CAAC,KAAK;AAAEA,gBAAAA,CAAF;AAAKrZ,gBAAAA,CAAC,EAAEiC,IAAI,CAACqX,MAAL;AAAR,eAAL,CADW,EAEhB7hB,IAFgB,CAEX,CAAClK,CAAD,EAAIU,CAAJ,KAAUV,CAAC,CAACyS,CAAF,GAAM/R,CAAC,CAAC+R,CAFP,EAGhBha,GAHgB,CAGZuH,CAAC,IAAIA,CAAC,CAAC8rB,CAHK,EAIhBlqB,KAJgB,CAIV,CAJU,EAIP,KAAK1H,IAAL,CAAUtJ,YAAY,CAAC1B,mCAAvB,CAJO,CAAnB;AAKD;;AACD28B,YAAAA,gBAAgB,CAAC30B,OAAjB,CAAyB,CAAC2tB,GAAD,EAAMvI,KAAN,KAAgB;AACvC,oBAAMyF,OAAO,GAAI,GAAEzF,KAAK,GAAG,CAAE,EAAb,CAAe0F,QAAf,CAAyB,GAAE6J,gBAAgB,CAAC5zB,MAAO,EAA3B,CAA6BA,MAArD,EAA6D,GAA7D,CAAhB;AACA,oBAAMyzB,iBAAiB,GAAGR,eAAe,CAACtpB,KAAhB,EAA1B;;AACA,kBAAI2kB,OAAJ,EAAa;AACX1B,gBAAAA,GAAG,GAAGja,wBAAI,CAACvE,MAAL,CAAYwe,GAAZ,EAAiB,GAAG0B,OAApB,CAAN;AACD;;AACDmF,cAAAA,iBAAiB,CAACl6B,IAAlB,CAAuB6C,MAAM,CAACC,MAAP,CAAcL,0BAAC,CAACkN,SAAF,CAAYsqB,WAAZ,CAAd,EAAwC;AAAEr3B,gBAAAA,WAAW,EAAEywB;AAAf,eAAxC,CAAvB;;AACA,oBAAMmH,mBAAmB,GAAG/3B,0BAAC,CAACkN,SAAF,CAAYub,YAAZ,CAA5B;;AACAroB,cAAAA,MAAM,CAACC,MAAP,CAAc03B,mBAAmB,CAAC/e,MAAlC,EAA0C;AAAEtW,gBAAAA,IAAI,EAAG,GAAE+lB,YAAY,CAACzP,MAAb,CAAoBtW,IAAK,IAAGk0B,OAAQ,IAAGM,gBAAgB,CAACpJ,OAAD,EAAU8C,GAAV,CAAe;AAAjF,eAA1C;AACA,kBAAI,CAACmH,mBAAmB,CAAC9e,SAAzB,EAAoC8e,mBAAmB,CAAC9e,SAApB,GAAgC,EAAhC;AACpC,kBAAI,CAAC8e,mBAAmB,CAAC9e,SAApB,CAA8B+e,aAAnC,EAAkDD,mBAAmB,CAAC9e,SAApB,CAA8B+e,aAA9B,GAA8CvP,YAAY,CAACzP,MAAb,CAAoBtW,IAAlE;;AAClD,mBAAKq0B,YAAL,CAAkBJ,cAAlB,EAAkCoB,mBAAlC,EAAuDf,cAAc,GAAG,CAAxE,EAA2ES,iBAA3E;AACD,aAZD;AAaAC,YAAAA,aAAa,GAAG,KAAhB;AACD;AACF;;AACD,YAAIF,WAAW,CAAClxB,UAAZ,IAA0BkxB,WAAW,CAAClxB,UAAZ,CAAuBtC,MAAvB,GAAgC,CAA9D,EAAiE;AAC/DwzB,UAAAA,WAAW,CAAClxB,UAAZ,CAAuBrD,OAAvB,CAA+B,CAAC6D,EAAD,EAAKmxB,OAAL,KAAiB;AAC9C,kBAAMnyB,SAAS,GAAG,KAAKQ,UAAL,CAAgBQ,EAAE,CAACpE,IAAnB,CAAlB;;AACA,gBAAIoD,SAAS,IAAIA,SAAS,CAACoyB,WAA3B,EAAwC;AACtC,oBAAMC,kBAAkB,GAAGryB,SAAS,CAACoyB,WAAV,CAAsB;AAAEx4B,gBAAAA,KAAK,EAAE+oB,YAAT;AAAuBnZ,gBAAAA,SAAS,EAAEkoB,WAAlC;AAA+CnwB,gBAAAA,IAAI,EAAEP,EAAE,CAACO;AAAxD,eAAtB,CAA3B;;AACA,kBAAI8wB,kBAAkB,IAAIA,kBAAkB,CAACn0B,MAAnB,GAA4B,CAAtD,EAAyD;AACvD,oBAAIo0B,YAAY,GAAGD,kBAAnB;;AACA,oBAAI,KAAKlyB,IAAL,CAAUtJ,YAAY,CAAC3B,2BAAvB,MAAwD,OAA5D,EAAqE;AACnEo9B,kBAAAA,YAAY,GAAG,CAACD,kBAAkB,CAAC,CAAD,CAAnB,CAAf;AACD,iBAFD,MAEO,IAAI,KAAKlyB,IAAL,CAAUtJ,YAAY,CAAC3B,2BAAvB,MAAwD,QAA5D,EAAsE;AAC3Eo9B,kBAAAA,YAAY,GAAGD,kBAAkB,CAC9B3zB,GADY,CACRqzB,CAAC,KAAK;AAAEA,oBAAAA,CAAF;AAAKrZ,oBAAAA,CAAC,EAAEiC,IAAI,CAACqX,MAAL;AAAR,mBAAL,CADO,EAEZ7hB,IAFY,CAEP,CAAClK,CAAD,EAAIU,CAAJ,KAAUV,CAAC,CAACyS,CAAF,GAAM/R,CAAC,CAAC+R,CAFX,EAGZha,GAHY,CAGRuH,CAAC,IAAIA,CAAC,CAAC8rB,CAHC,EAIZlqB,KAJY,CAIN,CAJM,EAIH,KAAK1H,IAAL,CAAUtJ,YAAY,CAAC1B,mCAAvB,CAJG,CAAf;AAKD;;AACDm9B,gBAAAA,YAAY,CAACn1B,OAAb,CAAqB,CAACo1B,WAAD,EAAchQ,KAAd,KAAwB;AAC3C,wBAAMyF,OAAO,GAAI,GAAEzF,KAAK,GAAG,CAAE,EAAb,CAAe0F,QAAf,CAAyB,GAAEqK,YAAY,CAACp0B,MAAO,EAAvB,CAAyBA,MAAjD,EAAyD,GAAzD,CAAhB;AACA,wBAAMyzB,iBAAiB,GAAGR,eAAe,CAACtpB,KAAhB,EAA1B;;AACA,wBAAM2qB,cAAc,GAAGt4B,0BAAC,CAACkN,SAAF,CAAYsqB,WAAZ,CAAvB;;AACAc,kBAAAA,cAAc,CAAChyB,UAAf,CAA0B2xB,OAA1B,IAAqCI,WAArC;AAEAZ,kBAAAA,iBAAiB,CAACl6B,IAAlB,CAAuB+6B,cAAvB;;AACA,wBAAMP,mBAAmB,GAAG/3B,0BAAC,CAACkN,SAAF,CAAYub,YAAZ,CAA5B;;AACAroB,kBAAAA,MAAM,CAACC,MAAP,CAAc03B,mBAAmB,CAAC/e,MAAlC,EAA0C;AAAEtW,oBAAAA,IAAI,EAAG,GAAE+lB,YAAY,CAACzP,MAAb,CAAoBtW,IAAK,IAAGoE,EAAE,CAACpE,IAAK,IAAGw0B,gBAAgB,CAACpJ,OAAD,EAAWuK,WAAW,CAAChxB,IAAZ,IAAoBgxB,WAAW,CAAChxB,IAAZ,CAAiBrD,MAAtC,GAAgDq0B,WAAW,CAAChxB,IAAZ,CAAiBxD,IAAjB,CAAsB,IAAtB,CAAhD,GAA8E,SAAxF,CAAmG;AAArK,mBAA1C;;AACA,uBAAKkzB,YAAL,CAAkBJ,cAAlB,EAAkCoB,mBAAlC,EAAuDf,cAAc,GAAG,CAAxE,EAA2ES,iBAA3E;AACD,iBAVD;AAWAC,gBAAAA,aAAa,GAAG,KAAhB;AACD;AACF;AACF,WA7BD;AA8BD;;AACD,YAAIA,aAAJ,EAAmB;AACjB,gBAAMD,iBAAiB,GAAGR,eAAe,CAACtpB,KAAhB,EAA1B;AACA8pB,UAAAA,iBAAiB,CAACl6B,IAAlB,CAAuByC,0BAAC,CAACkN,SAAF,CAAYsqB,WAAZ,CAAvB;;AACA,eAAKT,YAAL,CAAkBJ,cAAlB,EAAkClO,YAAlC,EAAgDuO,cAAc,GAAG,CAAjE,EAAoES,iBAApE;AACD;AACF;AACF,KAtFD,MAsFO;AACLd,MAAAA,cAAc,CAACp5B,IAAf,CAAoB6C,MAAM,CAACC,MAAP,CAAcL,0BAAC,CAACkN,SAAF,CAAYub,YAAZ,CAAd,EAAyC;AAAEtX,QAAAA,YAAY,EAAEnR,0BAAC,CAACkN,SAAF,CAAY+pB,eAAZ;AAAhB,OAAzC,CAApB;AACD;AACF;;AAEDH,EAAAA,WAAW,GAAI;AACb,SAAKr3B,MAAL,GAAcO,0BAAC,CAACu4B,MAAF,CAAS,KAAK94B,MAAd,EAAsB,CAAEC,KAAD,IAAWA,KAAK,CAACsZ,MAAN,CAAa/C,IAAb,IAAqBvW,KAAK,CAACsZ,MAAN,CAAatW,IAA9C,CAAtB,CAAd;AACA,QAAIwO,CAAC,GAAG,CAAR;AACA,SAAKzR,MAAL,CAAYwD,OAAZ,CAAqBvD,KAAD,IAAW;AAC7BA,MAAAA,KAAK,CAACsZ,MAAN,CAAaxB,KAAb,GAAqB,EAAEtG,CAAvB;;AACA,UAAI,CAACxR,KAAK,CAACsZ,MAAN,CAAa1B,WAAlB,EAA+B;AAC7B5X,QAAAA,KAAK,CAACsZ,MAAN,CAAa1B,WAAb,GAA2B,KAAKrR,IAAL,CAAUtJ,YAAY,CAACzI,WAAvB,CAA3B;AACD;;AACD,UAAI,CAACwL,KAAK,CAACsZ,MAAN,CAAazB,eAAlB,EAAmC;AACjC7X,QAAAA,KAAK,CAACsZ,MAAN,CAAazB,eAAb,GAA+B,KAAKtR,IAAL,CAAUtJ,YAAY,CAACxI,eAAvB,CAA/B;AACD;AACF,KARD;AASD;;AAED6wB,EAAAA,SAAS,CAAEvlB,MAAF,EAAU;AACjB,QAAIA,MAAM,IAAIO,0BAAC,CAACgD,OAAF,CAAUvD,MAAV,CAAd,EAAiC;AAC/B,WAAKA,MAAL,GAAcO,0BAAC,CAAC6E,MAAF,CAAS,KAAKpF,MAAd,EAAsBA,MAAtB,CAAd;AACD,KAFD,MAEO,IAAIA,MAAJ,EAAY;AACjB,WAAKA,MAAL,CAAYlC,IAAZ,CAAiBkC,MAAjB;AACD;;AACD,SAAKq3B,WAAL;AACD;;AAED5R,EAAAA,aAAa,CAAEpO,UAAF,EAAc;AACzB,UAAM0hB,aAAa,GAAI1hB,UAAD,IAAgB;AACpC,YAAM2hB,SAAS,GAAG,EAAlB;AACA,UAAIj1B,QAAQ,GAAG,IAAf;AACA,UAAIk1B,IAAI,GAAG,IAAX;;AACA,UAAI5hB,UAAU,IAAIA,UAAU,CAAC9S,MAAX,GAAoB,CAAtC,EAAyC;AACvC00B,QAAAA,IAAI,GAAG5hB,UAAU,CAAC,CAAD,CAAjB;AACAtT,QAAAA,QAAQ,GAAGkX,eAAe,CAAClE,eAAhB,CAAgCM,UAAU,CAAC,CAAD,CAA1C,EAA+Cb,IAA/C,EAAX;AACA,cAAM0iB,cAAc,GAAGj1B,IAAI,CAACC,SAAL,CAAeH,QAAf,CAAvB;;AAEA,aAAK,IAAI0N,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4F,UAAU,CAAC9S,MAA/B,EAAuCkN,CAAC,EAAxC,EAA4C;AAC1C,gBAAM0nB,YAAY,GAAGl1B,IAAI,CAACC,SAAL,CAAe+W,eAAe,CAAClE,eAAhB,CAAgCM,UAAU,CAAC5F,CAAD,CAA1C,EAA+C+E,IAA/C,EAAf,CAArB;;AAEA,cAAI2iB,YAAY,KAAKD,cAArB,EAAqC;AACnCF,YAAAA,SAAS,CAACl7B,IAAV,CAAeuZ,UAAU,CAAC5F,CAAD,CAAzB;AACD;AACF;AACF;;AAED,aAAO;AAAE1N,QAAAA,QAAF;AAAYi1B,QAAAA,SAAZ;AAAuBC,QAAAA;AAAvB,OAAP;AACD,KAnBD;;AAqBA,QAAI5hB,UAAU,IAAI,CAAC9W,0BAAC,CAACgD,OAAF,CAAU8T,UAAV,CAAnB,EAA0C;AACxCA,MAAAA,UAAU,GAAG,CAACA,UAAD,CAAb;AACD;;AACD,QAAIA,UAAJ,EAAgB;AACd9W,MAAAA,0BAAC,CAACiD,OAAF,CAAU6T,UAAV,EAAuB8Z,GAAD,IAAS;AAC7B,cAAMiI,EAAE,GAAG,KAAK/hB,UAAL,CAAgB8Z,GAAG,CAACluB,IAApB,CAAX;;AACA,YAAIm2B,EAAJ,EAAQ;AACNA,UAAAA,EAAE,CAAC/hB,UAAH,GAAgB9W,0BAAC,CAACkjB,IAAF,CAAOljB,0BAAC,CAAC6E,MAAF,CAASg0B,EAAE,CAAC/hB,UAAZ,EAAwB8Z,GAAG,CAAC9Z,UAA5B,CAAP,CAAhB;AACD,SAFD,MAEO;AACL,eAAKA,UAAL,CAAgB8Z,GAAG,CAACluB,IAApB,IAA4BkuB,GAA5B;AACD;;AAED,cAAM;AAAE6H,UAAAA,SAAF;AAAaj1B,UAAAA;AAAb,YAA0Bg1B,aAAa,CAAC,KAAK1hB,UAAL,CAAgB8Z,GAAG,CAACluB,IAApB,EAA0BoU,UAA3B,CAA7C;;AAEA,YAAI2hB,SAAS,IAAIA,SAAS,CAACz0B,MAAV,GAAmB,CAApC,EAAuC;AACrCsB,UAAAA,OAAK,CAAE,uBAAsBsrB,GAAG,CAACluB,IAAK,sBAAqBc,QAAQ,CAACQ,MAAT,GAAmB,MAAMR,QAAQ,CAACK,IAAT,CAAc,IAAd,CAAN,GAA4B,GAA/C,GAAsD,QAAS,2DAA0D40B,SAAS,CAACj0B,GAAV,CAAcmoB,CAAC,IAAK,IAAGA,CAAE,GAAzB,EAA6B9oB,IAA7B,CAAkC,IAAlC,CAAwC,EAAvN,CAAL;AACD;AACF,OAbD;AAcD;AACF;;AAEDohB,EAAAA,gBAAgB,CAAExlB,MAAF,EAAU;AACxB,QAAIA,MAAM,IAAIO,0BAAC,CAACgD,OAAF,CAAUvD,MAAV,CAAd,EAAiC;AAC/B,WAAK,IAAIyR,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGzR,MAAM,CAACuE,MAA3B,EAAmCkN,CAAC,EAApC,EAAwC;AACtC,cAAMxR,KAAK,GAAGD,MAAM,CAACyR,CAAD,CAApB;AACA,aAAK+T,gBAAL,CAAsBvlB,KAAtB;AACD;AACF,KALD,MAKO,IAAID,MAAJ,EAAY;AACjB,UAAI,CAACA,MAAM,CAACuZ,MAAR,IAAkB,CAACvZ,MAAM,CAACuZ,MAAP,CAActW,IAArC,EAA2C;AACzC,cAAML,KAAK,CAAE,6BAA4BqB,IAAI,CAACC,SAAL,CAAelE,MAAM,CAACuZ,MAAtB,CAA8B,EAA5D,CAAX;AACD;;AACD,UAAIvZ,MAAM,CAACuZ,MAAP,CAActW,IAAd,CAAmBqG,OAAnB,CAA2B,GAA3B,KAAmC,CAAvC,EAA0C;AACxC,cAAM1G,KAAK,CAAE,+BAA8B5C,MAAM,CAACuZ,MAAP,CAActW,IAAK,EAAnD,CAAX;AACD;;AACD,YAAMA,IAAI,GAAGjD,MAAM,CAACuZ,MAAP,CAActW,IAA3B;;AACA,UAAI,KAAK2a,aAAL,CAAmB3a,IAAnB,CAAJ,EAA8B;AAC5B,cAAML,KAAK,CAAE,4BAA2BK,IAAK,EAAlC,CAAX;AACD;;AAED,WAAK2a,aAAL,CAAmB3a,IAAnB,IAA2BjD,MAA3B;AACD;AACF;;AAED6d,EAAAA,gBAAgB,GAAI;AAClB,WAAO,KAAKD,aAAZ;AACD;;AAED8H,EAAAA,oBAAoB,CAAEuG,iBAAF,EAAqB;AACvC,QAAIA,iBAAiB,IAAI1rB,0BAAC,CAACgD,OAAF,CAAU0oB,iBAAV,CAAzB,EAAuD;AACrD,WAAK,IAAIxa,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwa,iBAAiB,CAAC1nB,MAAtC,EAA8CkN,CAAC,EAA/C,EAAmD;AACjD,cAAMyE,eAAe,GAAG+V,iBAAiB,CAACxa,CAAD,CAAzC;AACA,aAAKiU,oBAAL,CAA0BxP,eAA1B;AACD;AACF,KALD,MAKO,IAAI+V,iBAAJ,EAAuB;AAC5B,UAAI,CAACA,iBAAiB,CAAC1S,MAAnB,IAA6B,CAAC0S,iBAAiB,CAAC1S,MAAlB,CAAyBtW,IAA3D,EAAiE;AAC/D,cAAM,IAAIN,aAAJ,CACJ,yCADI,EAEJ;AACEe,UAAAA,IAAI,EAAE,UADR;AAEEG,UAAAA,OAAO,EAAE,+BAFX;AAGED,UAAAA,MAAM,EAAE,mBAHV;AAIEE,UAAAA,KAAK,EAAE;AACLoS,YAAAA,eAAe,EAAE+V;AADZ;AAJT,SAFI,CAAN;AAWD;;AAED,UAAI,CAACA,iBAAiB,CAAClC,MAAnB,IAA6B,CAACppB,MAAM,CAAC+H,IAAP,CAAYujB,iBAAiB,CAAClC,MAA9B,EAAsCxlB,MAAxE,EAAgF;AAC9E,cAAM,IAAI5B,aAAJ,CACJ,8CADI,EAEJ;AACEe,UAAAA,IAAI,EAAE,UADR;AAEEG,UAAAA,OAAO,EAAE,mCAFX;AAGED,UAAAA,MAAM,EAAE,mBAHV;AAIEE,UAAAA,KAAK,EAAE;AACLoS,YAAAA,eAAe,EAAE+V;AADZ;AAJT,SAFI,CAAN;AAWD;;AAED,UAAIA,iBAAiB,CAAClC,MAAlB,IAA4B,CAACxpB,0BAAC,CAAC6O,WAAF,CAAc6c,iBAAiB,CAAClC,MAAlB,CAAyB,EAAzB,CAAd,CAAjC,EAA8E;AAC5E,cAAM,IAAIpnB,aAAJ,CACJ,kDADI,EAEJ;AACEe,UAAAA,IAAI,EAAE,UADR;AAEEG,UAAAA,OAAO,EAAE,wCAFX;AAGED,UAAAA,MAAM,EAAE,mBAHV;AAIEE,UAAAA,KAAK,EAAE;AACLoS,YAAAA,eAAe,EAAE+V;AADZ;AAJT,SAFI,CAAN;AAWD;;AAED,WAAKA,iBAAL,CAAuBnuB,IAAvB,CAA4BmuB,iBAA5B;AACD;AACF;;AAEDoN,EAAAA,uBAAuB,CAAE;AACvBC,IAAAA,gBAAgB,GAAG,IADI;AACEC,IAAAA,WAAW,GAAG,KADhB;AACuBC,IAAAA,mBAAmB,GAAG,IAD7C;AAEvBC,IAAAA,kBAAkB,GAAG,EAFE;AAEEC,IAAAA,mBAAmB,GAAG,EAFxB;AAE4BC,IAAAA,kBAAkB,GAAG,EAFjD;AAEqDC,IAAAA,mBAAmB,GAAG;AAF3E,MAGrB,EAHmB,EAGf;AACN,UAAMvkB,IAAI,GAAG,EAAb;AACA,UAAMwkB,cAAc,GAAG,EAAvB;AACA,UAAMC,eAAe,GAAG,CAAC,OAAD,EAAU,QAAV,EAAoB,aAApB,EAAmC,kBAAnC,EAAuD,gBAAvD,EAAyE,YAAzE,EAAuF,YAAvF,EAAqG,GAAGL,kBAAxG,CAAxB;AACA,UAAMM,gBAAgB,GAAG,CAAC,OAAD,EAAU,QAAV,EAAoB,aAApB,EAAmC,UAAnC,EAA+C,KAA/C,EAAsD,kBAAtD,EAA0E,gBAA1E,EAA4F,YAA5F,EAA0G,WAA1G,EAAuH,GAAGL,mBAA1H,CAAzB;AACA,UAAMM,eAAe,GAAG,CAAC,QAAD,EAAW,aAAX,EAA0B,YAA1B,EAAwC,YAAxC,EAAsD,GAAGL,kBAAzD,CAAxB;AACA,UAAMM,gBAAgB,GAAG,CAAC,QAAD,EAAW,aAAX,EAA0B,UAA1B,EAAsC,KAAtC,EAA6C,YAA7C,EAA2D,WAA3D,EAAwE,GAAGL,mBAA3E,CAAzB;AAEA,SAAK55B,MAAL,CAAYwD,OAAZ,CAAqBvD,KAAD,IAAW;AAC7B,YAAMi6B,UAAU,GAAG,EAAnB;;AACA,WAAK,MAAM,CAAC3C,cAAD,EAAiB1nB,SAAjB,CAAX,IAA0C5P,KAAK,CAACyR,YAAN,CAAmB0c,OAAnB,EAA1C,EAAwE;AACtE,YAAIve,SAAS,CAAChC,MAAV,KAAqB,OAArB,IAAgCgC,SAAS,CAAChC,MAAV,KAAqB,KAAzD,EAAgE;AAChEgC,QAAAA,SAAS,CAAC+Y,KAAV,GAAkB2O,cAAlB;;AACA,YAAI1nB,SAAS,CAACnP,WAAd,EAA2B;AACzB,gBAAM2W,UAAU,GAAG,KAAK4Z,iBAAL,CAAuB;AAAEha,YAAAA,SAAS,EAAEpH,SAAS,CAACnP,WAAvB;AAAoCswB,YAAAA,qBAAqB,EAAE;AAA3D,WAAvB,CAAnB;;AACA,cAAI3Z,UAAJ,EAAgB;AACdxH,YAAAA,SAAS,CAACsqB,gBAAV,GAA6B9iB,UAAU,CAACnJ,KAAX,CAAiB,CAAjB,EAAoB,CAApB,CAA7B;AACA2B,YAAAA,SAAS,CAACuqB,cAAV,GAA2B/iB,UAAU,CAAC9S,MAAtC;AACD;AACF;;AAED,cAAM81B,aAAa,GAAGH,UAAU,CAAC31B,MAAX,KAAsB,CAAtB,GAA0B,IAA1B,GAAiC21B,UAAU,CAACA,UAAU,CAAC31B,MAAX,GAAoB,CAArB,CAAjE;;AACA,YAAI,CAAC81B,aAAD,IAAkB,CAACb,mBAAnB,IAA0CU,UAAU,CAACA,UAAU,CAAC31B,MAAX,GAAoB,CAArB,CAAV,CAAkCsJ,MAAlC,KAA6CgC,SAAS,CAAChC,MAArG,EAA6G;AAC3GqsB,UAAAA,UAAU,CAACp8B,IAAX,CAAgB;AACd+P,YAAAA,MAAM,EAAEgC,SAAS,CAAChC,MADJ;AAEdysB,YAAAA,UAAU,EAAE,CAACzqB,SAAD,CAFE;AAGd0qB,YAAAA,gBAAgB,EAAE,CAAChD,cAAD,CAHJ;AAIdiD,YAAAA,IAAI,EAAE;AAJQ,WAAhB;AAMD,SAPD,MAOO;AACLH,UAAAA,aAAa,CAACC,UAAd,CAAyBx8B,IAAzB,CAA8B+R,SAA9B;AACAwqB,UAAAA,aAAa,CAACE,gBAAd,CAA+Bz8B,IAA/B,CAAoCy5B,cAApC;AACD;AACF;;AAED,UAAIkD,eAAe,GAAGplB,IAAtB;;AACA,WAAK,MAAMqlB,SAAX,IAAwBR,UAAxB,EAAoC;AAClC,cAAMS,eAAe,GAAGD,SAAS,CAAC7sB,MAAV,KAAqB,IAArB,GACpB6sB,SAAS,CAACJ,UAAV,CAAqBv1B,GAArB,CAAyB8K,SAAS,IAAItP,0BAAC,CAACq6B,IAAF,CAAO/qB,SAAP,EAAkBiqB,eAAlB,CAAtC,CADoB,GAEpBY,SAAS,CAACJ,UAAV,CAAqBv1B,GAArB,CAAyB8K,SAAS,IAAItP,0BAAC,CAACq6B,IAAF,CAAO/qB,SAAP,EAAkBkqB,gBAAlB,CAAtC,CAFJ;AAGA,cAAMc,eAAe,GAAG;AACtBthB,UAAAA,MAAM,EAAEhZ,0BAAC,CAACq6B,IAAF,CAAO36B,KAAK,CAACsZ,MAAb,EAAqB,CAAC,MAAD,EAAS,aAAT,CAArB,CADc;AAEtBC,UAAAA,SAAS,EAAEvZ,KAAK,CAACuZ,SAFK;AAGtB+gB,UAAAA,gBAAgB,EAAEG,SAAS,CAACH;AAHN,SAAxB;AAMA,YAAIC,IAAI,GAAGlB,gBAAgB,IAAIA,gBAAgB,CAAC;AAAEr5B,UAAAA,KAAF;AAASy6B,UAAAA;AAAT,SAAD,CAA/C;;AACA,YAAI,CAACF,IAAL,EAAW;AACT,cAAIE,SAAS,CAAC7sB,MAAV,KAAqB,KAAzB,EAAgC;AAC9B2sB,YAAAA,IAAI,GAAGM,0BAAM,CAACC,UAAP,CAAkB,KAAlB,EAAyBC,MAAzB,CAAgC/2B,IAAI,CAACC,SAAL,CAAew2B,SAAS,CAACJ,UAAV,CAAqBv1B,GAArB,CAAyB8K,SAAS,IAAItP,0BAAC,CAACq6B,IAAF,CAAO/qB,SAAP,EAAkBoqB,gBAAlB,CAAtC,CAAf,CAAhC,EAA4HgB,MAA5H,CAAmI,KAAnI,CAAP;AACD,WAFD,MAEO;AACLT,YAAAA,IAAI,GAAGM,0BAAM,CAACC,UAAP,CAAkB,KAAlB,EAAyBC,MAAzB,CAAgC/2B,IAAI,CAACC,SAAL,CAAew2B,SAAS,CAACJ,UAAV,CAAqBv1B,GAArB,CAAyB8K,SAAS,IAAItP,0BAAC,CAACq6B,IAAF,CAAO/qB,SAAP,EAAkBmqB,eAAlB,CAAtC,CAAf,CAAhC,EAA2HiB,MAA3H,CAAkI,KAAlI,CAAP;AACD;AACF;;AAED,cAAMC,iBAAiB,GAAGT,eAAe,CAAC3yB,IAAhB,CAAqBoF,CAAC,IAAIA,CAAC,CAACstB,IAAF,KAAWA,IAArC,CAA1B;;AACA,YAAIU,iBAAJ,EAAuB;AACrBA,UAAAA,iBAAiB,CAACl7B,MAAlB,CAAyBlC,IAAzB,CAA8ByC,0BAAC,CAACkN,SAAF,CAAYotB,eAAZ,CAA9B;AACAJ,UAAAA,eAAe,GAAGS,iBAAiB,CAACC,UAApC;AACA;AACD;;AAED,cAAMC,eAAe,GAAI7B,WAAW,IAAImB,SAAS,CAAC7sB,MAAV,KAAqB,KAApC,IAA6CgsB,cAAc,CAACW,IAAD,CAApF;;AACA,YAAIY,eAAJ,EAAqB;AACnB,cAAIX,eAAe,CAACliB,SAAhB,CAA0BrL,CAAC,IAAIA,CAAC,CAAC5F,GAAF,KAAU8zB,eAAe,CAACxyB,GAAzD,IAAgE,CAApE,EAAuE;AACrE6xB,YAAAA,eAAe,CAAC38B,IAAhB,CAAqB;AACnBwJ,cAAAA,GAAG,EAAE8zB,eAAe,CAACxyB;AADF,aAArB;AAGD;;AACD,gBAAMyyB,aAAa,GAAGD,eAAe,CAACp7B,MAAhB,CAAuB8H,IAAvB,CAA4BoF,CAAC,IAAIA,CAAC,CAACqM,MAAF,CAAStW,IAAT,KAAkB43B,eAAe,CAACthB,MAAhB,CAAuBtW,IAA1E,CAAtB;;AACA,cAAIo4B,aAAJ,EAAmB;AACjBA,YAAAA,aAAa,CAACd,gBAAd,GAAiC,CAAC,GAAGc,aAAa,CAACd,gBAAlB,EAAoC,GAAGM,eAAe,CAACN,gBAAvD,CAAjC;AACD,WAFD,MAEO;AACLa,YAAAA,eAAe,CAACp7B,MAAhB,CAAuBlC,IAAvB,CAA4ByC,0BAAC,CAACkN,SAAF,CAAYotB,eAAZ,CAA5B;AACD;;AACDJ,UAAAA,eAAe,GAAGW,eAAe,CAACD,UAAlC;AACA;AACD;;AACD,cAAMG,IAAI,GAAG;AACXztB,UAAAA,MAAM,EAAE6sB,SAAS,CAAC7sB,MADP;AAEXjF,UAAAA,GAAG,EAAE0L,8BAAS,CAAC,GAAD,EAAM,EAAN,CAFH;AAGXkmB,UAAAA,IAAI,EAAEA,IAHK;AAIXN,UAAAA,UAAU,EAAES,eAJD;AAKX36B,UAAAA,MAAM,EAAE,CAACO,0BAAC,CAACkN,SAAF,CAAYotB,eAAZ,CAAD,CALG;AAMXM,UAAAA,UAAU,EAAE;AAND,SAAb;;AAQA,YAAIG,IAAI,CAACztB,MAAL,KAAgB,KAApB,EAA2B;AACzBgsB,UAAAA,cAAc,CAACW,IAAD,CAAd,GAAuBc,IAAvB;AACD;;AACDb,QAAAA,eAAe,CAAC38B,IAAhB,CAAqBw9B,IAArB;AACAb,QAAAA,eAAe,GAAGa,IAAI,CAACH,UAAvB;AACD;AACF,KApFD;AAsFA,WAAO9lB,IAAP;AACD;;AAEDkmB,EAAAA,sBAAsB,CAAE3zB,IAAF,EAAQ;AAC5B,UAAMyN,IAAI,GAAG,KAAKgkB,uBAAL,CAA6BzxB,IAA7B,CAAb;AAEA,UAAM4zB,KAAK,GAAG,EAAd;AACA,UAAMn4B,KAAK,GAAG,EAAd;;AAEA,UAAMo4B,gBAAgB,GAAIH,IAAD,IAAU;AACjCE,MAAAA,KAAK,CAAC19B,IAAN,CAAY,KAAIw9B,IAAI,CAACd,IAAK,YAAWc,IAAI,CAACpB,UAAL,CAAgBn1B,GAAhB,CAAoB21B,SAAS,IAAK,IAAItiB,SAAJ,CAAcsiB,SAAd,CAAD,CAA2B11B,QAA3B,EAAjC,EAAwEZ,IAAxE,CAA6E,MAA7E,CAAqF,KAA1H;;AACA,UAAIk3B,IAAI,CAACH,UAAL,IAAmBG,IAAI,CAACH,UAAL,CAAgB52B,MAAhB,GAAyB,CAAhD,EAAmD;AACjD+2B,QAAAA,IAAI,CAACH,UAAL,CAAgBxsB,MAAhB,CAAuBzB,CAAC,IAAI,CAACA,CAAC,CAAC5F,GAA/B,EAAoC9D,OAApC,CAA4C0J,CAAC,IAAIuuB,gBAAgB,CAACvuB,CAAD,CAAjE;AACD;AACF,KALD;;AAMA,UAAMwuB,gBAAgB,GAAG,CAACJ,IAAD,EAAOtzB,IAAI,GAAG,EAAd,KAAqB;AAC5C,UAAIszB,IAAI,CAACH,UAAL,IAAmBG,IAAI,CAACH,UAAL,CAAgB52B,MAAhB,GAAyB,CAAhD,EAAmD;AACjD+2B,QAAAA,IAAI,CAACH,UAAL,CAAgBxsB,MAAhB,CAAuBzB,CAAC,IAAI,CAACA,CAAC,CAAC5F,GAA/B,EAAoC9D,OAApC,CAA4C0J,CAAC,IAAIwuB,gBAAgB,CAACxuB,CAAD,EAAI,CAAC,GAAGlF,IAAJ,EAAW,KAAIszB,IAAI,CAACd,IAAK,EAAzB,CAAJ,CAAjE;AACAc,QAAAA,IAAI,CAACH,UAAL,CAAgBxsB,MAAhB,CAAuBzB,CAAC,IAAIA,CAAC,CAAC5F,GAA9B,EAAmC9D,OAAnC,CAA2C0J,CAAC,IAAI7J,KAAK,CAACvF,IAAN,CAAY,GAAE,CAAC,GAAGkK,IAAJ,EAAW,KAAIszB,IAAI,CAACd,IAAK,EAAzB,EAA6B,KAAIttB,CAAC,CAAC5F,GAAI,EAAvC,EAA0ClD,IAA1C,CAA+C,MAA/C,CAAuD,GAArE,CAAhD;AACD,OAHD,MAGO;AACLf,QAAAA,KAAK,CAACvF,IAAN,CAAY,GAAE,CAAC,GAAGkK,IAAJ,EAAW,KAAIszB,IAAI,CAACd,IAAK,EAAzB,EAA4Bp2B,IAA5B,CAAiC,MAAjC,CAAyC,GAAvD;AACD;AACF,KAPD;;AAQAiR,IAAAA,IAAI,CAAC7R,OAAL,CAAaub,CAAC,IAAI0c,gBAAgB,CAAC1c,CAAD,CAAlC;AACA1J,IAAAA,IAAI,CAAC7R,OAAL,CAAaub,CAAC,IAAI2c,gBAAgB,CAAC3c,CAAD,CAAlC;AAEA,WAAO,CACL,WADK,EAEL,GAAGyc,KAFE,EAGL,GAAGn4B,KAHE,EAIL,GAJK,EAIAe,IAJA,CAIK,MAJL,CAAP;AAKD;;AApoCsC,CAAzC;;AC5EA,cAAc,GAAG,MAAMu3B,QAAN,CAAe;AAC9Bn+B,EAAAA,WAAW,CAAEo+B,aAAF,EAAiBC,OAAjB,EAA0B;AACnC,SAAKD,aAAL,GAAqBA,aAArB;AACA,SAAKC,OAAL,GAAel7B,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBi7B,OAAlB,CAAf;AACA,SAAKC,gBAAL,GAAwB,IAAxB;AACD;;AAEDnW,EAAAA,QAAQ,GAAI;AACV,WAAO5nB,OAAO,CAACC,OAAR,EAAP;AACD;;AAED+9B,EAAAA,OAAO,GAAI;AACT,WAAOh+B,OAAO,CAACC,OAAR,EAAP;AACD;;AAEDg+B,EAAAA,mBAAmB,CAAEp4B,MAAF,EAAU;AAC3B,QAAI,CAAC,KAAKi4B,OAAL,CAAaj4B,MAAb,CAAL,EAA2B;AACzB,YAAM,IAAIhB,KAAJ,CAAW,mBAAkBgB,MAAO,UAApC,CAAN;AACD;AACF;;AAnB6B,CAAhC;;ACEA,YAAc,GAAG,MAAMq4B,MAAN,SAAqBN,UAArB,CAA8B;AAC7ChW,EAAAA,QAAQ,GAAI;AACV,WAAO,MAAMA,QAAN,EAAP;AACD;;AAEDoW,EAAAA,OAAO,GAAI;AACT,WAAO,MAAMA,OAAN,EAAP;AACD;;AAP4C,CAA/C;;;ACCA,QAAMl2B,KAAK,GAAGD,yBAAgB,CAAC,0BAAD,CAA9B;AAEAs2B,EAAAA,cAAA,GAAiB;AACfC,IAAAA,mBAAmB,EAAE,CAACC,GAAD,EAAMC,YAAY,GAAG,KAArB,EAA4BC,cAAc,GAAG,EAA7C,KAAoD;AACvE,YAAMC,UAAU,GAAGH,GAAG,CAAC7tB,KAAJ,CAAU,GAAV,CAAnB;AACA,YAAMiuB,OAAO,GAAGD,UAAU,CAAC,CAAD,CAA1B;AACAA,MAAAA,UAAU,CAACE,MAAX,CAAkB,CAAlB,EAAqB,CAArB;AACA,aAAOP,MAAM,CAACQ,OAAP,CAAeC,eAAf,CAA+BH,OAA/B,EAAwCD,UAAxC,EAAoDF,YAApD,EAAkEC,cAAlE,CAAP;AACD,KANc;AAQfK,IAAAA,eAAe,EAAE,CAACP,GAAD,EAAMG,UAAN,EAAkBF,YAAY,GAAG,KAAjC,EAAwCC,cAAc,GAAG,EAAzD,KAAgE;AAC/E,aAAO,IAAIv+B,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC4H,QAAAA,KAAK,CAAC,sBAAsBu2B,GAAtB,GAA4B,GAA5B,GAAkC77B,0BAAC,CAAC6D,IAAF,CAAOm4B,UAAP,EAAmB,GAAnB,CAAnC,CAAL;AAEA,cAAMK,cAAc,GAAGC,iCAAY,CAACC,KAAb,CAAmBV,GAAnB,EAAwBG,UAAxB,EAAoCD,cAApC,CAAvB;AAEA,cAAMS,MAAM,GAAG,EAAf;AACA,cAAMC,MAAM,GAAG,EAAf;AAEAJ,QAAAA,cAAc,CAACG,MAAf,CAAsBE,EAAtB,CAAyB,MAAzB,EAAkC5a,IAAD,IAAU;AACzC,cAAIA,IAAJ,EAAU;AACRxc,YAAAA,KAAK,CAAE,GAAEu2B,GAAI,YAAW/Z,IAAK,EAAxB,CAAL;AACA0a,YAAAA,MAAM,CAACj/B,IAAP,CAAYukB,IAAZ;AACD;AACF,SALD;AAMAua,QAAAA,cAAc,CAACI,MAAf,CAAsBC,EAAtB,CAAyB,MAAzB,EAAkC5a,IAAD,IAAU;AACzC,cAAIA,IAAJ,EAAU;AACRxc,YAAAA,KAAK,CAAE,GAAEu2B,GAAI,YAAW/Z,IAAK,EAAxB,CAAL;AACA2a,YAAAA,MAAM,CAACl/B,IAAP,CAAYukB,IAAZ;AACD;AACF,SALD;AAMAua,QAAAA,cAAc,CAACK,EAAf,CAAkB,OAAlB,EAA4BxnB,IAAD,IAAU;AACnC5P,UAAAA,KAAK,CAACu2B,GAAG,GAAG,oBAAN,GAA6B3mB,IAA9B,CAAL;;AACA,cAAIA,IAAI,KAAK,CAAT,IAAc4mB,YAAlB,EAAgC;AAC9Br+B,YAAAA,OAAO,CAAC;AAAE++B,cAAAA,MAAF;AAAUC,cAAAA;AAAV,aAAD,CAAP;AACD,WAFD,MAEO;AACL/+B,YAAAA,MAAM,CAAC,IAAI2E,KAAJ,CAAW,GAAEw5B,GAAI,wBAAuB3mB,IAAK,EAA7C,CAAD,CAAN;AACD;AACF,SAPD;AAQAmnB,QAAAA,cAAc,CAACK,EAAf,CAAkB,OAAlB,EAA4B5+B,GAAD,IAAS;AAClC,cAAIg+B,YAAJ,EAAkB;AAChBr+B,YAAAA,OAAO;AACR,WAFD,MAEO;AACLC,YAAAA,MAAM,CAAC,IAAI2E,KAAJ,CAAW,GAAEw5B,GAAI,YAAWllB,wBAAI,CAACC,OAAL,CAAa9Y,GAAb,CAAkB,EAA9C,CAAD,CAAN;AACD;AACF,SAND;AAOD,OAnCM,CAAP;AAoCD;AA7Cc,GAAjB;;;;;ACFA,MAAMwH,OAAK,GAAGD,yBAAgB,CAAC,qBAAD,CAA9B;AAMA,aAAc,GAAG,MAAMs3B,OAAN,SAAsBvB,UAAtB,CAA+B;AAC9ChW,EAAAA,QAAQ,GAAI;AACV,WAAO,MAAMA,QAAN,GAAiBxnB,IAAjB,CAAsB,MAAM;AACjC,WAAK69B,mBAAL,CAAyB5+B,MAAM,CAACP,OAAhC;;AACA,WAAKm/B,mBAAL,CAAyB5+B,MAAM,CAACN,MAAhC;;AACA,WAAKk/B,mBAAL,CAAyB5+B,MAAM,CAACL,SAAhC;;AACA,WAAKi/B,mBAAL,CAAyB5+B,MAAM,CAACJ,MAAhC;AACD,KALM,CAAP;AAMD;;AAED++B,EAAAA,OAAO,GAAI;AACT,WAAO,IAAIh+B,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCM,MAAAA,yBAAK,CAAC4+B,MAAN,CAAa,CAEVC,qBAAD,IAA2B;AACzB,aAAKtB,gBAAL,GAAwB9zB,wBAAI,CAAChK,OAAL,CAAa,KAAK49B,aAAlB,EAAiC,KAAjC,CAAxB;AAEAyB,QAAAA,0BAAM,CAAC,KAAKvB,gBAAN,EAAyBz9B,GAAD,IAAS;AACrC,cAAIA,GAAJ,EAAS;AACP,mBAAO++B,qBAAqB,CAAC,IAAIx6B,KAAJ,CAAW,oCAAmC,KAAKk5B,gBAAiB,KAAIz9B,GAAI,EAA5E,CAAD,CAA5B;AACD;;AACD++B,UAAAA,qBAAqB;AACtB,SALK,CAAN;AAMD,OAXU,EAaVE,UAAD,IAAgB;AACd,cAAMC,aAAa,GAAG,CACpB,OADoB,EAEpB,IAFoB,EAGpB,KAAK1B,OAAL,CAAaz+B,MAAM,CAACL,SAApB,CAHoB,EAIpB,iBAJoB,EAKpB,SALoB,EAMpB,GANoB,EAOpB,KAAK8+B,OAAL,CAAaz+B,MAAM,CAACN,MAApB,CAPoB,EAQpB,KAAKg/B,gBARe,CAAtB;AAUA0B,QAAAA,YAAY,CAACb,eAAb,CAA6B,KAAKd,OAAL,CAAaz+B,MAAM,CAACP,OAApB,CAA7B,EAA2D0gC,aAA3D,EAA0E,KAA1E,EAAiF;AAAErzB,UAAAA,GAAG,EAAE,KAAK4xB;AAAZ,SAAjF,EACG39B,IADH,CACQ,MAAMm/B,UAAU,EADxB,EAEGl/B,KAFH,CAESk/B,UAFT;AAGD,OA3BU,EA6BVG,uBAAD,IAA6B;AAC3B,aAAK3B,gBAAL,GAAwB9zB,wBAAI,CAAChK,OAAL,CAAa,KAAK89B,gBAAlB,EAAoC,KAAKD,OAAL,CAAaz+B,MAAM,CAACJ,MAApB,CAApC,CAAxB;AACAygC,QAAAA,uBAAuB;AACxB,OAhCU,EAkCVC,YAAD,IAAkB;AAChB,YAAI,KAAK7B,OAAL,CAAaz+B,MAAM,CAACH,aAApB,CAAJ,EAAwC;AACtCugC,UAAAA,YAAY,CAACrB,mBAAb,CAAiC,KAAKN,OAAL,CAAaz+B,MAAM,CAACH,aAApB,CAAjC,EAAqE,KAArE,EAA4E;AAAEiN,YAAAA,GAAG,EAAE,KAAK4xB;AAAZ,WAA5E,EACG39B,IADH,CACQ,MAAMu/B,YAAY,EAD1B,EAEGt/B,KAFH,CAESs/B,YAFT;AAGD,SAJD,MAIO;AACLA,UAAAA,YAAY;AACb;AACF,OA1CU,CAAb,EA4CIr/B,GAAD,IAAS;AACV,YAAIA,GAAJ,EAAS;AACP,iBAAOJ,MAAM,CAACI,GAAD,CAAb;AACD;;AACDwH,QAAAA,OAAK,CAAE,uBAAsB,KAAKi2B,gBAAiB,EAA9C,CAAL;AACA99B,QAAAA,OAAO;AACR,OAlDD;AAmDD,KApDM,CAAP;AAqDD;;AAhE6C,CAAhD;;ACJA,eAAc,GAAG,MAAM2/B,SAAN,SAAwBhC,UAAxB,CAAiC;AAChDhW,EAAAA,QAAQ,GAAI;AACV,WAAO,MAAMA,QAAN,GAAiBxnB,IAAjB,CAAsB,MAAM;AACjC,WAAK69B,mBAAL,CAAyB5+B,MAAM,CAACR,SAAhC;;AAEA,YAAMghC,SAAS,GAAG,KAAK/B,OAAL,CAAaz+B,MAAM,CAACR,SAApB,CAAlB;AACAuN,MAAAA,sBAAE,CAAC0zB,IAAH,CAAQD,SAAR,EAAmB,CAACv/B,GAAD,EAAMy/B,KAAN,KAAgB;AACjC,YAAIz/B,GAAJ,EAAS;AACP,gBAAM,IAAIuE,KAAJ,CAAW,GAAEg7B,SAAU,mBAAkBv/B,GAAI,EAA7C,CAAN;AACD;;AACD,YAAIy/B,KAAK,CAACC,WAAN,MAAuB,CAACD,KAAK,CAACE,cAAN,EAA5B,EAAoD;AAClD7zB,UAAAA,sBAAE,CAAC8zB,MAAH,CAAUL,SAAV,EAAqBzzB,sBAAE,CAAC+zB,SAAH,CAAaC,IAAlC,EAAyCC,IAAD,IAAU;AAChD,gBAAI//B,GAAJ,EAAS;AACP,oBAAM,IAAIuE,KAAJ,CAAW,GAAEg7B,SAAU,mBAAkBv/B,GAAI,EAA7C,CAAN;AACD;AACF,WAJD;AAKD,SAND,MAMO;AACL,gBAAM,IAAIuE,KAAJ,CAAW,GAAEg7B,SAAU,0BAAvB,CAAN;AACD;AACF,OAbD;AAcD,KAlBM,CAAP;AAmBD;;AAED7B,EAAAA,OAAO,GAAI;;AAET,SAAKD,gBAAL,GAAwB9zB,wBAAI,CAAChK,OAAL,CAAa,KAAK69B,OAAL,CAAaz+B,MAAM,CAACR,SAApB,CAAb,CAAxB;AACA,WAAOmB,OAAO,CAACC,OAAR,EAAP;AACD;;AA3B+C,CAAlD;;ACLA,YAAc,GAAG;AACfqgC,EAAAA,eAAe,EAAE,iBADF;AAEfC,EAAAA,eAAe,EAAE,iBAFF;AAGfC,EAAAA,SAAS,EAAE,WAHI;AAIfC,EAAAA,cAAc,EAAE,gBAJD;AAKfC,EAAAA,eAAe,EAAE;AALF,CAAjB;;ACAA,MAAM;AAAE3d,EAAAA;AAAF,IAAoBlb,KAA1B;AAEA,uBAAc,GAAG,MAAM84B,iBAAN,SAAgC97B,KAAhC,CAAsC;AACrDpF,EAAAA,WAAW,CAAEsD,aAAF,EAAiB;AAC1B,UAAO,8BAA6BggB,aAAa,CAAChgB,aAAD,CAAgB,EAAjE;AACA,SAAKA,aAAL,GAAqBA,aAArB;AACD;;AAJoD,CAAvD;;ACGA,WAAc,GAAG,MAAM69B,KAAN,CAAY;AAC3BnhC,EAAAA,WAAW,GAAI;AACb,SAAKohC,KAAL,GAAa,EAAb;AACA,SAAKC,SAAL,GAAiB,EAAjB;AACA,SAAKC,YAAL,GAAoB,IAApB;AACD;;AAEDv6B,EAAAA,MAAM,GAAI;AACR,WAAO,KAAKq6B,KAAL,CAAWr6B,MAAlB;AACD;;AAEDw6B,EAAAA,KAAK,GAAI;AACP,SAAKH,KAAL,GAAa,EAAb;AACD;;AAEDI,EAAAA,KAAK,GAAI;AACP,SAAKJ,KAAL,GAAa,EAAb;AACA,SAAKC,SAAL,GAAiB,EAAjB;AACD;;AAED/gC,EAAAA,IAAI,CAAEwC,GAAF,EAAO;AACT,QAAI,KAAKw+B,YAAT,EAAuB;AACrB,WAAKA,YAAL,CAAkBx+B,GAAlB;AACD;;AAED,QAAI,KAAKu+B,SAAL,CAAet6B,MAAf,GAAwB,CAA5B,EAA+B;AAC7B,WAAKs6B,SAAL,CAAeI,KAAf,GAAuB3+B,GAAvB;AACD,KAFD,MAEO;AACL,WAAKs+B,KAAL,CAAW9gC,IAAX,CAAgBwC,GAAhB;AACD;AACF;;AAEDoQ,EAAAA,GAAG,CAAE5P,aAAF,EAAiB;AAClB,QAAI,KAAK89B,KAAL,CAAWr6B,MAAX,GAAoB,CAAxB,EAA2B;AACzB,aAAOxG,OAAO,CAACC,OAAR,CAAgB,KAAK4gC,KAAL,CAAWK,KAAX,EAAhB,CAAP;AACD;;AACD,WAAO,IAAIlhC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,UAAIihC,QAAQ,GAAG,IAAf;AACA,YAAMC,cAAc,GAAG5gC,yBAAK,CAAC6gC,OAAN,CAAeC,eAAD,IAAqB;AACxDH,QAAAA,QAAQ,GAAI5+B,GAAD,IAAS;AAClB++B,UAAAA,eAAe,CAAC,IAAD,EAAO/+B,GAAP,CAAf;AACD,SAFD;;AAGA,aAAKu+B,SAAL,CAAe/gC,IAAf,CAAoBohC,QAApB;AACD,OALsB,EAKpBp+B,aALoB,CAAvB;AAOAq+B,MAAAA,cAAc,CAAC,CAAC9gC,GAAD,EAAMiC,GAAN,KAAc;AAC3B,YAAIjC,GAAG,IAAIA,GAAG,CAACoX,IAAJ,KAAa,WAAxB,EAAqC;AACnC,eAAKopB,SAAL,CAAepC,MAAf,CAAsB,KAAKoC,SAAL,CAAev1B,OAAf,CAAuB41B,QAAvB,CAAtB,EAAwD,CAAxD;AACAjhC,UAAAA,MAAM,CAAC,IAAIygC,mBAAJ,CAAsB59B,aAAtB,CAAD,CAAN;AACD,SAHD,MAGO,IAAIzC,GAAJ,EAAS;AACd,eAAKwgC,SAAL,CAAepC,MAAf,CAAsB,KAAKoC,SAAL,CAAev1B,OAAf,CAAuB41B,QAAvB,CAAtB,EAAwD,CAAxD;AACAjhC,UAAAA,MAAM,CAAC,IAAI2E,KAAJ,CAAW,mBAAkBsU,wBAAI,CAACC,OAAL,CAAa9Y,GAAb,CAAkB,EAA/C,CAAD,CAAN;AACD,SAHM,MAGA;AACLL,UAAAA,OAAO,CAACsC,GAAD,CAAP;AACD;AACF,OAVa,CAAd;AAWD,KApBM,CAAP;AAqBD;;AAEDg/B,EAAAA,oBAAoB,CAAEv+B,QAAF,EAAY;AAC9B,SAAK+9B,YAAL,GAAoB/9B,QAApB;AACD;;AA7D0B,CAA7B;;ACCA,MAAM8E,OAAK,GAAGD,yBAAgB,CAAC,gCAAD,CAA9B;AAKA,MAAM;AAAEsc,eAAAA,aAAF;AAAeE,WAAAA;AAAf,IAA2Btc,SAAjC;AAGA,mBAAc,GAAG,MAAMy5B,aAAN,CAAoB;AACnC/hC,EAAAA,WAAW,CAAEgd,YAAF,EAAgBohB,aAAhB,EAA+B4D,IAA/B,EAAqCh5B,IAArC,EAA2Ci5B,IAA3C,EAAiD;AAC1D,SAAKjlB,YAAL,GAAoBA,YAApB;AACA,SAAKglB,IAAL,GAAYA,IAAZ;AACA,SAAKh5B,IAAL,GAAY7F,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB4F,IAAlB,CAAZ;AACA,SAAKi5B,IAAL,GAAY9+B,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB6+B,IAAlB,CAAZ;AACA,SAAK7D,aAAL,GAAqBA,aAArB;AACA,SAAK8D,YAAL,GAAoB,EAApB;AACA,SAAKC,MAAL,GAAc,EAAd;AACA,SAAKC,eAAL,GAAuB,IAAvB;AACD;;AAEDja,EAAAA,QAAQ,GAAI;AACV,SAAKka,WAAL,GAAmBzd,SAAO,CAAC,KAAK5b,IAAN,EAAY,KAAKA,IAAL,CAAUtJ,YAAY,CAACnB,kBAAvB,CAAZ,CAA1B;AACA,SAAK+jC,WAAL,GAAmB1d,SAAO,CAAC,KAAK5b,IAAN,EAAY,KAAKA,IAAL,CAAUtJ,YAAY,CAAClB,kBAAvB,CAAZ,CAA1B;AACA,SAAK+jC,cAAL,GAAsB3d,SAAO,CAAC,KAAK5b,IAAN,EAAY,KAAKA,IAAL,CAAUtJ,YAAY,CAACjB,qBAAvB,CAAZ,CAA7B;AACA,SAAK+jC,iBAAL,GAAyB5d,SAAO,CAAC,KAAK5b,IAAN,EAAY,KAAKA,IAAL,CAAUtJ,YAAY,CAAChB,wBAAvB,CAAZ,CAAhC;AACA,SAAK+jC,UAAL,GAAkB7d,SAAO,CAAC,KAAK5b,IAAN,EAAY,KAAKA,IAAL,CAAUtJ,YAAY,CAACf,iBAAvB,CAAZ,CAAzB;AACA,SAAK+jC,WAAL,GAAmB9d,SAAO,CAAC,KAAK5b,IAAN,EAAY,KAAKA,IAAL,CAAUtJ,YAAY,CAACd,kBAAvB,CAAZ,CAA1B;AAEA,WAAO2B,OAAO,CAACC,OAAR,EAAP;AACD;;AAEDE,EAAAA,KAAK,GAAI;AACP,QAAI,KAAKsI,IAAL,CAAUtJ,YAAY,CAACV,gCAAvB,KAA4D,KAAKgK,IAAL,CAAUtJ,YAAY,CAACT,0BAAvB,CAAhE,EAAoH;AAClH,YAAM0jC,IAAI,GAAG,EAAb;AACA,UAAI,KAAK35B,IAAL,CAAUtJ,YAAY,CAACV,gCAAvB,CAAJ,EAA8D2jC,IAAI,CAACC,aAAL,GAAqB,KAAK55B,IAAL,CAAUtJ,YAAY,CAACV,gCAAvB,CAArB;AAC9D,UAAI,KAAKgK,IAAL,CAAUtJ,YAAY,CAACT,0BAAvB,CAAJ,EAAwD0jC,IAAI,CAACE,OAAL,GAAe,KAAK75B,IAAL,CAAUtJ,YAAY,CAACT,0BAAvB,CAAf;AACxD,WAAKmjC,eAAL,GAAuB,IAAIU,8BAAJ,CAAeH,IAAf,CAAvB;AACAt6B,MAAAA,OAAK,CAAE,wCAAuCqR,wBAAI,CAACC,OAAL,CAAagpB,IAAb,CAAmB,EAA5D,CAAL;AACD;;AAED,WAAO,IAAIpiC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,WAAKsiC,cAAL,CAAoB,SAApB,EAA+B,KAAKV,WAApC,EACG1hC,IADH,CACQ,MAAMH,OAAO,CAAC,IAAD,CADrB,EAEGI,KAFH,CAEUC,GAAD,IAASJ,MAAM,CAACI,GAAD,CAFxB;AAGD,KAJM,CAAP;AAKD;;AAEDO,EAAAA,KAAK,GAAI;AACP,SAAK+gC,MAAL,GAAc,EAAd;AACA,WAAO,IAAI5hC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,WAAKsiC,cAAL,CAAoB,SAApB,EAA+B,KAAKT,WAApC,EACG3hC,IADH,CACQ,MAAMH,OAAO,CAAC,IAAD,CADrB,EAEGI,KAFH,CAEUC,GAAD,IAASJ,MAAM,CAACI,GAAD,CAFxB;AAGD,KAJM,CAAP;AAKD;;AAEDgC,EAAAA,YAAY,CAAEa,IAAF,EAAQ;AAClB,UAAM8Z,KAAK,GAAG,IAAIpN,mBAAJ,CAAsB;AAAEC,MAAAA,MAAM,EAAE,IAAV;AAAgBnN,MAAAA,WAAW,EAAEQ;AAA7B,KAAtB,CAAd;AACA,WAAO,KAAKT,QAAL,CAAcua,KAAd,CAAP;AACD;;AAEDva,EAAAA,QAAQ,CAAEua,KAAF,EAAS;AACf,UAAM/R,GAAG,GAAG,MAAM,KAAKs3B,cAAL,CAAoB,YAApB,EAAkC,KAAKR,cAAvC,EAAuD;AAAE/kB,MAAAA;AAAF,KAAvD,EACf7c,IADe,CACV,MAAM,KAAKqiC,YAAL,CAAkBxlB,KAAlB,CADI,CAAlB;;AAGA,QAAI,KAAK4kB,eAAT,EAA0B;AACxB,aAAO,KAAKA,eAAL,CAAqBa,QAArB,CAA8Bx3B,GAA9B,CAAP;AACD,KAFD,MAEO;AACL,aAAOA,GAAG,EAAV;AACD;AACF;;AAEDu3B,EAAAA,YAAY,CAAExlB,KAAF,EAAS;AACnB,WAAOjd,OAAO,CAACC,OAAR,CAAgB,IAAhB,CAAP;AACD;;AAED6C,EAAAA,WAAW,CAAE/B,OAAO,GAAG,IAAZ,EAAkBgC,aAAa,GAAG,IAAlC,EAAwC;AACjD,QAAI,CAAChC,OAAL,EAAcA,OAAO,GAAG,SAAV;AACd,QAAI,CAACgC,aAAL,EAAoBA,aAAa,GAAG,KAAK0F,IAAL,CAAUtJ,YAAY,CAACpI,iBAAvB,CAAhB;;AAEpB,QAAI,CAAC,KAAK6qC,MAAL,CAAY7gC,OAAZ,CAAL,EAA2B;AACzB,WAAK6gC,MAAL,CAAY7gC,OAAZ,IAAuB,IAAI6/B,OAAJ,EAAvB;AACD;;AAED,WAAO,IAAI5gC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,WAAK0hC,MAAL,CAAY7gC,OAAZ,EAAqB4R,GAArB,CAAyB5P,aAAzB,EACG3C,IADH,CACS6C,MAAD,IAAY;AAChB,YAAIT,0BAAC,CAACmgC,OAAF,CAAU1/B,MAAV,CAAJ,EAAuB;AACrB/C,UAAAA,MAAM,CAAC+C,MAAD,CAAN;AACD,SAFD,MAEO;AACLhD,UAAAA,OAAO,CAACgD,MAAD,CAAP;AACD;AACF,OAPH,EAQG5C,KARH,CAQUC,GAAD,IAAS;AACdwH,QAAAA,OAAK,CAAE,qBAAoBxH,GAAG,CAACwE,OAAJ,IAAexE,GAAI,EAAzC,CAAL;AACAJ,QAAAA,MAAM,CAACI,GAAD,CAAN;AACD,OAXH;AAYD,KAbM,CAAP;AAcD;;AAED4C,EAAAA,eAAe,CAAEnC,OAAO,GAAG,IAAZ,EAAkBgC,aAAa,GAAG,IAAlC,EAAwC;AACrD,WAAO,KAAKD,WAAL,CAAiB/B,OAAjB,EAA0BgC,aAA1B,EACJ3C,IADI,CACE6C,MAAD,IAAY;AAChB,UAAIA,MAAJ,EAAY;AACV,eAAOA,MAAM,CAACN,WAAd;AACD;AACF,KALI,CAAP;AAMD;;AAEDS,EAAAA,OAAO,GAAI;AACT,WAAO,IAAIpD,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,WAAKmC,IAAL,GACGjC,IADH,CACQ,MAAM,KAAKS,KAAL,EADd,EAEGT,IAFH,CAEQ,MAAMH,OAAO,EAFrB,EAGGI,KAHH,CAGUC,GAAD,IAASJ,MAAM,CAACI,GAAD,CAHxB;AAID,KALM,CAAP;AAMD;;AAED+B,EAAAA,IAAI,GAAI;AACN,WAAO,IAAIrC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,WAAKsiC,cAAL,CAAoB,QAApB,EAA8B,KAAKN,UAAnC,EACG9hC,IADH,CACQ,MAAMH,OAAO,CAAC,IAAD,CADrB,EAEGI,KAFH,CAEUC,GAAD,IAASJ,MAAM,CAACI,GAAD,CAFxB;AAGD,KAJM,CAAP;AAKD;;AAED+C,EAAAA,KAAK,GAAI;AACP,SAAKw+B,eAAL,GAAuB,IAAvB;AACA,WAAO,IAAI7hC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCM,MAAAA,yBAAK,CAAC4+B,MAAN,CAAa,CACVwD,YAAD,IAAkB;AAChB,aAAKJ,cAAL,CAAoB,SAApB,EAA+B,KAAKL,WAApC,EACG/hC,IADH,CACQ,MAAMwiC,YAAY,EAD1B,EAEGviC,KAFH,CAES,MAAMuiC,YAAY,EAF3B;AAGD,OALU,EAOVC,gBAAD,IAAsB;AACpB,YAAI,KAAKlB,YAAT,EAAuB;AACrBnhC,UAAAA,yBAAK,CAAC4+B,MAAN,CACE,KAAKuC,YAAL,CAAkB36B,GAAlB,CAAuBtG,IAAD,IAAU;AAC9B,mBAAQC,EAAD,IAAQ;AACbD,cAAAA,IAAI,CAAEJ,GAAD,IAAS;AACZ,oBAAIA,GAAJ,EAASwH,OAAK,CAAE,mBAAkBqR,wBAAI,CAACC,OAAL,CAAa9Y,GAAb,CAAkB,EAAtC,CAAL;AACTK,gBAAAA,EAAE;AACH,eAHG,CAAJ;AAID,aALD;AAMD,WAPD,CADF,EASE,MAAM;AACJkiC,YAAAA,gBAAgB;AACjB,WAXH;AAaD,SAdD,MAcO;AACLA,UAAAA,gBAAgB;AACjB;AACF,OAzBU,EA2BVC,SAAD,IAAe;AACb,YAAI,KAAKr6B,IAAL,CAAUtJ,YAAY,CAACrI,cAAvB,CAAJ,EAA4C;AAC1CgR,UAAAA,OAAK,CAAE,8BAA6B,KAAK+1B,aAAc,EAAlD,CAAL;AACAkF,UAAAA,0BAAM,CAAC,KAAKlF,aAAN,EAAsBv9B,GAAD,IAAS;AAClC,gBAAIA,GAAJ,EAASwH,OAAK,CAAE,oBAAmB,KAAK+1B,aAAc,YAAW1kB,wBAAI,CAACC,OAAL,CAAa9Y,GAAb,CAAkB,EAArE,CAAL;AACTwiC,YAAAA,SAAS;AACV,WAHK,CAAN;AAID,SAND,MAMO;AACLA,UAAAA,SAAS;AACV;AACF,OArCU,CAAb,EAsCIxiC,GAAD,IAAS;AACV,YAAIA,GAAJ,EAAS;AACP,iBAAOJ,MAAM,CAAC,IAAI2E,KAAJ,CAAW,kBAAiBsU,wBAAI,CAACC,OAAL,CAAa9Y,GAAb,CAAkB,EAA9C,CAAD,CAAb;AACD;;AACDL,QAAAA,OAAO;AACR,OA3CD;AA4CD,KA7CM,CAAP;AA8CD;;AAED8nB,EAAAA,uBAAuB,CAAEC,GAAF,EAAO;AAC5B,QAAI,CAACplB,MAAM,CAACic,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqC,KAAKtW,IAA1C,EAAgDuf,GAAhD,CAAL,EAA2D;AACzD,YAAM,IAAInjB,KAAJ,CAAW,uBAAsBmjB,GAAI,UAArC,CAAN;AACD;AACF;;AAEDgb,EAAAA,0BAA0B,GAAI;AAC5B,UAAMC,SAAS,GAAG,CAAC,GAAGC,SAAJ,CAAlB;AACA,UAAM/P,KAAK,GAAG8P,SAAS,CAACl5B,IAAV,CAAgBie,GAAD,IAAS,KAAKvf,IAAL,CAAUuf,GAAV,CAAxB,CAAd;;AACA,QAAI,CAACmL,KAAL,EAAY;AACV,YAAM,IAAItuB,KAAJ,CAAW,0BAAyBo+B,SAAS,CAAC58B,IAAV,EAAiB,UAArD,CAAN;AACD;AACF;;AAEDmZ,EAAAA,YAAY,CAAEze,OAAO,GAAG,SAAZ,EAAuB;AACjC,WAAQ,KAAK6gC,MAAL,CAAY7gC,OAAZ,KAAwB,KAAK6gC,MAAL,CAAY7gC,OAAZ,EAAqByF,MAArB,EAAzB,IAA2D,CAAlE;AACD;;AAED28B,EAAAA,WAAW,CAAEpiC,OAAO,GAAG,SAAZ,EAAuB;AAChC,QAAI,KAAK6gC,MAAL,CAAY7gC,OAAZ,CAAJ,EAA0B;AACxB,WAAK6gC,MAAL,CAAY7gC,OAAZ,EAAqBigC,KAArB;AACD;AACF;;AAEkB,QAAboC,aAAa,CAAEngC,MAAF,EAAU;AAC3B,QAAIT,0BAAC,CAACmgC,OAAF,CAAU1/B,MAAV,CAAJ,EAAuB;AACrB,UAAI,CAAC,KAAK2+B,MAAL,CAAY/1B,OAAjB,EAA0B;AACxB,aAAK+1B,MAAL,CAAY/1B,OAAZ,GAAsB,IAAI+0B,OAAJ,EAAtB;AACD;;AACD,WAAKgB,MAAL,CAAY/1B,OAAZ,CAAoB9L,IAApB,CAAyBkD,MAAzB;AACA,WAAKwZ,YAAL,CAAkBC,IAAlB,CAAuBC,MAAM,CAACnY,4BAA9B,EAA4D,IAA5D,EAAkEvB,MAAlE;AACD,KAND,MAMO;AACL,UAAI,CAACA,MAAM,CAAClC,OAAZ,EAAqBkC,MAAM,CAAClC,OAAP,GAAiB,SAAjB;AACrB,UAAI,CAACkC,MAAM,CAAC6M,MAAZ,EAAoB7M,MAAM,CAAC6M,MAAP,GAAgB,KAAhB;;AAEpB,UAAI,CAAC,KAAK8xB,MAAL,CAAY3+B,MAAM,CAAClC,OAAnB,CAAL,EAAkC;AAChC,aAAK6gC,MAAL,CAAY3+B,MAAM,CAAClC,OAAnB,IAA8B,IAAI6/B,OAAJ,EAA9B;AACD;;AAED,YAAM,KAAK4B,cAAL,CAAoB,eAApB,EAAqC,KAAKP,iBAA1C,EAA6D;AAAEh/B,QAAAA;AAAF,OAA7D,CAAN;AACA,WAAK2+B,MAAL,CAAY3+B,MAAM,CAAClC,OAAnB,EAA4BhB,IAA5B,CAAiCkD,MAAjC;AACA,WAAKwZ,YAAL,CAAkBC,IAAlB,CAAuBC,MAAM,CAACpY,uBAA9B,EAAuD,IAAvD,EAA6DtB,MAA7D;AACD;AACF;;AAEmB,QAAdu/B,cAAc,CAAEt9B,IAAF,EAAQ0a,IAAR,EAAc/V,IAAd,EAAoB;AACtC,QAAI;AACF,YAAMsa,aAAW,CAAC,KAAK1b,IAAN,EAAYmX,IAAZ,EAAkBhd,MAAM,CAACC,MAAP,CAAc;AAAEjD,QAAAA,SAAS,EAAE,IAAb;AAAmByjC,iBAAAA;AAAnB,OAAd,EAA4Cx5B,IAA5C,CAAlB,CAAjB;AACD,KAFD,CAEE,OAAOvJ,GAAP,EAAY;AACZwH,MAAAA,OAAK,CAAE,kBAAiB5C,IAAK,yBAAwB5E,GAAG,CAACwE,OAAJ,IAAeqU,wBAAI,CAACC,OAAL,CAAa9Y,GAAb,CAAkB,EAAjF,CAAL;AACD;AACF;;AA3NkC,CAArC;;ACVA,MAAMwH,OAAK,GAAGD,yBAAgB,CAAC,gCAAD,CAA9B;AAQA,mBAAc,GAAG,MAAMy7B,aAAN,SAA4B9B,eAA5B,CAA0C;AACzD5Z,EAAAA,QAAQ,GAAI;AACV,WAAO,MAAMA,QAAN,GAAiBxnB,IAAjB,CAAsB,MAAM;AACjC,WAAK2nB,uBAAL,CAA6B5oB,YAAY,CAAChI,aAA1C;AACD,KAFM,CAAP;AAGD;;AAEDgJ,EAAAA,KAAK,GAAI;AACP,SAAKojC,YAAL,GAAoB,KAAKC,MAAL,EAApB;AAEAhjC,IAAAA,yBAAK,CAAC4+B,MAAN,CAAa,CACVqE,YAAD,IAAkB;AAChB,YAAMtjC,KAAN,GAAcC,IAAd,CAAmB,MAAMqjC,YAAY,EAArC,EAAyCpjC,KAAzC,CAA+CojC,YAA/C;AACD,KAHU,EAKVC,cAAD,IAAoB;AAClB,WAAKC,MAAL,GAAcC,0BAAE,CAAC,KAAKn7B,IAAL,CAAUtJ,YAAY,CAAChI,aAAvB,CAAD,CAAhB;AAEA,WAAKwsC,MAAL,CAAYzE,EAAZ,CAAe,SAAf,EAA0B,MAAM;AAC9Bp3B,QAAAA,OAAK,CAAC,WAAD,CAAL;AACA,aAAK67B,MAAL,CAAYjnB,IAAZ,CAAiB,gBAAjB,EAAmC;AAAEmnB,UAAAA,QAAQ,EAAE,KAAKp7B,IAAL,CAAUtJ,YAAY,CAAC/H,cAAvB;AAAZ,SAAnC;AACD,OAHD;AAIA,WAAKusC,MAAL,CAAYzE,EAAZ,CAAe,eAAf,EAAiC5+B,GAAD,IAAS;AACvCwH,QAAAA,OAAK,CAAE,iBAAgBxH,GAAG,CAACwE,OAAQ,EAA9B,CAAL;AACD,OAFD;AAGA,WAAK6+B,MAAL,CAAYzE,EAAZ,CAAe,iBAAf,EAAmCmC,OAAD,IAAa;AAC7Cv5B,QAAAA,OAAK,CAAE,mBAAkBqR,wBAAI,CAACC,OAAL,CAAaioB,OAAb,CAAsB,EAA1C,CAAL;AACD,OAFD;AAGA,WAAKsC,MAAL,CAAYzE,EAAZ,CAAe,OAAf,EAAyB5+B,GAAD,IAAS;AAC/BwH,QAAAA,OAAK,CAAE,SAAQxH,GAAG,CAACwE,OAAQ,EAAtB,CAAL;AACD,OAFD;AAGA,WAAK6+B,MAAL,CAAYzE,EAAZ,CAAe,eAAf,EAAgC,MAAM;AACpCp3B,QAAAA,OAAK,CAAC,eAAD,CAAL;AACA,aAAK67B,MAAL,CAAYjnB,IAAZ,CAAiBonB,QAAQ,CAACxD,eAA1B,EAA2C,KAAK73B,IAAhD,EAAsD,KAAKg5B,IAAL,CAAU3D,OAAhE,EAAyE,KAAK4D,IAA9E;AACD,OAHD;AAIA,WAAKiC,MAAL,CAAYzE,EAAZ,CAAe,cAAf,EAAgC5+B,GAAD,IAAS;AACtCwH,QAAAA,OAAK,CAAE,gBAAexH,GAAG,CAACwE,OAAQ,EAA7B,CAAL;AACA4+B,QAAAA,cAAc,CAAE,+BAA8BpjC,GAAG,CAACwE,OAAQ,EAA5C,CAAd;AACD,OAHD;AAIA,WAAK6+B,MAAL,CAAYzE,EAAZ,CAAeviB,MAAM,CAAChY,oBAAtB,EAA6CrE,GAAD,IAAS;AACnDwH,QAAAA,OAAK,CAAE,wBAAuBxH,GAAG,CAACwE,OAAQ,EAArC,CAAL;AACA4+B,QAAAA,cAAc,CAAE,6BAA4BpjC,GAAG,CAACwE,OAAQ,EAA1C,CAAd;AACD,OAHD;AAIA,WAAK6+B,MAAL,CAAYzE,EAAZ,CAAeviB,MAAM,CAAClZ,eAAtB,EAAuC,MAAM;AAC3CqE,QAAAA,OAAK,CAAC6U,MAAM,CAAClZ,eAAR,CAAL;AACAigC,QAAAA,cAAc;AACf,OAHD;AAIA,WAAKC,MAAL,CAAYzE,EAAZ,CAAeviB,MAAM,CAACjZ,qBAAtB,EAA8CpD,GAAD,IAAS;AACpDwH,QAAAA,OAAK,CAAE,yBAAwBxH,GAAG,CAACwE,OAAQ,EAAtC,CAAL;AACA4+B,QAAAA,cAAc,CAAE,sBAAqBpjC,GAAG,CAACwE,OAAQ,EAAnC,CAAd;AACD,OAHD;AAKA,WAAK6+B,MAAL,CAAYzE,EAAZ,CAAeviB,MAAM,CAAC/Y,iBAAtB,EAAyC,MAAM;AAC7CkE,QAAAA,OAAK,CAAC6U,MAAM,CAAC/Y,iBAAR,CAAL;AACA,aAAK6Y,YAAL,CAAkBC,IAAlB,CAAuBC,MAAM,CAAC/Y,iBAA9B,EAAiD,IAAjD;;AACA,YAAI,KAAKmgC,YAAT,EAAuB;AACrB,eAAKA,YAAL,CAAkB9jC,OAAlB,CAA0B,IAA1B;AACA,eAAK8jC,YAAL,GAAoB,IAApB;AACD;AACF,OAPD;AAQA,WAAKJ,MAAL,CAAYzE,EAAZ,CAAeviB,MAAM,CAAC9Y,qBAAtB,EAA8CvD,GAAD,IAAS;AACpDwH,QAAAA,OAAK,CAAE,yBAAwBxH,GAAG,CAACwE,OAAQ,EAAtC,CAAL;AACA,aAAK2X,YAAL,CAAkBC,IAAlB,CAAuBC,MAAM,CAAC9Y,qBAA9B,EAAqD,IAArD,EAA2DvD,GAA3D;;AACA,YAAI,KAAKyjC,YAAT,EAAuB;AACrB,eAAKA,YAAL,CAAkB7jC,MAAlB,CAA0B,sBAAqBI,GAAG,CAACwE,OAAQ,EAA3D;AACA,eAAKi/B,YAAL,GAAoB,IAApB;AACD;AACF,OAPD;AASA,WAAKJ,MAAL,CAAYzE,EAAZ,CAAeviB,MAAM,CAACpY,uBAAtB,EAAgDtB,MAAD,IAAY;AACzD6E,QAAAA,OAAK,CAAE,2BAA0BqR,wBAAI,CAACC,OAAL,CAAanW,MAAb,CAAqB,EAAjD,CAAL;;AACA,aAAKmgC,aAAL,CAAmB,IAAIvzB,mBAAJ,CAAsB5M,MAAtB,CAAnB;AACD,OAHD;AAKA,WAAK0gC,MAAL,CAAYzE,EAAZ,CAAeviB,MAAM,CAAC5Y,iBAAtB,EAAyC,MAAM;AAC7C+D,QAAAA,OAAK,CAAC6U,MAAM,CAAC5Y,iBAAR,CAAL;AACA,aAAK0Y,YAAL,CAAkBC,IAAlB,CAAuBC,MAAM,CAAC5Y,iBAA9B,EAAiD,IAAjD;;AACA,YAAI,KAAKigC,WAAT,EAAsB;AACpB,eAAKA,WAAL,CAAiB/jC,OAAjB,CAAyB,IAAzB;AACA,eAAK+jC,WAAL,GAAmB,IAAnB;AACD;AACF,OAPD;AAQA,WAAKL,MAAL,CAAYzE,EAAZ,CAAeviB,MAAM,CAAC3Y,oBAAtB,EAA6C1D,GAAD,IAAS;AACnDwH,QAAAA,OAAK,CAAE,wBAAuBxH,GAAG,CAACwE,OAAQ,EAArC,CAAL;AACA,aAAK2X,YAAL,CAAkBC,IAAlB,CAAuBC,MAAM,CAAC3Y,oBAA9B,EAAoD,IAApD,EAA0D1D,GAA1D;;AACA,YAAI,KAAK0jC,WAAT,EAAsB;AACpB,eAAKA,WAAL,CAAiB9jC,MAAjB,CAAyB,qBAAoBI,GAAG,CAACwE,OAAQ,EAAzD;AACA,eAAKk/B,WAAL,GAAmB,IAAnB;AACD;AACF,OAPD;AASA,WAAKL,MAAL,CAAYzE,EAAZ,CAAeviB,MAAM,CAACzY,iBAAtB,EAAyC,MAAM;AAC7C4D,QAAAA,OAAK,CAAC6U,MAAM,CAACzY,iBAAR,CAAL;AACA,aAAKuY,YAAL,CAAkBC,IAAlB,CAAuBC,MAAM,CAACzY,iBAA9B,EAAiD,IAAjD;;AACA,YAAI,KAAK+/B,YAAT,EAAuB;AACrB,eAAKA,YAAL,CAAkBhkC,OAAlB,CAA0B,IAA1B;AACA,eAAKgkC,YAAL,GAAoB,IAApB;AACD;;AACD,aAAKN,MAAL,CAAYO,UAAZ;AACA,aAAKP,MAAL,GAAc,IAAd;AACD,OATD;AAUA,WAAKA,MAAL,CAAYzE,EAAZ,CAAeviB,MAAM,CAACxY,qBAAtB,EAA8C7D,GAAD,IAAS;AACpDwH,QAAAA,OAAK,CAAE,yBAAwBxH,GAAG,CAACwE,OAAQ,EAAtC,CAAL;AACA,aAAK2X,YAAL,CAAkBC,IAAlB,CAAuBC,MAAM,CAACxY,qBAA9B,EAAqD,IAArD,EAA2D7D,GAA3D;;AACA,YAAI,KAAK2jC,YAAT,EAAuB;AACrB,eAAKA,YAAL,CAAkB/jC,MAAlB,CAA0B,sBAAqBI,GAAG,CAACwE,OAAQ,EAA3D;AACA,eAAKm/B,YAAL,GAAoB,IAApB;AACD;;AACD,aAAKN,MAAL,CAAYO,UAAZ;AACA,aAAKP,MAAL,GAAc,IAAd;AACD,OATD;AAUD,KArGU,CAAb,EAsGIrjC,GAAD,IAAS;AACV,UAAIA,GAAJ,EAAS;AACP,aAAKijC,YAAL,CAAkBrjC,MAAlB,CAAyB,IAAI2E,KAAJ,CAAW,iCAAgCvE,GAAG,CAACwE,OAAQ,EAAvD,CAAzB;AACD,OAFD,MAEO;AACL,aAAKy+B,YAAL,CAAkBtjC,OAAlB,CAA0B,IAA1B;AACD;;AACD,WAAKsjC,YAAL,GAAoB,IAApB;AACD,KA7GD;AA8GA,WAAO,KAAKA,YAAL,CAAkBtR,OAAzB;AACD;;AAEDpxB,EAAAA,KAAK,GAAI;AACP,SAAK4b,YAAL,CAAkBC,IAAlB,CAAuBC,MAAM,CAAChZ,kBAA9B,EAAkD,IAAlD;AAEA,WAAO,MAAM9C,KAAN,GAAcT,IAAd,CAAmB,MAAM;AAC9B,UAAI,KAAK2jC,YAAT,EAAuB,OAAO/jC,OAAO,CAACE,MAAR,CAAe,IAAI2E,KAAJ,CAAU,kBAAV,CAAf,CAAP;;AACvB,UAAI,KAAK8+B,MAAT,EAAiB;AACf,aAAKI,YAAL,GAAoB,KAAKP,MAAL,EAApB;AACA,aAAKG,MAAL,CAAYjnB,IAAZ,CAAiBonB,QAAQ,CAACvD,eAA1B;AAEA,eAAO,KAAKwD,YAAL,CAAkB9R,OAAzB;AACD,OALD,MAKO;AACL,aAAKxV,YAAL,CAAkBC,IAAlB,CAAuBC,MAAM,CAAC9Y,qBAA9B,EAAqD,IAArD,EAA2D,yBAA3D;AACA,eAAO7D,OAAO,CAACE,MAAR,CAAe,IAAI2E,KAAJ,CAAU,yBAAV,CAAf,CAAP;AACD;AACF,KAXM,CAAP;AAYD;;AAED49B,EAAAA,YAAY,CAAEprB,OAAF,EAAW;AACrB,WAAO,IAAIrX,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,UAAI,KAAKyjC,MAAT,EAAiB;AACf,aAAKA,MAAL,CAAYjnB,IAAZ,CAAiBonB,QAAQ,CAACtD,SAA1B,EAAqCnpB,OAArC;AACA,aAAKoF,YAAL,CAAkBC,IAAlB,CAAuBC,MAAM,CAACtY,iBAA9B,EAAiD,IAAjD,EAAuDgT,OAAvD;AACApX,QAAAA,OAAO,CAAC,IAAD,CAAP;AACD,OAJD,MAIO;AACL,aAAKwc,YAAL,CAAkBC,IAAlB,CAAuBC,MAAM,CAACrY,uBAA9B,EAAuD,IAAvD,EAA6D,yBAA7D;AACApE,QAAAA,MAAM,CAAC,IAAI2E,KAAJ,CAAU,yBAAV,CAAD,CAAN;AACD;AACF,KATM,CAAP;AAUD;;AAEDxC,EAAAA,IAAI,GAAI;AACN,SAAKoa,YAAL,CAAkBC,IAAlB,CAAuBC,MAAM,CAAC7Y,kBAA9B,EAAkD,IAAlD;AAEA,WAAO,MAAMzB,IAAN,GAAajC,IAAb,CAAkB,MAAM;AAC7B,UAAI,KAAK4jC,WAAT,EAAsB,OAAOhkC,OAAO,CAACE,MAAR,CAAe,IAAI2E,KAAJ,CAAU,kBAAV,CAAf,CAAP;;AACtB,UAAI,KAAK8+B,MAAT,EAAiB;AACf,aAAKK,WAAL,GAAmB,KAAKR,MAAL,EAAnB;AACA,aAAKG,MAAL,CAAYjnB,IAAZ,CAAiBonB,QAAQ,CAACrD,cAA1B;AAEA,eAAO,KAAKuD,WAAL,CAAiB/R,OAAxB;AACD,OALD,MAKO;AACL,eAAOjyB,OAAO,CAACC,OAAR,CAAgB,IAAhB,CAAP;AACD;AACF,KAVM,CAAP;AAWD;;AAEDoD,EAAAA,KAAK,GAAI;AACP,SAAKoZ,YAAL,CAAkBC,IAAlB,CAAuBC,MAAM,CAAC1Y,kBAA9B,EAAkD,IAAlD;AAEA,WAAO,MAAMZ,KAAN,GAAcjD,IAAd,CAAmB,MAAM;AAC9B,UAAI,KAAK6jC,YAAT,EAAuB,OAAOjkC,OAAO,CAACE,MAAR,CAAe,IAAI2E,KAAJ,CAAU,kBAAV,CAAf,CAAP;;AACvB,UAAI,KAAK8+B,MAAT,EAAiB;AACf,aAAKM,YAAL,GAAoB,KAAKT,MAAL,EAApB;AACA,aAAKG,MAAL,CAAYjnB,IAAZ,CAAiBonB,QAAQ,CAACpD,eAA1B;AAEA,eAAO,KAAKuD,YAAL,CAAkBhS,OAAzB;AACD,OALD,MAKO;AACL,eAAOjyB,OAAO,CAACC,OAAR,CAAgB,IAAhB,CAAP;AACD;AACF,KAVM,CAAP;AAWD;;AAEDkkC,EAAAA,mBAAmB,CAAEC,MAAF,EAAU;AAC3B,QAAI,KAAK37B,IAAL,CAAU27B,MAAV,CAAJ,EAAuB;AACrB,UAAI,CAAC5hC,0BAAC,CAACiI,QAAF,CAAW,KAAKhC,IAAL,CAAU27B,MAAV,CAAX,CAAL,EAAoC;AAClC,cAAM,IAAIv/B,KAAJ,CAAW,eAAcu/B,MAAO,kCAAhC,CAAN;AACD;AACF;AACF;;AAED5B,EAAAA,cAAc,CAAE4B,MAAF,EAAU;AACtB,WAAOpkC,OAAO,CAACC,OAAR,EAAP;AACD;;AAEDujC,EAAAA,MAAM,GAAI;AACR,UAAMa,QAAQ,GAAG;AACfpS,MAAAA,OAAO,EAAE,IADM;AAEfhyB,MAAAA,OAAO,EAAE,IAFM;AAGfC,MAAAA,MAAM,EAAE;AAHO,KAAjB;AAKAmkC,IAAAA,QAAQ,CAACpS,OAAT,GAAmB,IAAIjyB,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAClDmkC,MAAAA,QAAQ,CAACpkC,OAAT,GAAmBA,OAAnB;AACAokC,MAAAA,QAAQ,CAACnkC,MAAT,GAAkBA,MAAlB;AACD,KAHkB,CAAnB;AAIA,WAAOmkC,QAAP;AACD;;AAhNwD,CAA3D;;ACRA,wBAAc,GAAG,MAAMC,kBAAN,SAAiC9C,eAAjC,CAA+C;AAC9DiB,EAAAA,YAAY,CAAEprB,OAAF,EAAW;AACrB,SAAKoF,YAAL,CAAkBC,IAAlB,CAAuBC,MAAM,CAACtY,iBAA9B,EAAiD,IAAjD,EAAuDgT,OAAvD;AACA,WAAOrX,OAAO,CAACC,OAAR,CAAgB,IAAhB,CAAP;AACD;;AAEDskC,EAAAA,aAAa,CAAEthC,MAAF,EAAU;AACrB,SAAKmgC,aAAL,CAAmB,IAAIvzB,mBAAJ,CAAsB5M,MAAtB,CAAnB;AACD;;AAR6D,CAAhE;;ACDA,MAAM6E,OAAK,GAAGD,yBAAgB,CAAC,2BAAD,CAA9B;;AAEA,MAAM28B,iBAAiB,GAAG,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAC7C,QAAMC,KAAK,GAAG,IAAIC,2BAAJ,CAAUH,QAAV,CAAd;AACAE,EAAAA,KAAK,CAACzF,EAAN,CAAS,SAAT,EAAoB,MAAM;AACxBp3B,IAAAA,OAAK,CAAE,sBAAqB5B,IAAI,CAACC,SAAL,CAAes+B,QAAQ,IAAI,SAA3B,CAAsC,EAA7D,CAAL;AACD,GAFD;AAGA,SAAQI,KAAD,IAAW;AAChB,QAAI;AACF/8B,MAAAA,OAAK,CAAC,oBAAD,CAAL;AACAA,MAAAA,OAAK,CAAC5B,IAAI,CAACC,SAAL,CAAe0+B,KAAf,EAAsB,IAAtB,EAA4B,CAA5B,CAAD,CAAL;AAEAF,MAAAA,KAAK,CAACG,OAAN,CAAcJ,KAAd,EAAqBx+B,IAAI,CAACC,SAAL,CAAe0+B,KAAf,CAArB;AACD,KALD,CAKE,OAAOvkC,GAAP,EAAY;AACZwH,MAAAA,OAAK,CAAC,iCAAD,CAAL;AACAA,MAAAA,OAAK,CAACxH,GAAD,CAAL;AACD;AACF,GAVD;AAWD,CAhBD;;AAkBA,MAAMykC,cAAc,GAAG,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,QAAP;AAAiBC,EAAAA,UAAjB;AAA6BC,EAAAA;AAA7B,CAAD,KAAiD;AACtE,MAAIF,QAAQ,IAAI,CAACA,QAAQ,CAAC3hB,QAAT,CAAkB,GAAlB,CAAjB,EAAyC2hB,QAAQ,GAAGA,QAAQ,GAAG,GAAtB;;AAEzC,QAAMtuB,OAAO,GAAG,CAACyuB,GAAD,EAAMC,GAAN,KAAc;AAC5B,QAAID,GAAG,CAACziB,IAAR,EAAc;AACZwiB,MAAAA,YAAY,CAAC;AACXG,QAAAA,WAAW,EAAEF,GAAG,CAACE,WADN;AAEXC,QAAAA,cAAc,EAAEH,GAAG,CAACI,MAFT;AAGX7iB,QAAAA,IAAI,EAAEyiB,GAAG,CAACziB;AAHC,OAAD,CAAZ;AAKA0iB,MAAAA,GAAG,CAAC/Q,MAAJ,CAAW,GAAX,EAAgBjS,IAAhB,CAAqB,EAArB,EAAyBojB,GAAzB;AACD,KAPD,MAOO;AACLJ,MAAAA,GAAG,CAAC/Q,MAAJ,CAAW,GAAX,EAAgBoR,YAAhB,CAA6B,kBAA7B;AACD;AACF,GAXD;;AAYA,MAAIT,QAAJ,EAAc;AACZD,IAAAA,GAAG,CAACxQ,GAAJ,CAAQyQ,QAAR,EAAkB,IAAIC,UAAU,IAAI,EAAlB,CAAlB,EAAyCvuB,OAAzC;AACAquB,IAAAA,GAAG,CAACxQ,GAAJ,CAAQyQ,QAAQ,CAAC3hB,QAAT,CAAkB,GAAlB,IAAyB2hB,QAAQ,GAAG,GAApC,GAA0CA,QAAQ,GAAG,IAA7D,EAAmE,IAAIC,UAAU,IAAI,EAAlB,CAAnE,EAA0FvuB,OAA1F;AACD,GAHD,MAGO;AACLquB,IAAAA,GAAG,CAACxQ,GAAJ,CAAQ,IAAI0Q,UAAU,IAAI,EAAlB,CAAR,EAA+BvuB,OAA/B;AACD;AACF,CArBD;;AAuBA,MAAMgvB,YAAU,GAAG,OAAO;AAAEC,EAAAA,IAAF;AAAQX,EAAAA,QAAR;AAAkBE,EAAAA;AAAlB,CAAP,KAA4C;AAC7D,SAAO,IAAInlC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,UAAM8kC,GAAG,GAAGa,2BAAO,EAAnB;AAEAd,IAAAA,cAAc,CAAC;AACbC,MAAAA,GADa;AAEbE,MAAAA,UAAU,EAAE,CACVY,8BAAU,CAACzjB,IAAX,EADU,EAEVyjB,8BAAU,CAACC,UAAX,CAAsB;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAtB,CAFU,CAFC;AAMbf,MAAAA,QAAQ,EAAEA,QAAQ,IAAI,GANT;AAObE,MAAAA;AAPa,KAAD,CAAd;AAUA,UAAMc,KAAK,GAAGjB,GAAG,CAACkB,MAAJ,CAAWN,IAAX,EAAiB,MAAM;AACnCO,MAAAA,OAAO,CAACC,GAAR,CAAa,sDAAqDR,IAAK,EAAvE;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAa,kEAAiER,IAAK,GAAEX,QAAS,EAA9F;AACAhlC,MAAAA,OAAO,CAACgmC,KAAD,CAAP;AACD,KAJa,CAAd;AAKD,GAlBM,CAAP;AAmBD,CApBD;;AAsBA,SAAc,GAAG;AACfzB,EAAAA,iBADe;AAEfO,EAAAA,cAFe;AAGfY,cAAAA;AAHe,CAAjB;;;;;AC9DA,MAAM;AAAEU,EAAAA,EAAE,EAAEC;AAAN,IAAiBz+B,wBAAvB;AAGA,MAAMC,OAAK,GAAGC,yBAAgB,CAAC,6BAAD,CAA9B;AAEA,MAAM;AAAE49B,EAAAA;AAAF,IAAiB39B,KAAvB;AAEA,MAAM;AAAEu+B,EAAAA;AAAF,IAAsBt+B,iBAA5B;AAEA,MAAMuqB,QAAQ,GAAGpe,UAAyB,CAACjV,YAA3C;AACA,MAAM;AAAEwY,EAAAA;AAAF,IAA0BoP,eAAhC;AACA,MAAM;AAAE1C,EAAAA,OAAF;AAAWF,EAAAA;AAAX,IAA2B8Q,SAAjC;AACA,MAAM;AAAEpS,EAAAA;AAAF,IAAuB2jB,KAA7B;;AAEAC,4BAAQ,CAACpX,MAAT,GAAkB5e,CAAC,IAAIA,CAAvB;;AAEA,yBAAc,GAAG,MAAMi2B,mBAAN,CAA0B;AACzCjnC,EAAAA,WAAW,CAAE;AAAEknC,IAAAA,YAAF;AAAgBl+B,IAAAA;AAAhB,GAAF,EAA0B;AACnC,SAAKk+B,YAAL,GAAoBA,YAApB;AACA,SAAKl+B,IAAL,GAAY7F,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB2vB,QAAlB,EAA4B/pB,IAA5B,CAAZ;AACA,SAAKm+B,cAAL,GAAsB,KAAtB;AACA,SAAKC,UAAL,GAAkB,KAAKp+B,IAAL,CAAUtJ,YAAY,CAACvD,sBAAvB,KAAkD,iCAApE;;AAEA,QAAI,KAAK6M,IAAL,CAAUtJ,YAAY,CAACtD,kDAAvB,CAAJ,EAAgF;AAC9E,YAAMirC,eAAe,GAAG,KAAKr+B,IAAL,CAAUtJ,YAAY,CAACrD,mCAAvB,KAA+D,GAAvF;AACA,WAAKirC,aAAL,GAAqB,EAArB;AACA,WAAKC,sCAAL,GAA8CxkC,0BAAC,CAACykC,QAAF,CAAW,MAAM;AAC7D,cAAMC,MAAM,GAAG,CAAC,GAAG,KAAKH,aAAT,CAAf;AACA,aAAKA,aAAL,GAAqB,EAArB;;AACA,cAAM3vB,QAAQ,GAAG,KAAK+vB,gBAAL,CAAsB,KAAK1+B,IAAL,CAAUtJ,YAAY,CAACtD,kDAAvB,CAAtB,EAAkG,KAAlG,CAAjB;;AACA,cAAMurC,YAAY,GAAG5kC,0BAAC,CAACu4B,MAAF,CAASmM,MAAT,EAAkBrC,KAAD,IAAW;AAC/C,gBAAMwC,EAAE,GAAG9vB,4BAAE,CAACC,KAAH,CAASqtB,KAAT,EAAgBztB,QAAhB,CAAX;AACA,iBAAOiwB,EAAE,CAAC,CAAD,CAAT;AACD,SAHoB,CAArB;;AAIA,aAAK,MAAMxC,KAAX,IAAoBuC,YAApB,EAAkC;AAChC3pB,UAAAA,UAAU,CAAC,MAAM,KAAK6pB,iBAAL,CAAuBzC,KAAK,CAACliB,IAA7B,EAAmC,IAAnC,EAAyC,CAAC,CAAC,KAAKla,IAAL,CAAUtJ,YAAY,CAACxD,iCAAvB,CAA3C,CAAP,EAA8G,CAA9G,CAAV;AACD;AACF,OAX6C,EAW3CmrC,eAX2C,CAA9C;AAYD;AACF;;AAEDlf,EAAAA,QAAQ,GAAI;AACV,QAAI,CAAC,KAAKnf,IAAL,CAAUtJ,YAAY,CAAC5F,cAAvB,CAAL,EAA6C,MAAM,IAAIsL,KAAJ,CAAU,oCAAV,CAAN;AAC7C,QAAI,CAAC,KAAK4D,IAAL,CAAUtJ,YAAY,CAACxF,iBAAvB,CAAD,IAA8C,CAAC,KAAK8O,IAAL,CAAUtJ,YAAY,CAACvF,eAAvB,CAAnD,EAA4F,MAAM,IAAIiL,KAAJ,CAAU,uDAAV,CAAN;AAC5F,QAAIrC,0BAAC,CAACmI,IAAF,CAAO,KAAKlC,IAAZ,EAAkB+R,SAAlB,CAA4BuL,CAAC,IAAIA,CAAC,CAAC5U,UAAF,CAAahS,YAAY,CAACrE,4BAA1B,CAAjC,IAA4F,CAA5F,IAAiG,CAAC,KAAK2N,IAAL,CAAUtJ,YAAY,CAACpE,wBAAvB,CAAtG,EAAwJ,MAAM,IAAI8J,KAAJ,CAAU,8EAAV,CAAN;;AACxJ,QAAI,KAAK4D,IAAL,CAAUtJ,YAAY,CAACjG,uBAAvB,CAAJ,EAAqD;AACnDsJ,MAAAA,0BAAC,CAACgI,QAAF,CAAW,KAAK/B,IAAL,CAAUtJ,YAAY,CAACjG,uBAAvB,CAAX,KAA+DgN,IAAI,CAACkL,KAAL,CAAW,KAAK3I,IAAL,CAAUtJ,YAAY,CAACjG,uBAAvB,CAAX,CAA/D;AACD;;AACD,QAAI,KAAKuP,IAAL,CAAUtJ,YAAY,CAAChE,mCAAvB,MAAgE,OAAhE,IAA2E,KAAKsN,IAAL,CAAUtJ,YAAY,CAAChE,mCAAvB,MAAgE,SAA/I,EAA0J,MAAM,IAAI0J,KAAJ,CAAU,8EAAV,CAAN;AAE1J,SAAK0iC,SAAL,GAAiBljB,OAAO,CAAC,KAAK5b,IAAN,EAAY,KAAKA,IAAL,CAAUtJ,YAAY,CAACnF,qBAAvB,CAAZ,CAAxB;AACA,SAAKwtC,QAAL,GAAgBnjB,OAAO,CAAC,KAAK5b,IAAN,EAAY,KAAKA,IAAL,CAAUtJ,YAAY,CAAClF,oBAAvB,CAAZ,CAAvB;AACA,SAAKwtC,WAAL,GAAmBpjB,OAAO,CAAC,KAAK5b,IAAN,EAAY,KAAKA,IAAL,CAAUtJ,YAAY,CAACjF,uBAAvB,CAAZ,CAA1B;AACA,SAAKwtC,UAAL,GAAkBrjB,OAAO,CAAC,KAAK5b,IAAN,EAAY,KAAKA,IAAL,CAAUtJ,YAAY,CAAChF,sBAAvB,CAAZ,CAAzB;AACA,SAAKwtC,YAAL,GAAoBtjB,OAAO,CAAC,KAAK5b,IAAN,EAAY,KAAKA,IAAL,CAAUtJ,YAAY,CAACpE,wBAAvB,CAAZ,CAA3B;AACA,SAAK6sC,eAAL,GAAuBvjB,OAAO,CAAC,KAAK5b,IAAN,EAAY,KAAKA,IAAL,CAAUtJ,YAAY,CAAC1E,4BAAvB,CAAZ,CAA9B;AAEA,SAAKotC,YAAL,GAAoB,EAApB;;AACA,QAAI,KAAKp/B,IAAL,CAAUtJ,YAAY,CAACxH,4BAAvB,CAAJ,EAA0D;AACxD,WAAKkwC,YAAL,CAAkBC,eAAlB,GAAoCzjB,OAAO,CAAC,KAAK5b,IAAN,EAAY,KAAKA,IAAL,CAAUtJ,YAAY,CAACxH,4BAAvB,CAAZ,CAA3C;AACD;;AACD,QAAI,KAAK8Q,IAAL,CAAUtJ,YAAY,CAAC9G,6BAAvB,CAAJ,EAA2D;AACzD,WAAKwvC,YAAL,CAAkBE,gBAAlB,GAAqC1jB,OAAO,CAAC,KAAK5b,IAAN,EAAY,KAAKA,IAAL,CAAUtJ,YAAY,CAAC9G,6BAAvB,CAAZ,CAA5C;AACD;;AACD,QAAI,KAAKoQ,IAAL,CAAUtJ,YAAY,CAACpG,4BAAvB,CAAJ,EAA0D;AACxD,WAAK8uC,YAAL,CAAkBG,eAAlB,GAAoC3jB,OAAO,CAAC,KAAK5b,IAAN,EAAY,KAAKA,IAAL,CAAUtJ,YAAY,CAACpG,4BAAvB,CAAZ,CAA3C;AACD;AACF;;AAEDoH,EAAAA,KAAK,GAAI;AACP,WAAO,KAAK8nC,aAAL,EAAP;AACD;;AAEDpnC,EAAAA,KAAK,GAAI;AACP,WAAO,IAAIb,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCM,MAAAA,yBAAK,CAAC4+B,MAAN,CAAa,CACV8I,mBAAD,IAAyB;AACvB,aAAKC,IAAL,GAAY;AACVvoC,UAAAA,SAAS,EAAE,IADD;AAEVmF,UAAAA,OAAO,EAAE,EAFC;AAGVxC,UAAAA,GAAG,EAAE,EAHK;AAIV6lC,UAAAA,MAAM,EAAE;AACNrY,YAAAA,cAAc,EAAE,IADV;AAENsY,YAAAA,MAAM,EAAE;AAFF,WAJE;;;;;;;AAcVC,UAAAA,GAAG,EAAE9lC,0BAAC,CAACoV,SAAF,CAAYpV,0BAAC,CAAC+lC,OAAF,CAAU5wB,mBAAV,EAA+B,CAACvI,KAAD,EAAQvE,GAAR,KAAgBA,GAAG,CAACkO,SAAJ,CAAc,CAAd,CAA/C,CAAZ,EAA+EyvB,UAAD,IAAgB;AACjG,kBAAMC,QAAQ,GAAG7lC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAK4F,IAAvB,EAA6B;AAAE,eAACtJ,YAAY,CAACR,qBAAd,GAAsC;AAAxC,aAA7B,CAAjB;AACA,mBAAO6pC,UAAU,CAACxxB,iBAAX,GAA+B,MAAM;AAAE,qBAAO,CAAC7T,IAAD,EAAOulC,MAAP,KAAkBF,UAAU,CAAC7xB,OAAX,CAAmB8xB,QAAnB,EAA6BC,MAAM,CAACvlC,IAAD,CAAnC,CAAzB;AAAqE,aAA5G,GAA+G,MAAMqlC,UAAU,CAAC7xB,OAAX,CAAmB8xB,QAAnB,CAA5H;AACD,WAHI;AAdK,SAAZ;;AAmBA,aAAKN,IAAL,CAAUG,GAAV,CAAcK,OAAd,GAAwB,MAAM,CAAC1sB,GAAD,EAAMysB,MAAN,KAAiB;AAC7C,iBAAO7lB,gBAAgB,CAAC6lB,MAAM,CAACzsB,GAAD,CAAP,CAAvB;AACD,SAFD;;AAIA,YAAI,KAAKxT,IAAL,CAAUtJ,YAAY,CAAC/D,mCAAvB,CAAJ,EAAiE;AAC/D,eAAK+sC,IAAL,CAAUC,MAAV,CAAiBrY,cAAjB,GAAkC,KAAK6Y,gBAAL,CAAsBzpC,YAAY,CAAC/D,mCAAnC,EAAwE,KAAxE,CAAlC;AACD,SAFD,MAEO;AACL,eAAK+sC,IAAL,CAAUC,MAAV,CAAiBrY,cAAjB,GAAkCuW,MAAM,EAAxC;AACD;;AAED,YAAI,KAAK79B,IAAL,CAAUtJ,YAAY,CAACjG,uBAAvB,CAAJ,EAAqD;AACnD,cAAI;AACF,iBAAKivC,IAAL,CAAUpjC,OAAV,GAAoBvC,0BAAC,CAACgI,QAAF,CAAW,KAAK/B,IAAL,CAAUtJ,YAAY,CAACjG,uBAAvB,CAAX,IAA8DsJ,0BAAC,CAACkN,SAAF,CAAY,KAAKjH,IAAL,CAAUtJ,YAAY,CAACjG,uBAAvB,CAAZ,CAA9D,GAA6HgN,IAAI,CAACkL,KAAL,CAAW,KAAK3I,IAAL,CAAUtJ,YAAY,CAACjG,uBAAvB,CAAX,CAAjJ;AACD,WAFD,CAEE,OAAOoH,GAAP,EAAY;AACZ4nC,YAAAA,mBAAmB,CAAE,6DAA4D5nC,GAAG,CAACwE,OAAQ,GAA1E,CAAnB;AACD;AACF;;AACDojC,QAAAA,mBAAmB;AACpB,OAvCU,EAyCVW,iBAAD,IAAuB;AACrB1kB,QAAAA,WAAW,CAAC,KAAK1b,IAAN,EAAY,KAAK8+B,SAAjB,EAA4B,KAAKY,IAAjC,CAAX,CAAkD/nC,IAAlD,CAAuD,MAAMyoC,iBAAiB,EAA9E,EAAkFxoC,KAAlF,CAAwFwoC,iBAAxF;AACD,OA3CU,EA6CVC,uBAAD,IAA6B;AAC3B,aAAKC,iBAAL,GACG3oC,IADH,CACQ,MAAM0oC,uBAAuB,EADrC,EAEGzoC,KAFH,CAESyoC,uBAFT;AAGD,OAjDU,EAmDVE,oBAAD,IAA0B;AACxB,aAAKC,aAAL,GACG7oC,IADH,CACQ,MAAM4oC,oBAAoB,EADlC,EAEG3oC,KAFH,CAES2oC,oBAFT;AAGD,OAvDU,EAyDVE,YAAD,IAAkB;AAChB,YAAI,KAAKzgC,IAAL,CAAUtJ,YAAY,CAAC7H,mBAAvB,CAAJ,EAAiD;AAC/C,eAAK6xC,SAAL,CAAe,iBAAf,EACG/oC,IADH,CACQuiB,IAAI,IAAI;AACZ,gBAAI,KAAKla,IAAL,CAAUtJ,YAAY,CAACrH,8BAAvB,KAA0D,KAAK2Q,IAAL,CAAUtJ,YAAY,CAACpH,gCAAvB,CAA9D,EAAwH;AACtH,qBAAO,KAAKqxC,kBAAL,CAAwBzmB,IAAxB,EACJviB,IADI,CACCuiB,IAAI,IAAI;AACZ,oBAAIA,IAAJ,EAAU;AACR7a,kBAAAA,OAAK,CAAE,YAAW,KAAKW,IAAL,CAAUtJ,YAAY,CAAC7H,mBAAvB,CAA4C,4BAA2BkvC,KAAW,CAAC5jB,iBAAZ,CAA8BD,IAA9B,CAAoC,EAAxH,CAAL;AACA,yBAAO,KAAK2kB,iBAAL,CAAuB3kB,IAAvB,EAA6B,CAAC,CAAC,KAAKla,IAAL,CAAUtJ,YAAY,CAACpH,gCAAvB,CAA/B,EAAyF,CAAC,CAAC,KAAK0Q,IAAL,CAAUtJ,YAAY,CAACrH,8BAAvB,CAA3F,CAAP;AACD,iBAHD,MAGO;AACLgQ,kBAAAA,OAAK,CAAE,YAAW,KAAKW,IAAL,CAAUtJ,YAAY,CAAC7H,mBAAvB,CAA4C,4CAAzD,CAAL;AACD;AACF,eARI,EAQF+I,KARE,CAQIC,GAAG,IAAI;AACdwH,gBAAAA,OAAK,CAAE,YAAW,KAAKW,IAAL,CAAUtJ,YAAY,CAAC7H,mBAAvB,CAA4C,8CAA6CgJ,GAAG,CAACwE,OAAQ,GAAlH,CAAL;AACD,eAVI,CAAP;AAWD;AACF,WAfH,EAeK1E,IAfL,CAeU,MAAM;AACZ8oC,YAAAA,YAAY;AACb,WAjBH,EAiBK7oC,KAjBL,CAiBWC,GAAG,IAAI;AACd4oC,YAAAA,YAAY,CAAC5oC,GAAG,CAACwE,OAAL,CAAZ;AACD,WAnBH;AAoBD,SArBD,MAqBO;AACLokC,UAAAA,YAAY;AACb;AACF,OAlFU,EAoFVG,YAAD,IAAkB;AAChB,YAAI7mC,0BAAC,CAACiI,QAAF,CAAW,KAAKhC,IAAL,CAAUtJ,YAAY,CAAChG,oBAAvB,CAAX,CAAJ,EAA8D;AAC5D,eAAKmwC,UAAL,CAAgB;AAAE3mC,YAAAA,WAAW,EAAE,KAAK8F,IAAL,CAAUtJ,YAAY,CAAChG,oBAAvB;AAAf,WAAhB,EAA+E,CAAC,CAAC,KAAKsP,IAAL,CAAUtJ,YAAY,CAAC/F,gCAAvB,CAAjF,EAA2I,IAA3I,EAAiJgH,IAAjJ,CAAsJ,MAAMipC,YAAY,EAAxK,EAA4KhpC,KAA5K,CAAkLgpC,YAAlL;AACD,SAFD,MAEO;AACLA,UAAAA,YAAY;AACb;AACF,OA1FU,EA4FVE,iBAAD,IAAuB;AACrB,aAAK3C,cAAL,GAAsB,IAAtB;;AACA,YAAI,KAAKn+B,IAAL,CAAUtJ,YAAY,CAACnH,oBAAvB,CAAJ,EAAkD;AAChD,eAAKmxC,SAAL,CAAe,kBAAf,EACG/oC,IADH,CACQuiB,IAAI,IAAI;AACZ,gBAAI,KAAKla,IAAL,CAAUtJ,YAAY,CAAC3G,+BAAvB,KAA2D,KAAKiQ,IAAL,CAAUtJ,YAAY,CAAC1G,iCAAvB,CAA/D,EAA0H;AACxH,qBAAO,KAAK2wC,kBAAL,CAAwBzmB,IAAxB,EACJviB,IADI,CACCuiB,IAAI,IAAI;AACZ,oBAAIA,IAAJ,EAAU;AACR7a,kBAAAA,OAAK,CAAE,aAAY,KAAKW,IAAL,CAAUtJ,YAAY,CAACnH,oBAAvB,CAA6C,4BAA2BwuC,KAAW,CAAC5jB,iBAAZ,CAA8BD,IAA9B,CAAoC,EAA1H,CAAL;AACA,yBAAO,KAAK2kB,iBAAL,CAAuB3kB,IAAvB,EAA6B,CAAC,CAAC,KAAKla,IAAL,CAAUtJ,YAAY,CAAC1G,iCAAvB,CAA/B,EAA0F,CAAC,CAAC,KAAKgQ,IAAL,CAAUtJ,YAAY,CAAC3G,+BAAvB,CAA5F,CAAP;AACD,iBAHD,MAGO;AACLsP,kBAAAA,OAAK,CAAE,aAAY,KAAKW,IAAL,CAAUtJ,YAAY,CAACnH,oBAAvB,CAA6C,4CAA3D,CAAL;AACD;AACF,eARI,EAQFqI,KARE,CAQIC,GAAG,IAAI;AACdwH,gBAAAA,OAAK,CAAE,aAAY,KAAKW,IAAL,CAAUtJ,YAAY,CAACnH,oBAAvB,CAA6C,8CAA6CsI,GAAG,CAACwE,OAAQ,GAApH,CAAL;AACD,eAVI,CAAP;AAWD;AACF,WAfH,EAeK1E,IAfL,CAeU,MAAM;AACZmpC,YAAAA,iBAAiB;AAClB,WAjBH,EAiBKlpC,KAjBL,CAiBWC,GAAG,IAAI;AACdipC,YAAAA,iBAAiB,CAAC,IAAI1kC,KAAJ,CAAW,sBAAqB,KAAK4D,IAAL,CAAUtJ,YAAY,CAACnH,oBAAvB,CAA6C,sBAAqBsI,GAAG,CAACwE,OAAQ,EAA9G,CAAD,CAAjB;AACD,WAnBH;AAoBD,SArBD,MAqBO;AACLykC,UAAAA,iBAAiB;AAClB;AACF,OAtHU,CAAb,EAwHIjpC,GAAD,IAAS;AACV,YAAIA,GAAJ,EAAS;AACP,iBAAOJ,MAAM,CAAC,IAAI2E,KAAJ,CAAW,iBAAgBvE,GAAG,CAACwE,OAAQ,EAAvC,CAAD,CAAb;AACD;;AACD7E,QAAAA,OAAO;AACR,OA7HD;AA8HD,KA/HM,CAAP;AAgID;;AAEDyC,EAAAA,QAAQ,CAAE2U,OAAF,EAAW;AACjB,WAAO,KAAKiyB,UAAL,CAAgBjyB,OAAhB,EAAyB,IAAzB,EAA+B,IAA/B,CAAP;AACD;;AAES,QAAJhV,IAAI,GAAI;AACZ,SAAKukC,cAAL,GAAsB,KAAtB;;AACA,QAAI,KAAKn+B,IAAL,CAAUtJ,YAAY,CAACzG,mBAAvB,CAAJ,EAAiD;AAC/C,UAAI;AACF,cAAM,KAAKywC,SAAL,CAAe,iBAAf,CAAN;AACD,OAFD,CAEE,OAAO7oC,GAAP,EAAY;AACZ,cAAM,IAAIuE,KAAJ,CAAW,sBAAqB,KAAK4D,IAAL,CAAUtJ,YAAY,CAACzG,mBAAvB,CAA4C,qBAAoB4H,GAAG,CAACwE,OAAQ,EAA5G,CAAN;AACD;AACF;;AACD,UAAMqf,WAAW,CAAC,KAAK1b,IAAN,EAAY,KAAK++B,QAAjB,EAA2B,KAAKW,IAAhC,CAAjB;AACA,UAAM,KAAKqB,mBAAL,EAAN;AACA,UAAM,KAAKC,YAAL,EAAN;AACA,SAAKtB,IAAL,GAAY,EAAZ;AACD;;AAED9kC,EAAAA,KAAK,GAAI;AACP,WAAO,KAAKqmC,aAAL,EAAP;AACD,GAjNwC;;;AAoNlB,QAAjBpC,iBAAiB,CAAE3kB,IAAF,EAAQgnB,UAAR,EAAoBC,aAApB,EAAmC;AACxD,UAAM3jB,CAAC,GAAG,YAAY;AACpB,UAAI;AACF,cAAMmO,OAAO,GAAG,MAAM,KAAKyV,qBAAL,CAA2BlnB,IAA3B,EAAiCgnB,UAAjC,EAA6CC,aAA7C,CAAtB;;AACA,YAAIxV,OAAJ,EAAa;AACX,eAAK,MAAM9sB,MAAX,IAAqB8sB,OAArB,EAA8B;AAC5B3W,YAAAA,UAAU,CAAC,MAAM,KAAKkpB,YAAL,CAAkBr/B,MAAlB,CAAP,EAAkC,CAAlC,CAAV;AACD;AACF;AACF,OAPD,CAOE,OAAOhH,GAAP,EAAY;AACZmd,QAAAA,UAAU,CAAC,MAAM,KAAKkpB,YAAL,CAAkBrmC,GAAlB,CAAP,EAA+B,CAA/B,CAAV;AACD;AACF,KAXD;;AAYA,QAAI,KAAKwpC,gBAAT,EAA2B;AACzB,WAAKA,gBAAL,CAAsB/pC,IAAtB,CAA2BkmB,CAA3B;AACAne,MAAAA,OAAK,CAAC,sCAAD,CAAL;AACD,KAHD,MAGO;AACL,YAAMme,CAAC,EAAP;AACD;AACF;;AAE2B,QAAtB8jB,sBAAsB,GAAI;AAC9B,QAAI,KAAKD,gBAAL,IAAyB,KAAKA,gBAAL,CAAsBtjC,MAAtB,GAA+B,CAA5D,EAA+D;AAC7D,WAAK,MAAMyf,CAAX,IAAgB,KAAK6jB,gBAArB,EAAuC;AACrC,cAAM7jB,CAAC,EAAP;AACD;AACF;;AACD,SAAK6jB,gBAAL,GAAwB,IAAxB;AACD,GAhPwC;;;AAmPd,QAArBD,qBAAqB,CAAElnB,IAAF,EAAQgnB,UAAR,EAAoBC,aAApB,EAAmC;AAC5D,QAAIA,aAAJ,EAAmB;AACjB,YAAMI,SAAS,GAAG,KAAKvhC,IAAL,CAAUtJ,YAAY,CAAChE,mCAAvB,CAAlB;AACA,YAAM8uC,gBAAgB,GAAG1D,eAAe,CAACpnC,YAAY,CAACjE,2BAAd,EAA2C,KAAKuN,IAAhD,CAAxC;;AACA,UAAIwhC,gBAAgB,CAACzjC,MAAjB,GAA0B,CAA9B,EAAiC;AAC/B,aAAK,MAAM0jC,eAAX,IAA8BD,gBAA9B,EAAgD;AAC9C,gBAAME,YAAY,GAAG5yB,4BAAE,CAACC,KAAH,CAASmL,IAAT,EAAeunB,eAAf,CAArB;;AACA,cAAI1nC,0BAAC,CAACgD,OAAF,CAAU2kC,YAAV,KAA2BA,YAAY,CAAC3jC,MAAb,GAAsB,CAArD,EAAwD;AACtD,gBAAIwjC,SAAS,KAAK,OAAlB,EAA2B;AACzBpnC,cAAAA,MAAM,CAACC,MAAP,CAAc,KAAKslC,IAAL,CAAUpjC,OAAxB,EAAiColC,YAAY,CAAC,CAAD,CAA7C;AACD,aAFD,MAEO,IAAIH,SAAS,KAAK,SAAlB,EAA6B;AAClC,mBAAK7B,IAAL,CAAUpjC,OAAV,GAAoBolC,YAAY,CAAC,CAAD,CAAhC;AACD;AACF;AACF;AACF,OAXD,MAWO;AACL,YAAIH,SAAS,KAAK,OAAlB,EAA2B;AACzBpnC,UAAAA,MAAM,CAACC,MAAP,CAAc,KAAKslC,IAAL,CAAUpjC,OAAxB,EAAiC4d,IAAjC;AACD,SAFD,MAEO,IAAIqnB,SAAS,KAAK,SAAlB,EAA6B;AAClC,eAAK7B,IAAL,CAAUpjC,OAAV,GAAoB4d,IAApB;AACD;AACF;;AACD7a,MAAAA,OAAK,CAAE,4BAA2BqR,wBAAI,CAACC,OAAL,CAAa,KAAK+uB,IAAL,CAAUpjC,OAAvB,CAAgC,EAA7D,CAAL;AACD;;AAED,UAAMuC,MAAM,GAAG,EAAf;;AACA,QAAIqiC,UAAJ,EAAgB;AACd,YAAMS,aAAa,GAAG,EAAtB;AAEA,YAAMC,aAAa,GAAG9D,eAAe,CAACpnC,YAAY,CAACtE,wBAAd,EAAwC,KAAK4N,IAA7C,CAArC;;AACA,UAAI4hC,aAAa,CAAC7jC,MAAd,GAAuB,CAA3B,EAA8B;AAC5B,aAAK,MAAM8jC,YAAX,IAA2BD,aAA3B,EAA0C;AACxC,gBAAME,EAAE,GAAGhzB,4BAAE,CAACC,KAAH,CAASmL,IAAT,EAAe2nB,YAAf,CAAX;;AACA,cAAI9nC,0BAAC,CAACgD,OAAF,CAAU+kC,EAAV,CAAJ,EAAmB;AACjBA,YAAAA,EAAE,CAAC9kC,OAAH,CAAWub,CAAC,IAAIopB,aAAa,CAACrqC,IAAd,CAAmBihB,CAAnB,CAAhB;AACD,WAFD,MAEO,IAAIupB,EAAJ,EAAQ;AACbH,YAAAA,aAAa,CAACrqC,IAAd,CAAmBwqC,EAAnB;AACD;AACF;AACF,OATD,MASO;AACLH,QAAAA,aAAa,CAACrqC,IAAd,CAAmB4iB,IAAnB;AACD;;AAED,WAAK,MAAM6nB,YAAX,IAA2BJ,aAA3B,EAA0C;AACxC,cAAM57B,KAAK,GAAG,EAAd;AACA,cAAMF,OAAO,GAAG,EAAhB;AAEA,cAAMm8B,cAAc,GAAGlE,eAAe,CAACpnC,YAAY,CAACnE,yBAAd,EAAyC,KAAKyN,IAA9C,CAAtC;AACAgiC,QAAAA,cAAc,CAAChlC,OAAf,CAAuB2R,QAAQ,IAAI;AACjC,gBAAMszB,aAAa,GAAGnzB,4BAAE,CAACC,KAAH,CAASgzB,YAAT,EAAuBpzB,QAAvB,CAAtB;;AACA,cAAIszB,aAAJ,EAAmB;AACjB,aAACloC,0BAAC,CAACgD,OAAF,CAAUklC,aAAV,IAA2BloC,0BAAC,CAACmoC,WAAF,CAAcD,aAAd,CAA3B,GAA0D,CAACA,aAAD,CAA3D,EAA4EjlC,OAA5E,CAAoFuJ,CAAC,IACnFR,KAAK,CAACzO,IAAN,CAAW;AACTuN,cAAAA,QAAQ,EAAE0B,CADD;AAET9B,cAAAA,QAAQ,EAAE09B,6BAAI,CAACC,MAAL,CAAY77B,CAAZ,KAAkB;AAFnB,aAAX,CADF;AAMAlH,YAAAA,OAAK,CAAE,yBAAwBqR,wBAAI,CAACC,OAAL,CAAa5K,KAAb,CAAoB,EAA9C,CAAL;AACD;AACF,SAXD;AAYA,cAAMs8B,gBAAgB,GAAGvE,eAAe,CAACpnC,YAAY,CAAClE,2BAAd,EAA2C,KAAKwN,IAAhD,CAAxC;AACAqiC,QAAAA,gBAAgB,CAACrlC,OAAjB,CAAyB2R,QAAQ,IAAI;AACnC,gBAAM2zB,eAAe,GAAGxzB,4BAAE,CAACC,KAAH,CAASgzB,YAAT,EAAuBpzB,QAAvB,CAAxB;;AACA,cAAI2zB,eAAJ,EAAqB;AACnB,aAACvoC,0BAAC,CAACgD,OAAF,CAAUulC,eAAV,IAA6BvoC,0BAAC,CAACmoC,WAAF,CAAcI,eAAd,CAA7B,GAA8D,CAACA,eAAD,CAA/D,EAAkFtlC,OAAlF,CAA0FwJ,CAAC,IACzFX,OAAO,CAACvO,IAAR,CAAa;AACXoD,cAAAA,IAAI,EAAE8L;AADK,aAAb,CADF;AAKAnH,YAAAA,OAAK,CAAE,2BAA0BqR,wBAAI,CAACC,OAAL,CAAa9K,OAAb,CAAsB,EAAlD,CAAL;AACD;AACF,SAVD;AAYA,YAAI08B,cAAc,GAAG,KAArB;AACA,cAAMC,cAAc,GAAG1E,eAAe,CAACpnC,YAAY,CAACrE,4BAAd,EAA4C,KAAK2N,IAAjD,CAAtC;;AACA,aAAK,MAAM2O,QAAX,IAAuB6zB,cAAvB,EAAuC;AACrCnjC,UAAAA,OAAK,CAAE,kBAAiBsP,QAAS,EAA5B,CAAL;AAEA,gBAAM8zB,aAAa,GAAG3zB,4BAAE,CAACC,KAAH,CAASgzB,YAAT,EAAuBpzB,QAAvB,CAAtB;AACAtP,UAAAA,OAAK,CAAE,yBAAwBqR,wBAAI,CAACC,OAAL,CAAa8xB,aAAb,CAA4B,EAAtD,CAAL;AAEA,gBAAMC,YAAY,GAAI3oC,0BAAC,CAACgD,OAAF,CAAU0lC,aAAV,IAA2B1oC,0BAAC,CAACmoC,WAAF,CAAcO,aAAd,CAA3B,GAA0D,CAACA,aAAD,CAAhF;;AACA,eAAK,MAAM,CAACE,gBAAD,EAAmBzoC,WAAnB,CAAX,IAA8CwoC,YAAY,CAAC9a,OAAb,EAA9C,EAAsE;AACpE,gBAAI,CAAC1tB,WAAL,EAAkB;AAElBqoC,YAAAA,cAAc,GAAG,IAAjB;AACA,kBAAM/nC,MAAM,GAAG;AAAEmL,cAAAA,UAAU,EAAEuU,IAAd;AAAoBhgB,cAAAA,WAApB;AAAiC6L,cAAAA,KAAjC;AAAwCF,cAAAA;AAAxC,aAAf;AACA,kBAAM6V,WAAW,CAAC,KAAK1b,IAAN,EAAY,KAAKk/B,YAAjB,EAA+B/kC,MAAM,CAACC,MAAP,CAAc;AAAEI,cAAAA,MAAF;AAAUooC,cAAAA,UAAU,EAAEb,YAAtB;AAAoCY,cAAAA;AAApC,aAAd,EAAsE,KAAKjD,IAA3E,CAA/B,CAAjB;AACA7gC,YAAAA,MAAM,CAACvH,IAAP,CAAYkD,MAAZ;AACD;AACF;;AAED,YAAI,CAAC+nC,cAAL,EAAqB;AACnB,gBAAM/nC,MAAM,GAAG;AAAEN,YAAAA,WAAW,EAAE,EAAf;AAAmByL,YAAAA,UAAU,EAAEuU,IAA/B;AAAqCnU,YAAAA,KAArC;AAA4CF,YAAAA;AAA5C,WAAf;AACA,gBAAMg9B,cAAc,GAAG1oC,MAAM,CAAC+H,IAAP,CAAY1H,MAAZ,CAAvB;AACA,gBAAMkhB,WAAW,CAAC,KAAK1b,IAAN,EAAY,KAAKk/B,YAAjB,EAA+B/kC,MAAM,CAACC,MAAP,CAAc;AAAEI,YAAAA,MAAF;AAAUooC,YAAAA,UAAU,EAAEb;AAAtB,WAAd,EAAoD,KAAKrC,IAAzD,CAA/B,CAAjB;AACA,gBAAMoD,aAAa,GAAG3oC,MAAM,CAAC+H,IAAP,CAAY1H,MAAZ,CAAtB;;AACA,cAAIqoC,cAAc,CAAC9kC,MAAf,KAA0B+kC,aAAa,CAAC/kC,MAAxC,IAAkD,CAAC,EAAEvD,MAAM,CAACN,WAAP,IAAsBM,MAAM,CAACN,WAAP,CAAmB6D,MAAnB,GAA4B,CAApD,CAAnD,IAA6GvD,MAAM,CAACuL,KAAP,CAAahI,MAAb,GAAsB,CAAnI,IAAwIvD,MAAM,CAACqL,OAAP,CAAe9H,MAAf,GAAwB,CAAhK,IAAqK,CAAC,KAAKiC,IAAL,CAAUtJ,YAAY,CAAC1F,uBAAvB,CAA1K,EAA2N;AACzN6N,YAAAA,MAAM,CAACvH,IAAP,CAAYkD,MAAZ;AACD;AACF;AACF;AACF;;AACD,WAAOqE,MAAP;AACD;;AAEDgiC,EAAAA,UAAU,CAAE/mC,GAAF,EAAOonC,UAAP,EAAmBC,aAAnB,EAAkC;AAC1C,WAAO,KAAK4B,aAAL,CAAmBjpC,GAAnB,EACJnC,IADI,CACEqrC,cAAD,IAAoB,IAAIzrC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACzD4H,MAAAA,OAAK,CAAE,8BAA6B5B,IAAI,CAACC,SAAL,CAAeslC,cAAf,EAA+B,IAA/B,EAAqC,CAArC,CAAwC,EAAvE,CAAL;AACAlpC,MAAAA,GAAG,CAAC6L,UAAJ,GAAiB7L,GAAG,CAAC6L,UAAJ,IAAkB,EAAnC;AACA7L,MAAAA,GAAG,CAAC6L,UAAJ,CAAeq9B,cAAf,GAAgCA,cAAhC;AAEA,WAAK3B,gBAAL,GAAwB,EAAxB;AAEAzG,MAAAA,2BAAO,CAACoI,cAAD,EAAiB,OAAOnrC,GAAP,EAAY8d,QAAZ,EAAsBuE,IAAtB,KAA+B;AACrD,YAAIriB,GAAJ,EAAS;AACP,iBAAOJ,MAAM,CAAC,IAAI2E,KAAJ,CAAW,wBAAuBvE,GAAG,CAACwE,OAAQ,EAA9C,CAAD,CAAb;AACD,SAFD,MAEO;AACL,cAAIsZ,QAAQ,CAACstB,UAAT,IAAuB,GAA3B,EAAgC;AAC9B5jC,YAAAA,OAAK,CAAE,uBAAsBsW,QAAQ,CAACstB,UAAW,IAAGttB,QAAQ,CAACutB,aAAc,EAAtE,CAAL;AACA,mBAAOzrC,MAAM,CAAC,IAAI2E,KAAJ,CAAW,uBAAsBuZ,QAAQ,CAACstB,UAAW,IAAGttB,QAAQ,CAACutB,aAAc,EAA/E,CAAD,CAAb;AACD;;AAED,cAAIhpB,IAAJ,EAAU;AACR7a,YAAAA,OAAK,CAAE,sBAAqBsW,QAAQ,CAACstB,UAAW,WAAUlF,KAAW,CAAC5jB,iBAAZ,CAA8BD,IAA9B,CAAoC,EAAzF,CAAL;;AAEA,gBAAI;AACFA,cAAAA,IAAI,GAAG,MAAM,KAAKymB,kBAAL,CAAwBzmB,IAAxB,CAAb;AACD,aAFD,CAEE,OAAOriB,GAAP,EAAY;AACZwH,cAAAA,OAAK,CAAE,8CAA6CxH,GAAG,CAACwE,OAAQ,EAA3D,CAAL;AACA7E,cAAAA,OAAO,CAAC,IAAD,CAAP;;AACA,mBAAK8pC,sBAAL;;AACA;AACD;;AAED,gBAAIpnB,IAAJ,EAAU;AACR,mBAAK2kB,iBAAL,CAAuB3kB,IAAvB,EAA6BgnB,UAA7B,EAAyCC,aAAzC,EAAwDxpC,IAAxD,CAA6D,MAAMH,OAAO,CAAC,IAAD,CAA1E,EAAkFG,IAAlF,CAAuF,MAAM,KAAK2pC,sBAAL,EAA7F;AACD,aAFD,MAEO;AACLjiC,cAAAA,OAAK,CAAC,uDAAD,CAAL;AACA7H,cAAAA,OAAO,CAAC,IAAD,CAAP;;AACA,mBAAK8pC,sBAAL;AACD;AACF,WAnBD,MAmBO;AACLjiC,YAAAA,OAAK,CAAE,sBAAqBsW,QAAQ,CAACstB,UAAW,cAA3C,CAAL;AACAzrC,YAAAA,OAAO,CAAC,IAAD,CAAP;;AACA,iBAAK8pC,sBAAL;AACD;AACF;AACF,OAlCM,CAAP;AAmCD,KA1CyB,CADrB,CAAP;AA4CD;;AAEkB,QAAbyB,aAAa,CAAEjpC,GAAF,EAAO;AACxB,SAAK4lC,IAAL,CAAU5lC,GAAV,GAAgBK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,GAAlB,CAAhB;AAEA,UAAMqpC,iBAAiB,GAAG,KAAKzD,IAAL,CAAU5lC,GAAV,CAAcI,WAAxC;AAEA,SAAKwlC,IAAL,CAAU5lC,GAAV,CAAcI,WAAd,GAA4BipC,iBAAiB,IAAIC,kBAAkB,CAACD,iBAAD,CAAnE;;AAEA,QAAI,KAAKnjC,IAAL,CAAUtJ,YAAY,CAAC9D,2BAAvB,CAAJ,EAAyD;AACvD,WAAK8sC,IAAL,CAAUC,MAAV,CAAiBC,MAAjB,GAA0B,KAAKO,gBAAL,CAAsBzpC,YAAY,CAAC9D,2BAAnC,EAAgE,KAAhE,CAA1B;AACD,KAFD,MAEO;AACL,WAAK8sC,IAAL,CAAUC,MAAV,CAAiBC,MAAjB,GAA0B/B,MAAM,EAAhC;AACD;;AAED,UAAMwF,GAAG,GAAG,KAAKlD,gBAAL,CAAsBzpC,YAAY,CAAC5F,cAAnC,EAAmD,KAAnD,CAAZ;;AACA,UAAM8nC,OAAO,GAAG,KAAK0K,YAAL,CAAkB5sC,YAAY,CAACzF,kBAA/B,CAAhB;;AAEA,UAAM+xC,cAAc,GAAG;AACrBK,MAAAA,GADqB;AAErBtG,MAAAA,MAAM,EAAE,KAAKuG,YAAL,CAAkB5sC,YAAY,CAACvF,eAA/B,KAAmD,KAAKmyC,YAAL,CAAkB5sC,YAAY,CAACxF,iBAA/B,CAFtC;AAGrBqyC,MAAAA,kBAAkB,EAAE,IAHC;AAIrB3K,MAAAA;AAJqB,KAAvB;;AAOA,QAAI,KAAK54B,IAAL,CAAUtJ,YAAY,CAACtF,2BAAvB,CAAJ,EAAyD;AACvD,WAAKsuC,IAAL,CAAU5lC,GAAV,CAAcI,WAAd,GAA4BipC,iBAA5B;;AACA,UAAI;AACFH,QAAAA,cAAc,CAACQ,OAAf,GAAyB,KAAKrD,gBAAL,CAAsBzpC,YAAY,CAACtF,2BAAnC,EAAgE,IAAhE,CAAzB;AACD,OAFD,CAEE,OAAOyG,GAAP,EAAY;AACZ,cAAM,IAAIuE,KAAJ,CAAW,8DAA6DvE,GAAG,CAACwE,OAAQ,GAApF,CAAN;AACD;AACF;;AACD,QAAI,KAAK2D,IAAL,CAAUtJ,YAAY,CAACrF,wBAAvB,CAAJ,EAAsD;AACpD,YAAMoyC,OAAO,GAAG,KAAKH,YAAL,CAAkB5sC,YAAY,CAACpF,mBAA/B,CAAhB;;AACA,UAAImyC,OAAJ,EAAa;AACX,aAAK/D,IAAL,CAAU5lC,GAAV,CAAcI,WAAd,GAA4BipC,iBAA5B;AACD,OAFD,MAEO;AACL,aAAKzD,IAAL,CAAU5lC,GAAV,CAAcI,WAAd,GAA4BipC,iBAAiB,IAAI/oB,gBAAgB,CAAC+oB,iBAAD,CAAjE;AACD;;AACD,UAAI;AACFH,QAAAA,cAAc,CAAC9oB,IAAf,GAAsB,KAAKimB,gBAAL,CAAsBzpC,YAAY,CAACrF,wBAAnC,EAA6D,CAACoyC,OAA9D,CAAtB;AACAT,QAAAA,cAAc,CAACppB,IAAf,GAAsB,CAAC6pB,OAAvB;AACD,OAHD,CAGE,OAAO5rC,GAAP,EAAY;AACZ,cAAM,IAAIuE,KAAJ,CAAW,wDAAuDvE,GAAG,CAACwE,OAAQ,GAA9E,CAAN;AACD;AACF;;AACD,SAAKqjC,IAAL,CAAU5lC,GAAV,CAAcI,WAAd,GAA4BipC,iBAA5B;;AAEA,QAAIrpC,GAAG,CAAC4pC,eAAJ,IAAuBvpC,MAAM,CAAC+H,IAAP,CAAYpI,GAAG,CAAC4pC,eAAhB,EAAiC3lC,MAAjC,GAA0C,CAArE,EAAwE;AACtE,YAAM4lC,WAAW,GAAGxpC,MAAM,CAAC+H,IAAP,CAAYpI,GAAG,CAAC4pC,eAAhB,EAAiCnlC,GAAjC,CAAqC6D,GAAG,IACzD,GAAEghC,kBAAkB,CAAChhC,GAAD,CAAM,IAAGghC,kBAAkB,CAAC,KAAK1E,gBAAL,CAC/C3kC,0BAAC,CAACiI,QAAF,CAAWlI,GAAG,CAAC4pC,eAAJ,CAAoBthC,GAApB,CAAX,IAAuCtI,GAAG,CAAC4pC,eAAJ,CAAoBthC,GAApB,CAAvC,GAAkE3E,IAAI,CAACC,SAAL,CAAe5D,GAAG,CAAC4pC,eAAJ,CAAoBthC,GAApB,CAAf,CADnB,EAE/C,KAF+C,CAAD,CAEtC,EAHQ,EAIjBxE,IAJiB,CAIZ,GAJY,CAApB;;AAKA,UAAIolC,cAAc,CAACK,GAAf,CAAmBvgC,OAAnB,CAA2B,GAA3B,IAAkC,CAAtC,EAAyC;AACvCkgC,QAAAA,cAAc,CAACK,GAAf,GAAsB,GAAEL,cAAc,CAACK,GAAI,IAAGM,WAAY,EAA1D;AACD,OAFD,MAEO;AACLX,QAAAA,cAAc,CAACK,GAAf,GAAsB,GAAEL,cAAc,CAACK,GAAI,IAAGM,WAAY,EAA1D;AACD;AACF;;AACD,QAAI7pC,GAAG,CAAC8pC,UAAJ,IAAkBzpC,MAAM,CAAC+H,IAAP,CAAYpI,GAAG,CAAC8pC,UAAhB,EAA4B7lC,MAA5B,GAAqC,CAA3D,EAA8D;AAC5DilC,MAAAA,cAAc,CAACQ,OAAf,GAAyBR,cAAc,CAACQ,OAAf,IAA0B,EAAnD;;AAEA,WAAK,MAAMK,SAAX,IAAwB1pC,MAAM,CAAC+H,IAAP,CAAYpI,GAAG,CAAC8pC,UAAhB,CAAxB,EAAqD;AACnD,YAAIE,WAAJ;;AACA,YAAI/pC,0BAAC,CAACiI,QAAF,CAAWlI,GAAG,CAAC8pC,UAAJ,CAAeC,SAAf,CAAX,CAAJ,EAA2C;AACzCC,UAAAA,WAAW,GAAG,KAAKpF,gBAAL,CAAsB5kC,GAAG,CAAC8pC,UAAJ,CAAeC,SAAf,CAAtB,EAAiD,KAAjD,CAAd;AACD,SAFD,MAEO;AACLC,UAAAA,WAAW,GAAG,KAAKpF,gBAAL,CAAsBjhC,IAAI,CAACC,SAAL,CAAe5D,GAAG,CAAC8pC,UAAJ,CAAeC,SAAf,CAAf,CAAtB,EAAiE,IAAjE,CAAd;AACD;;AACDb,QAAAA,cAAc,CAACQ,OAAf,CAAuBK,SAAvB,IAAoCC,WAApC;AACD;AACF;;AACD,SAAKC,kBAAL,CAAwBf,cAAxB;;AAEA,UAAMtnB,WAAW,CAAC,KAAK1b,IAAN,EAAY,KAAKg/B,WAAjB,EAA8B7kC,MAAM,CAACC,MAAP,CAAc;AAAE4oC,MAAAA;AAAF,KAAd,EAAkC,KAAKtD,IAAvC,CAA9B,CAAjB;AAEA,WAAOsD,cAAP;AACD;;AAEwB,QAAnBgB,mBAAmB,CAAEC,UAAF,EAAchsB,OAAd,EAAuB;AAC9C,UAAM2gB,OAAO,GAAGre,EAAE,IAAI,IAAIhjB,OAAJ,CAAYC,OAAO,IAAIwd,UAAU,CAACxd,OAAD,EAAU+iB,EAAV,CAAjC,CAAtB;;AAEA,QAAI2pB,KAAK,GAAG,CAAZ;;AAEA,WAAO,IAAP,EAAa;AACX7kC,MAAAA,OAAK,CAAE,oCAAmC4kC,UAAU,CAACZ,GAAI,iBAApD,CAAL;;AACA,UAAIa,KAAK,GAAGjsB,OAAZ,EAAqB;AACnB,cAAM,IAAI7b,KAAJ,CAAW,4BAA2B6b,OAAQ,UAA9C,CAAN;AACD;;AACDisB,MAAAA,KAAK;AACL,YAAM;AAAErsC,QAAAA,GAAF;AAAO8d,QAAAA,QAAP;AAAiBuE,QAAAA;AAAjB,UAA0B,MAAM,IAAI3iB,OAAJ,CAAaC,OAAD,IAAa;AAC7DojC,QAAAA,2BAAO,CAACqJ,UAAD,EAAa,CAACpsC,GAAD,EAAM8d,QAAN,EAAgBuE,IAAhB,KAAyB;AAC3C1iB,UAAAA,OAAO,CAAC;AAAEK,YAAAA,GAAF;AAAO8d,YAAAA,QAAP;AAAiBuE,YAAAA;AAAjB,WAAD,CAAP;AACD,SAFM,CAAP;AAGD,OAJqC,CAAtC;;AAKA,UAAIriB,GAAJ,EAAS;AACPwH,QAAAA,OAAK,CAAE,0CAAyC4kC,UAAU,CAACZ,GAAI,KAAIxrC,GAAI,EAAlE,CAAL;AACA,cAAM+gC,OAAO,CAACqL,UAAU,CAACrL,OAAZ,CAAb;AACD,OAHD,MAGO,IAAIjjB,QAAQ,CAACstB,UAAT,IAAuB,GAA3B,EAAgC;AACrC5jC,QAAAA,OAAK,CAAE,oCAAmC4kC,UAAU,CAACZ,GAAI,wBAAuB1tB,QAAQ,CAACstB,UAAW,IAAGttB,QAAQ,CAACutB,aAAc,EAAzH,CAAL;AACA,cAAMtK,OAAO,CAACqL,UAAU,CAACrL,OAAZ,CAAb;AACD,OAHM,MAGA;AACLv5B,QAAAA,OAAK,CAAE,4CAA2C4kC,UAAU,CAACZ,GAAI,EAA5D,CAAL;AACA,eAAOnpB,IAAP;AACD;AACF;AACF;;AAEuB,QAAlBymB,kBAAkB,CAAEzmB,IAAF,EAAQ;AAC9B,QAAI,CAACngB,0BAAC,CAACgI,QAAF,CAAWmY,IAAX,CAAD,IAAqBngB,0BAAC,CAACiI,QAAF,CAAWkY,IAAX,CAAzB,EAA2C;AACzC,UAAI;AACFA,QAAAA,IAAI,GAAGzc,IAAI,CAACkL,KAAL,CAAWuR,IAAX,CAAP;AACD,OAFD,CAEE,OAAOriB,GAAP,EAAY;AACZ,YAAI,CAAC,KAAKonC,UAAV,EAAsB,MAAMpnC,GAAN;AACvB;AACF;;AACD,QAAI,KAAKonC,UAAT,EAAqB;AACnB,YAAMvjB,WAAW,CAAC,KAAK1b,IAAN,EAAY,KAAKi/B,UAAjB,EAA6B9kC,MAAM,CAACC,MAAP,CAAc;AAAE8f,QAAAA,IAAF;AAAQiqB,QAAAA,UAAU,EAAG39B,CAAD,IAAO;AAAE0T,UAAAA,IAAI,GAAG1T,CAAP;AAAU;AAAvC,OAAd,EAAyD,KAAKk5B,IAA9D,CAA7B,CAAjB;AACD;;AACD,QAAI3lC,0BAAC,CAACgI,QAAF,CAAWmY,IAAX,CAAJ,EAAsB,OAAOA,IAAP,CAAtB,KACK,IAAIngB,0BAAC,CAACiI,QAAF,CAAWkY,IAAX,CAAJ,EAAsB,OAAOzc,IAAI,CAACkL,KAAL,CAAWuR,IAAX,CAAP,CAAtB,KACA,OAAO,IAAP;AACN;;AAEDopB,EAAAA,YAAY,CAAExlB,OAAF,EAAW;AACrB,WAAO/jB,0BAAC,CAACC,UAAF,CAAa,KAAKgG,IAAL,CAAU8d,OAAV,CAAb,IAAoC,KAAK9d,IAAL,CAAU8d,OAAV,CAAD,EAAnC,GAA4D,KAAK9d,IAAL,CAAU8d,OAAV,CAAnE;AACD;;AAEDqiB,EAAAA,gBAAgB,CAAEriB,OAAF,EAAWlE,IAAX,EAAiB;AAC/B,UAAMwqB,QAAQ,GAAG,KAAKd,YAAL,CAAkBxlB,OAAlB,CAAjB;;AACA,UAAMumB,QAAQ,GAAGtqC,0BAAC,CAACiI,QAAF,CAAWoiC,QAAX,IAAuBA,QAAvB,GAAkC3mC,IAAI,CAACC,SAAL,CAAe0mC,QAAf,CAAnD;AACA,WAAO,KAAK1F,gBAAL,CAAsB2F,QAAtB,EAAgCzqB,IAAhC,CAAP;AACD;;AAED8kB,EAAAA,gBAAgB,CAAE2F,QAAF,EAAYzqB,IAAZ,EAAkB;AAChC,UAAM0qB,GAAG,GAAGtG,4BAAQ,CAACiC,MAAT,CAAgBoE,QAAhB,EAA0B,KAAK3E,IAA/B,CAAZ;;AACA,QAAI9lB,IAAJ,EAAU;AACR,UAAI;AACF,eAAOnc,IAAI,CAACkL,KAAL,CAAW27B,GAAX,CAAP;AACD,OAFD,CAEE,OAAOzsC,GAAP,EAAY;AACZ,eAAO,IAAIuE,KAAJ,CAAW,oHAAmHvE,GAAG,CAACwE,OAAQ,GAA1I,CAAP;AACD;AACF,KAND,MAMO;AACL,aAAOioC,GAAP;AACD;AACF;;AAEDC,EAAAA,oBAAoB,CAAEnI,KAAF,EAAS;AAC3B,QAAI,CAAC,KAAK+B,cAAV,EAA0B;AAE1B,UAAMqG,aAAa,GAAG,KAAKxkC,IAAL,CAAUtJ,YAAY,CAACzD,iCAAvB,CAAtB;AACA,UAAMwxC,iBAAiB,GAAG3G,eAAe,CAACpnC,YAAY,CAAC1D,oCAAd,EAAoD,KAAKgN,IAAzD,CAAzC;;AACA,QAAIykC,iBAAiB,IAAIA,iBAAiB,CAAC1mC,MAAlB,GAA2B,CAApD,EAAuD;AACrD,UAAI2mC,UAAU,GAAG,KAAjB;;AACA,WAAK,MAAMC,gBAAX,IAA+BF,iBAA/B,EAAkD;AAChD,cAAM91B,QAAQ,GAAG,KAAK+vB,gBAAL,CAAsBiG,gBAAtB,EAAwC,KAAxC,CAAjB;;AACA,cAAMC,SAAS,GAAG91B,4BAAE,CAACC,KAAH,CAASqtB,KAAT,EAAgBztB,QAAhB,CAAlB;;AACA,YAAIi2B,SAAS,IAAIA,SAAS,CAAC7mC,MAAV,GAAmB,CAApC,EAAuC;AACrC,gBAAM8mC,KAAK,GAAGL,aAAa,IAAI,KAAK9F,gBAAL,CAAsB8F,aAAtB,EAAqC,KAArC,CAA/B;;AACA,cAAIK,KAAJ,EAAW;AACT,gBAAK,GAAED,SAAS,CAAC,CAAD,CAAI,EAAhB,KAAuB,GAAEC,KAAM,EAAnC,EAAsC;AACpCH,cAAAA,UAAU,GAAG,IAAb;AACA;AACD;AACF,WALD,MAKO;AACLA,YAAAA,UAAU,GAAG,IAAb;AACA;AACD;AACF;AACF;;AACD,UAAI,CAACA,UAAL,EAAiB;AAClB;;AAEDrlC,IAAAA,OAAK,CAAE,gCAA+B5B,IAAI,CAACC,SAAL,CAAe0+B,KAAf,CAAsB,EAAvD,CAAL;;AACA,QAAI,KAAKp8B,IAAL,CAAUtJ,YAAY,CAACtD,kDAAvB,CAAJ,EAAgF;AAC9E,WAAKkrC,aAAL,CAAmBhnC,IAAnB,CAAwB8kC,KAAxB;;AACA,WAAKmC,sCAAL;AACD,KAHD,MAGO;AACLvpB,MAAAA,UAAU,CAAC,MAAM,KAAK6pB,iBAAL,CAAuBzC,KAAK,CAACliB,IAA7B,EAAmC,IAAnC,EAAyC,CAAC,CAAC,KAAKla,IAAL,CAAUtJ,YAAY,CAACxD,iCAAvB,CAA3C,CAAP,EAA8G,CAA9G,CAAV;AACD;AACF;;AAEkB,QAAbssC,aAAa,GAAI;AACrB,QAAI,KAAKx/B,IAAL,CAAUtJ,YAAY,CAAC7D,2BAAvB,KAAuD,KAAKmN,IAAL,CAAUtJ,YAAY,CAAC1D,oCAAvB,CAAvD,IAAuH,KAAKgN,IAAL,CAAUtJ,YAAY,CAACzD,iCAAvB,CAA3H,EAAsL;AACpL,WAAKipC,KAAL,GAAa,IAAIC,2BAAJ,CAAU,KAAKn8B,IAAL,CAAUtJ,YAAY,CAAC7D,2BAAvB,CAAV,CAAb;AACA,WAAKqpC,KAAL,CAAWzF,EAAX,CAAc,SAAd,EAAyB,MAAM;AAC7Bp3B,QAAAA,OAAK,CAAE,sBAAqB5B,IAAI,CAACC,SAAL,CAAe,KAAKsC,IAAL,CAAUtJ,YAAY,CAAC7D,2BAAvB,KAAuD,SAAtE,CAAiF,EAAxG,CAAL;AACD,OAFD;AAGA,WAAKqpC,KAAL,CAAWzF,EAAX,CAAc,SAAd,EAAyB,CAACn+B,OAAD,EAAU8jC,KAAV,KAAoB;AAC3C,YAAI,CAACriC,0BAAC,CAACiI,QAAF,CAAWo6B,KAAX,CAAL,EAAwB;AACtB,iBAAO/8B,OAAK,CAAE,6CAA4C/G,OAAQ,eAAc8jC,KAAM,EAA1E,CAAZ;AACD;;AACD,YAAI;AACFA,UAAAA,KAAK,GAAG3+B,IAAI,CAACkL,KAAL,CAAWyzB,KAAX,CAAR;AACD,SAFD,CAEE,OAAOvkC,GAAP,EAAY;AACZ,iBAAOwH,OAAK,CAAE,2CAA0C/G,OAAQ,eAAc8jC,KAAM,EAAxE,CAAZ;AACD;;AACD,aAAKmI,oBAAL,CAA0BnI,KAA1B;AACD,OAVD;AAWD,KAhBD,MAgBO,IAAI,KAAKp8B,IAAL,CAAUtJ,YAAY,CAAC3D,uBAAvB,CAAJ,EAAqD;AAC1D,WAAKyqC,KAAL,GAAa,MAAMN,UAAU,CAAC;AAC5BC,QAAAA,IAAI,EAAE,KAAKn9B,IAAL,CAAUtJ,YAAY,CAAC3D,uBAAvB,CADsB;AAE5BypC,QAAAA,QAAQ,EAAE,KAAKx8B,IAAL,CAAUtJ,YAAY,CAAC5D,2BAAvB,CAFkB;AAG5B4pC,QAAAA,YAAY,EAAGN,KAAD,IAAW;AACvB,cAAI,KAAK0I,gBAAT,EAA2B;AACzBzlC,YAAAA,OAAK,CAAC,oBAAD,CAAL;AACAA,YAAAA,OAAK,CAAC5B,IAAI,CAACC,SAAL,CAAe0+B,KAAf,EAAsB,IAAtB,EAA4B,CAA5B,CAAD,CAAL;;AACA,iBAAKmI,oBAAL,CAA0BnI,KAA1B;AACD;AACF;AAT2B,OAAD,CAA7B;AAWD;AACF;;AAEsB,QAAjBkE,iBAAiB,GAAI;AACzB,SAAKwE,gBAAL,GAAwB,IAAxB;;AACA,QAAI,KAAK5I,KAAT,EAAgB;AACd,UAAI;AACF,cAAM6I,KAAK,GAAG,MAAM,KAAK7I,KAAL,CAAW8I,SAAX,CAAqB,KAAK5G,UAA1B,CAApB;AACA/+B,QAAAA,OAAK,CAAE,uBAAsB0lC,KAAM,oDAAmD,KAAK3G,UAAW,WAAjG,CAAL;AACD,OAHD,CAGE,OAAOvmC,GAAP,EAAY;AACZwH,QAAAA,OAAK,CAACxH,GAAD,CAAL;AACA,cAAM,IAAIuE,KAAJ,CAAW,qCAAoC,KAAKgiC,UAAW,KAAIvmC,GAAG,CAACwE,OAAJ,IAAexE,GAAI,EAAtF,CAAN;AACD;AACF;AACF;;AAEwB,QAAnBkpC,mBAAmB,GAAI;AAC3B,SAAK+D,gBAAL,GAAwB,KAAxB;;AACA,QAAI,KAAK5I,KAAT,EAAgB;AACd,UAAI;AACF,cAAM,KAAKA,KAAL,CAAW+I,WAAX,CAAuB,KAAK7G,UAA5B,CAAN;AACA/+B,QAAAA,OAAK,CAAE,2BAA0B,KAAK++B,UAAW,WAA5C,CAAL;AACD,OAHD,CAGE,OAAOvmC,GAAP,EAAY;AACZwH,QAAAA,OAAK,CAACxH,GAAD,CAAL;AACA,cAAM,IAAIuE,KAAJ,CAAW,uCAAsC,KAAKgiC,UAAW,KAAIvmC,GAAG,CAACwE,OAAJ,IAAexE,GAAI,EAAxF,CAAN;AACD;AACF;AACF;;AAEkB,QAAbopC,aAAa,GAAI;AACrB,QAAI,KAAK/E,KAAT,EAAgB;AACd,WAAKA,KAAL,CAAWT,UAAX;AACA,WAAKS,KAAL,GAAa,IAAb;AACD;;AACD,QAAI,KAAKsB,KAAT,EAAgB;AACd,WAAKA,KAAL,CAAW0H,KAAX;AACA,WAAK1H,KAAL,GAAa,IAAb;AACD;AACF;;AAEgB,QAAX2H,WAAW,GAAI;AACnB,QAAI,CAAC,KAAKhH,cAAV,EAA0B;;AAE1B,QAAI,KAAKn+B,IAAL,CAAUtJ,YAAY,CAAC/E,mBAAvB,CAAJ,EAAiD;AAC/C,YAAM0xC,GAAG,GAAG,KAAKlD,gBAAL,CAAsBzpC,YAAY,CAAC/E,mBAAnC,EAAwD,KAAxD,CAAZ;;AACA,YAAMyzC,IAAI,GAAG,KAAK9B,YAAL,CAAkB5sC,YAAY,CAAC9E,oBAA/B,CAAb;;AACA,YAAMgnC,OAAO,GAAG,KAAK0K,YAAL,CAAkB5sC,YAAY,CAACxE,uBAA/B,CAAhB;;AACA,YAAMmzC,UAAU,GAAG;AACjBtI,QAAAA,MAAM,EAAEqI,IADS;AAEjB/B,QAAAA,GAAG,EAAEA,GAFY;AAGjBE,QAAAA,kBAAkB,EAAE,IAHH;AAIjB3K,QAAAA,OAAO,EAAEA;AAJQ,OAAnB;;AAMA,UAAI,KAAK54B,IAAL,CAAUtJ,YAAY,CAAC3E,uBAAvB,CAAJ,EAAqD;AACnD,YAAI;AACFszC,UAAAA,UAAU,CAAC7B,OAAX,GAAqB,KAAKrD,gBAAL,CAAsBzpC,YAAY,CAAC3E,uBAAnC,EAA4D,IAA5D,CAArB;AACD,SAFD,CAEE,OAAO8F,GAAP,EAAY;AACZwH,UAAAA,OAAK,CAAE,uEAAsExH,GAAG,CAACwE,OAAQ,GAApF,CAAL;AACA;AACD;AACF;;AACD,UAAI,KAAK2D,IAAL,CAAUtJ,YAAY,CAAC7E,oBAAvB,CAAJ,EAAkD;AAChD,cAAM4xC,OAAO,GAAG,KAAKH,YAAL,CAAkB5sC,YAAY,CAAC5E,wBAA/B,CAAhB;;AACA,YAAI;AACFuzC,UAAAA,UAAU,CAACnrB,IAAX,GAAkB,KAAKimB,gBAAL,CAAsBzpC,YAAY,CAAC7E,oBAAnC,EAAyD,CAAC4xC,OAA1D,CAAlB;AACA4B,UAAAA,UAAU,CAACzrB,IAAX,GAAkB,CAAC6pB,OAAnB;AACD,SAHD,CAGE,OAAO5rC,GAAP,EAAY;AACZwH,UAAAA,OAAK,CAAE,iEAAgExH,GAAG,CAACwE,OAAQ,GAA9E,CAAL;AACA;AACD;AACF;;AACD,WAAK0nC,kBAAL,CAAwBsB,UAAxB;;AAEA,UAAI;AACF,cAAM3pB,WAAW,CAAC,KAAK1b,IAAN,EAAY,KAAKm/B,eAAjB,EAAkChlC,MAAM,CAACC,MAAP,CAAc;AAAE4oC,UAAAA,cAAc,EAAEqC;AAAlB,SAAd,EAA8C,KAAK3F,IAAnD,CAAlC,CAAjB;AACD,OAFD,CAEE,OAAO7nC,GAAP,EAAY;AACZwH,QAAAA,OAAK,CAAE,iDAAgDxH,GAAG,CAACwE,OAAQ,GAA9D,CAAL;AACA;AACD;;AACDu+B,MAAAA,2BAAO,CAACyK,UAAD,EAAa,OAAOxtC,GAAP,EAAY8d,QAAZ,EAAsBuE,IAAtB,KAA+B;AACjD,YAAIriB,GAAJ,EAAS;AACPwH,UAAAA,OAAK,CAAE,qCAAoCxH,GAAG,CAACwE,OAAQ,cAAaoB,IAAI,CAACC,SAAL,CAAe2nC,UAAf,CAA2B,EAA1F,CAAL;AACD,SAFD,MAEO;AACL,cAAI1vB,QAAQ,CAACstB,UAAT,IAAuB,GAA3B,EAAgC;AAC9B5jC,YAAAA,OAAK,CAAE,oCAAmCsW,QAAQ,CAACstB,UAAW,IAAGttB,QAAQ,CAACutB,aAAc,cAAazlC,IAAI,CAACC,SAAL,CAAe2nC,UAAf,CAA2B,EAA3H,CAAL;AACD,WAFD,MAEO,IAAInrB,IAAJ,EAAU;AACf7a,YAAAA,OAAK,CAAE,mCAAkCsW,QAAQ,CAACstB,UAAW,WAAUlF,KAAW,CAAC5jB,iBAAZ,CAA8BD,IAA9B,CAAoC,EAAtG,CAAL;;AAEA,gBAAI;AACFA,cAAAA,IAAI,GAAG,MAAM,KAAKymB,kBAAL,CAAwBzmB,IAAxB,CAAb;AACD,aAFD,CAEE,OAAOriB,GAAP,EAAY;AACZwH,cAAAA,OAAK,CAAE,2DAA0DxH,GAAG,CAACwE,OAAQ,EAAxE,CAAL;AACA;AACD;;AACD,gBAAI6d,IAAJ,EAAU;AACRlF,cAAAA,UAAU,CAAC,MAAM,KAAK6pB,iBAAL,CAAuB3kB,IAAvB,EAA6B,IAA7B,EAAmC,CAAC,CAAC,KAAKla,IAAL,CAAUtJ,YAAY,CAACvE,8BAAvB,CAArC,CAAP,EAAqG,CAArG,CAAV;AACD,aAFD,MAEO;AACLkN,cAAAA,OAAK,CAAC,oEAAD,CAAL;AACD;AACF,WAdM,MAcA;AACLA,YAAAA,OAAK,CAAE,mCAAkCsW,QAAQ,CAACstB,UAAW,cAAxD,CAAL;AACD;AACF;AACF,OAxBM,CAAP;AAyBD;AACF;;AAEkB,QAAbzC,aAAa,GAAI;AACrB,QAAI,KAAKxgC,IAAL,CAAUtJ,YAAY,CAAC/E,mBAAvB,CAAJ,EAAiD;AAC/C,WAAK2zC,YAAL,GAAoBC,WAAW,CAAC,KAAKJ,WAAL,CAAiB9rC,IAAjB,CAAsB,IAAtB,CAAD,EAA8B,KAAK2G,IAAL,CAAUtJ,YAAY,CAACzE,wBAAvB,CAA9B,CAA/B;AACAoN,MAAAA,OAAK,CAAE,gDAA+C,KAAKW,IAAL,CAAUtJ,YAAY,CAAC/E,mBAAvB,CAA4C,eAAc,KAAKqO,IAAL,CAAUtJ,YAAY,CAACzE,wBAAvB,CAAiD,GAA5J,CAAL;AACD;AACF;;AAEiB,QAAZ+uC,YAAY,GAAI;AACpB,QAAI,KAAKsE,YAAT,EAAuB;AACrBE,MAAAA,aAAa,CAAC,KAAKF,YAAN,CAAb;AACA,WAAKA,YAAL,GAAoB,IAApB;AACAjmC,MAAAA,OAAK,CAAE,gDAA+C,KAAKW,IAAL,CAAUtJ,YAAY,CAAC/E,mBAAvB,CAA4C,GAA7F,CAAL;AACD;AACF;;AAEc,QAAT+uC,SAAS,CAAE+E,SAAF,EAAa;AAC1B,UAAMpC,GAAG,GAAG,KAAKlD,gBAAL,CAAuB,GAAEsF,SAAU,MAAnC,EAA0C,KAA1C,CAAZ;;AACA,UAAML,IAAI,GAAG,KAAK9B,YAAL,CAAmB,GAAEmC,SAAU,OAA/B,CAAb;;AACA,UAAM7M,OAAO,GAAG,KAAK0K,YAAL,CAAmB,GAAEmC,SAAU,UAA/B,KAA6C,KAAKnC,YAAL,CAAkB5sC,YAAY,CAACzF,kBAA/B,CAA7D;;AACA,UAAMy0C,UAAU,GAAG;AACjB3I,MAAAA,MAAM,EAAEqI,IADS;AAEjB/B,MAAAA,GAAG,EAAEA,GAFY;AAGjBE,MAAAA,kBAAkB,EAAE,IAHH;AAIjB3K,MAAAA,OAAO,EAAEA;AAJQ,KAAnB;;AAMA,QAAI,KAAK54B,IAAL,CAAW,GAAEylC,SAAU,UAAvB,CAAJ,EAAuC;AACrC,UAAI;AACFC,QAAAA,UAAU,CAAClC,OAAX,GAAqB,KAAKrD,gBAAL,CAAuB,GAAEsF,SAAU,UAAnC,EAA8C,IAA9C,CAArB;AACD,OAFD,CAEE,OAAO5tC,GAAP,EAAY;AACZ,cAAM,IAAIuE,KAAJ,CAAW,0BAAyBqpC,SAAU,oBAAmB5tC,GAAG,CAACwE,OAAQ,GAA7E,CAAN;AACD;AACF;;AACD,QAAI,KAAK2D,IAAL,CAAW,GAAEylC,SAAU,OAAvB,CAAJ,EAAoC;AAClC,YAAMhC,OAAO,GAAG,KAAKH,YAAL,CAAmB,GAAEmC,SAAU,WAA/B,CAAhB;;AACA,UAAI;AACFC,QAAAA,UAAU,CAACxrB,IAAX,GAAkB,KAAKimB,gBAAL,CAAuB,GAAEsF,SAAU,OAAnC,EAA2C,CAAChC,OAA5C,CAAlB;AACAiC,QAAAA,UAAU,CAAC9rB,IAAX,GAAkB,CAAC6pB,OAAnB;AACD,OAHD,CAGE,OAAO5rC,GAAP,EAAY;AACZ,cAAM,IAAIuE,KAAJ,CAAW,uBAAsBqpC,SAAU,iBAAgB5tC,GAAG,CAACwE,OAAQ,GAAvE,CAAN;AACD;AACF;;AACD,SAAK0nC,kBAAL,CAAwB2B,UAAxB;;AAEA,UAAMhqB,WAAW,CAAC,KAAK1b,IAAN,EAAY,KAAKo/B,YAAL,CAAkBqG,SAAlB,CAAZ,EAA0CtrC,MAAM,CAACC,MAAP,CAAc;AAAE4oC,MAAAA,cAAc,EAAE0C;AAAlB,KAAd,EAA8C,KAAKhG,IAAnD,CAA1C,CAAjB;;AAEA,UAAMznB,OAAO,GAAG,KAAKqrB,YAAL,CAAmB,GAAEmC,SAAU,UAA/B,CAAhB;;AACApmC,IAAAA,OAAK,CAAE,aAAYomC,SAAU,oBAAmBhoC,IAAI,CAACC,SAAL,CAAegoC,UAAf,CAA2B,EAAtE,CAAL;AACA,UAAM/vB,QAAQ,GAAG,MAAM,KAAKquB,mBAAL,CAAyB0B,UAAzB,EAAqCztB,OAArC,CAAvB;AACA,WAAOtC,QAAP;AACD;;AAEDouB,EAAAA,kBAAkB,CAAE2B,UAAF,EAAc;AAC9BA,IAAAA,UAAU,CAACC,SAAX,GAAuB,CAAC,CAAC,KAAK3lC,IAAL,CAAUtJ,YAAY,CAAC7F,qBAAvB,CAAzB;;AACA,QAAI,KAAKmP,IAAL,CAAUtJ,YAAY,CAAC9F,oBAAvB,CAAJ,EAAkD;AAChD80C,MAAAA,UAAU,CAAClI,KAAX,GAAmB,KAAKx9B,IAAL,CAAUtJ,YAAY,CAAC9F,oBAAvB,CAAnB;AACD;;AACD,QAAI,KAAKoP,IAAL,CAAUtJ,YAAY,CAAC3F,wBAAvB,CAAJ,EAAsD;AACpDgJ,MAAAA,0BAAC,CAAC6rC,KAAF,CAAQF,UAAR,EAAoB,KAAK1lC,IAAL,CAAUtJ,YAAY,CAAC3F,wBAAvB,CAApB;AACD;AACF;;AArwBwC,CAA3C;;ACnBA,MAAMsO,OAAK,GAAGD,yBAAgB,CAAC,kDAAD,CAA9B;AAIA,MAAM;AAAEjD,EAAAA;AAAF,IAAkBmD,aAAxB;;AAEA,MAAMumC,cAAc,GAAIC,aAAD,IAAmB;AACxC,MAAIA,aAAa,KAAK,YAAtB,EAAoC;AAClC,WAAO7H,qBAAP;AACD;AACF,CAJD;;AAMA,MAAM8H,oBAAoB,GAAIC,QAAD,IAAc;AACzC,MAAI;AACF,UAAMC,IAAI,GAAGtmC,eAAAA,CAAQqmC,QAAQ,GAAG,eAAnBrmC,CAAb;;AACA,QAAIsmC,IAAI,CAACC,OAAL,KAAiBr9B,SAArB,EAAgC;AAC9B,aAAO,SAAP;AACD,KAFD,MAEO;AACL,aAAOo9B,IAAI,CAACC,OAAZ;AACD;AACF,GAPD,CAOE,OAAOxsB,CAAP,EAAU;AACV,QAAIA,CAAC,CAACzK,IAAF,KAAW,kBAAf,EAAmC;AACjC,aAAO,yCAAP;AACD;;AACD,WAAO,iBAAP;AACD;AACF,CAdD;;AAgBA,MAAMk3B,mBAAmB,GAAG,CAACrkC,WAAD,EAAcV,IAAd,KAAuB;AACjD,MAAI;AACF,WAAO,IAAIU,WAAJ,CAAgBV,IAAhB,CAAP;AACD,GAFD,CAEE,OAAOvJ,GAAP,EAAY;;AAEd,MAAIkC,0BAAC,CAACC,UAAF,CAAa8H,WAAb,CAAJ,EAA+B;AAC7B,UAAMjD,MAAM,GAAGiD,WAAW,CAACV,IAAD,CAA1B;;AACA,QAAIvC,MAAM,IAAIA,MAAM,CAAC5E,QAArB,EAA+B;AAC7B,aAAO4E,MAAP;AACD,KAFD,MAEO;AACL,aAAO;AACL5E,QAAAA,QAAQ,EAAGH,GAAD,IAAS;AACjB,gBAAM6b,QAAQ,GAAG7T,WAAW,CAAChI,GAAD,EAAMsH,IAAN,CAA5B;;AACA,cAAIuU,QAAQ,IAAIvU,IAAI,CAAC88B,YAArB,EAAmC;AACjC,gBAAInkC,0BAAC,CAACiI,QAAF,CAAW2T,QAAX,CAAJ,EAA0B;AACxBX,cAAAA,UAAU,CAAC,MAAM5T,IAAI,CAAC88B,YAAL,CAAkB;AAAEhkC,gBAAAA,WAAW,EAAEyb;AAAf,eAAlB,CAAP,EAAqD,CAArD,CAAV;AACD,aAFD,MAEO;AACLX,cAAAA,UAAU,CAAC,MAAM5T,IAAI,CAAC88B,YAAL,CAAkBvoB,QAAlB,CAAP,EAAoC,CAApC,CAAV;AACD;AACF;AACF;AAVI,OAAP;AAYD;AACF,GAlBD,MAkBO;AACL,UAAM,IAAIvZ,KAAJ,CAAU,iDAAV,CAAN;AACD;AACF,CA1BD;;AA4BA,MAAMgqC,eAAa,GAAG,CAACN,aAAD,EAAgBO,UAAhB,EAA4BjlC,IAA5B,KAAqC;AACzD,QAAMklC,gBAAgB,GAAGD,UAAU,IAAIP,aAAvC;;AACA,QAAMvkC,YAAY,GAAG,CAACvB,IAAD,EAAOumC,IAAP,EAAajpC,KAAb,KAAuB;AAC1C,QAAI,CAAC0C,IAAI,CAACtJ,YAAY,CAACR,qBAAd,CAAT,EAA+C;AAC7C,YAAM,IAAIiG,WAAJ,CACH,gDAA+CoqC,IAAK,kBADjD,EAEJ;AACErpC,QAAAA,IAAI,EAAE,UADR;AAEEG,QAAAA,OAAO,EAAE,cAFX;AAGED,QAAAA,MAAM,EAAE,iCAHV;AAIEE,QAAAA,KAAK,EAAE;AACLpH,UAAAA,qBAAqB,EAAE8J,IAAI,CAACtJ,YAAY,CAACR,qBAAd,CADtB;AAELqwC,UAAAA,IAAI,EAAEA,IAFD;AAGL,aAAGjpC;AAHE;AAJT,OAFI,CAAN;AAaD;AACF,GAhBD;;AAkBA,MAAIuoC,cAAc,CAACS,gBAAD,CAAlB,EAAsC;AACpC,UAAME,cAAc,GAAG,KAAKX,cAAc,CAACS,gBAAD,CAAnB,EAAuCllC,IAAvC,CAAvB;AACA/B,IAAAA,OAAK,CAAC,oDAAD,CAAL;AACA,WAAOmnC,cAAP;AACD;;AACD,MAAIzsC,0BAAC,CAACC,UAAF,CAAassC,gBAAb,CAAJ,EAAoC;AAClC,UAAME,cAAc,GAAGF,gBAAgB,CAACllC,IAAD,CAAvC;AACA/B,IAAAA,OAAK,CAAC,yCAAD,CAAL;AACA,WAAOmnC,cAAP;AACD;;AACD,QAAM9jC,OAAO,GAAG,EAAhB;;AAEA,MAAI3I,0BAAC,CAACiI,QAAF,CAAWskC,gBAAX,CAAJ,EAAkC;AAChC,UAAM9iC,WAAW,GAAGhC,wBAAI,CAAChK,OAAL,CAAaiM,OAAO,CAACC,GAAR,EAAb,EAA4B4iC,gBAA5B,CAApB;;AACA,QAAI3iC,sBAAE,CAACC,UAAH,CAAcJ,WAAd,CAAJ,EAAgC;AAC9BjC,MAAAA,YAAY,CAACH,IAAI,CAACpB,IAAN,EAAY,gBAAZ,EAA8B;AAAEqmC,QAAAA,UAAF;AAAcP,QAAAA;AAAd,OAA9B,CAAZ;;AACA,UAAI;AACF,YAAIW,MAAM,GAAG9mC,eAAAA,CAAQ6D,WAAR7D,CAAb;;AACA,YAAI8mC,MAAM,CAACrjC,OAAX,EAAoB;AAClBqjC,UAAAA,MAAM,GAAGA,MAAM,CAACrjC,OAAhB;AACD;;AACD,YAAI,CAACqjC,MAAM,CAACC,aAAR,IAAyB,CAACD,MAAM,CAAC3kC,WAArC,EAAkD;AAChDY,UAAAA,OAAO,CAACpL,IAAR,CAAc,qCAAoCkM,WAAY,8CAA9D;AACD,SAFD,MAEO;AACL,gBAAMgjC,cAAc,GAAGL,mBAAmB,CAACM,MAAM,CAAC3kC,WAAR,EAAqBV,IAArB,CAA1C;AACA/B,UAAAA,OAAK,CAAE,6BAA4BmE,WAAY,EAA1C,CAAL;AACA,iBAAOgjC,cAAP;AACD;AACF,OAZD,CAYE,OAAO3uC,GAAP,EAAY;AACZ6K,QAAAA,OAAO,CAACpL,IAAR,CAAc,8BAA6BkM,WAAY,aAAY3L,GAAG,CAACwE,OAAQ,EAA/E;AACD;AACF;;AAED,QAAI;AACF,UAAIoqC,MAAM,GAAG9mC,eAAAA,CAAQ2mC,gBAAR3mC,CAAb;;AACA,UAAI8mC,MAAM,CAACrjC,OAAX,EAAoB;AAClBqjC,QAAAA,MAAM,GAAGA,MAAM,CAACrjC,OAAhB;AACD;;AACD,UAAI,CAACqjC,MAAM,CAACC,aAAR,IAAyB,CAACD,MAAM,CAAC3kC,WAArC,EAAkD;AAChDY,QAAAA,OAAO,CAACpL,IAAR,CAAc,qCAAoCgvC,gBAAiB,8CAAnE;AACD,OAFD,MAEO;AACL,cAAME,cAAc,GAAGL,mBAAmB,CAACM,MAAM,CAAC3kC,WAAR,EAAqBV,IAArB,CAA1C;AACA/B,QAAAA,OAAK,CAAE,6BAA4BinC,gBAAiB,uBAAsBP,oBAAoB,CAACO,gBAAD,CAAmB,EAA5G,CAAL;AACA,eAAOE,cAAP;AACD;AACF,KAZD,CAYE,OAAO3uC,GAAP,EAAY;AACZ6K,MAAAA,OAAO,CAACpL,IAAR,CAAc,8BAA6BgvC,gBAAiB,aAAYzuC,GAAG,CAACwE,OAAQ,EAApF;AACD;;AAED,UAAMsqC,cAAc,GAAI,oBAAmBL,gBAAiB,EAA5D;;AACA,QAAI;AACF,UAAIG,MAAM,GAAG9mC,eAAAA,CAAQgnC,cAARhnC,CAAb;;AACA,UAAI8mC,MAAM,CAACrjC,OAAX,EAAoB;AAClBqjC,QAAAA,MAAM,GAAGA,MAAM,CAACrjC,OAAhB;AACD;;AACD,UAAI,CAACqjC,MAAM,CAACC,aAAR,IAAyB,CAACD,MAAM,CAAC3kC,WAArC,EAAkD;AAChDY,QAAAA,OAAO,CAACpL,IAAR,CAAc,yBAAwBqvC,cAAe,8CAArD;AACD,OAFD,MAEO;AACL,cAAMH,cAAc,GAAGL,mBAAmB,CAACM,MAAM,CAAC3kC,WAAR,EAAqBV,IAArB,CAA1C;AACA/B,QAAAA,OAAK,CAAE,iBAAgBsnC,cAAe,8BAA6BZ,oBAAoB,CAACY,cAAD,CAAiB,EAAnG,CAAL;AACA,eAAOH,cAAP;AACD;AACF,KAZD,CAYE,OAAO3uC,GAAP,EAAY;AACZ6K,MAAAA,OAAO,CAACpL,IAAR,CAAc,yBAAwBqvC,cAAe,6BAA4BA,cAAe,OAAM9uC,GAAG,CAACwE,OAAQ,EAAlH;AACD;AACF;;AACD,QAAM,IAAID,KAAJ,CAAW,oCAAmCsG,OAAO,CAAC9E,IAAR,CAAa,MAAb,CAAqB,EAAnE,CAAN;AACD,CAvFD;;AAyFA,WAAc,GAAG;AACfioC,EAAAA,cADe;AAEfE,EAAAA,oBAFe;AAGfK,iBAAAA;AAHe,CAAjB;;AClJA,MAAM/mC,OAAK,GAAGD,yBAAgB,CAAC,2CAAD,CAA9B;AAKA,MAAM;AAAEgnC,EAAAA;AAAF,IAAoB9mC,OAA1B;AAGA,8BAAc,GAAG,MAAMsnC,wBAAN,SAAuC7N,eAAvC,CAAqD;AACtD,QAAR5Z,QAAQ,GAAI;AAChB,UAAM,MAAMA,QAAN,EAAN;AACA,SAAKqnB,cAAL,GAAsBJ,aAAa,CACjC,KAAKpmC,IAAL,CAAUtJ,YAAY,CAACnI,aAAvB,CADiC,EAEjC,KAAKyR,IAAL,CAAUtJ,YAAY,CAAClI,gBAAvB,CAFiC,EAGjC;AACE2I,MAAAA,SAAS,EAAE,IADb;AAEE+mC,MAAAA,YAAY,EAAGpkC,GAAD,IAAS,KAAK6gC,aAAL,CAAmB7gC,GAAnB,CAFzB;AAGEka,MAAAA,YAAY,EAAE,KAAKA,YAHrB;AAIEhU,MAAAA,IAAI,EAAE,KAAKA,IAJb;AAKEq1B,MAAAA,OAAO,EAAE,KAAKA,OALhB;AAME4D,MAAAA,IAAI,EAAE,KAAKA;AANb,KAHiC,CAAnC;;AAWA,QAAI,CAAC,KAAKuN,cAAV,EAA0B;AACxB,YAAM,IAAIpqC,KAAJ,CAAU,8BAAV,CAAN;AACD;;AACD,QAAI,CAAC,KAAKoqC,cAAL,CAAoBvsC,QAAzB,EAAmC;AACjC,YAAM,IAAImC,KAAJ,CAAU,mDAAV,CAAN;AACD;;AACD,QAAI,KAAKoqC,cAAL,CAAoBrnB,QAAxB,EAAkC;AAChC,YAAM,KAAKqnB,cAAL,CAAoBrnB,QAApB,EAAN;AACD;;AACD,SAAK0nB,gBAAL,GAAwB,IAAI/uB,aAAJ,CAAgB,KAAK9X,IAArB,EAA2B,OAA3B,CAAxB;AACA,SAAK8mC,gBAAL,GAAwB,IAAIhvB,aAAJ,CAAgB,KAAK9X,IAArB,EAA2B,OAA3B,CAAxB;AACA,SAAK+mC,mBAAL,GAA2B,IAAIjvB,aAAJ,CAAgB,KAAK9X,IAArB,EAA2B,UAA3B,CAA3B;AACA,SAAKgnC,eAAL,GAAuB,IAAIlvB,aAAJ,CAAgB,KAAK9X,IAArB,EAA2B,MAA3B,CAAvB;AACA,SAAKinC,gBAAL,GAAwB,IAAInvB,aAAJ,CAAgB,KAAK9X,IAArB,EAA2B,OAA3B,CAAxB;AACD;;AAEDtI,EAAAA,KAAK,GAAI;AACP,QAAI;AACF,aAAO,MAAMA,KAAN,GAAcC,IAAd,CAAmB,MAAM8xB,gCAAY,CAAC,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9D,eAAO,CAAC,KAAK6c,cAAL,CAAoB9uC,KAApB,GAA6B,KAAK8uC,cAAL,CAAoB9uC,KAApB,MAA+BH,OAAO,CAACC,OAAR,EAA5D,GAAiFD,OAAO,CAACC,OAAR,EAAlF,EACJI,KADI,CACGC,GAAD,IAAS;AACd,cAAI,KAAKgvC,gBAAL,CAAsBruB,WAAtB,CAAkC3gB,GAAlC,CAAJ,EAA4C;AAC1CwH,YAAAA,OAAK,CAAE,gBAAesqB,MAAO,0BAAxB,CAAL;AACAD,YAAAA,KAAK,CAAC7xB,GAAD,CAAL;AACD,WAHD,MAGO;AACL,kBAAMA,GAAN;AACD;AACF,SARI,CAAP;AASD,OAV2C,EAUzC,KAAKgvC,gBAAL,CAAsB7uB,aAVmB,CAArC,EAWJrgB,IAXI,CAWC,MAAM,IAXP,CAAP;AAYD,KAbD,CAaE,OAAOE,GAAP,EAAY;AACZ,aAAON,OAAO,CAACE,MAAR,CAAe,IAAI2E,KAAJ,CAAW,iCAAgCsU,wBAAI,CAACC,OAAL,CAAa9Y,GAAb,CAAkB,EAA7D,CAAf,CAAP;AACD;AACF;;AAEDO,EAAAA,KAAK,GAAI;AACP,SAAK4b,YAAL,CAAkBC,IAAlB,CAAuBC,MAAM,CAAChZ,kBAA9B,EAAkD,IAAlD;;AAEA,QAAI;AACF,aAAO,MAAM9C,KAAN,GAAcT,IAAd,CAAmB,MAAM8xB,gCAAY,CAAC,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9D,eAAO,CAAC,KAAK6c,cAAL,CAAoBpuC,KAApB,GAA6B,KAAKouC,cAAL,CAAoBpuC,KAApB,MAA+Bb,OAAO,CAACC,OAAR,EAA5D,GAAiFD,OAAO,CAACC,OAAR,EAAlF,EACJI,KADI,CACGC,GAAD,IAAS;AACd,cAAI,KAAKivC,gBAAL,CAAsBtuB,WAAtB,CAAkC3gB,GAAlC,CAAJ,EAA4C;AAC1CwH,YAAAA,OAAK,CAAE,gBAAesqB,MAAO,0BAAxB,CAAL;AACAD,YAAAA,KAAK,CAAC7xB,GAAD,CAAL;AACD,WAHD,MAGO;AACL,kBAAMA,GAAN;AACD;AACF,SARI,CAAP;AASD,OAV2C,EAUzC,KAAKivC,gBAAL,CAAsB9uB,aAVmB,CAArC,EAWJrgB,IAXI,CAWE2E,OAAD,IAAa;AACjB,aAAK0X,YAAL,CAAkBC,IAAlB,CAAuBC,MAAM,CAAC/Y,iBAA9B,EAAiD,IAAjD,EAAuDmB,OAAvD;AACA,eAAO,IAAP;AACD,OAdI,EAcF1E,KAdE,CAcKC,GAAD,IAAS;AAChB,aAAKmc,YAAL,CAAkBC,IAAlB,CAAuBC,MAAM,CAAC9Y,qBAA9B,EAAqD,IAArD,EAA2DvD,GAA3D;AACA,cAAMA,GAAN;AACD,OAjBI,CAAP;AAkBD,KAnBD,CAmBE,OAAOA,GAAP,EAAY;AACZ,WAAKmc,YAAL,CAAkBC,IAAlB,CAAuBC,MAAM,CAAC9Y,qBAA9B,EAAqD,IAArD,EAA2DvD,GAA3D;AACA,aAAON,OAAO,CAACE,MAAR,CAAe,IAAI2E,KAAJ,CAAW,iCAAgCsU,wBAAI,CAACC,OAAL,CAAa9Y,GAAb,CAAkB,EAA7D,CAAf,CAAP;AACD;AACF;;AAEDmiC,EAAAA,YAAY,CAAEprB,OAAF,EAAW;AACrB,QAAI;AACF,aAAO6a,gCAAY,CAAC,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,eAAO,CAAC,KAAK6c,cAAL,CAAoBvsC,QAApB,CAA6B2U,OAA7B,KAAyCrX,OAAO,CAACC,OAAR,EAA1C,EACJI,KADI,CACGC,GAAD,IAAS;AACd,cAAI,KAAKkvC,mBAAL,CAAyBvuB,WAAzB,CAAqC3gB,GAArC,CAAJ,EAA+C;AAC7CwH,YAAAA,OAAK,CAAE,mBAAkBsqB,MAAO,0BAA3B,CAAL;AACAD,YAAAA,KAAK,CAAC7xB,GAAD,CAAL;AACD,WAHD,MAGO;AACL,kBAAMA,GAAN;AACD;AACF,SARI,CAAP;AASD,OAVkB,EAUhB,KAAKkvC,mBAAL,CAAyB/uB,aAVT,CAAZ,CAWJrgB,IAXI,CAWC,MAAM;AACV,aAAKqc,YAAL,CAAkBC,IAAlB,CAAuBC,MAAM,CAACtY,iBAA9B,EAAiD,IAAjD,EAAuDgT,OAAvD;AACA,eAAO,IAAP;AACD,OAdI,CAAP;AAeD,KAhBD,CAgBE,OAAO/W,GAAP,EAAY;AACZ,aAAON,OAAO,CAACE,MAAR,CAAe,IAAI2E,KAAJ,CAAW,oCAAmCsU,wBAAI,CAACC,OAAL,CAAa9Y,GAAb,CAAkB,EAAhE,CAAf,CAAP;AACD;AACF;;AAED+B,EAAAA,IAAI,GAAI;AACN,SAAKoa,YAAL,CAAkBC,IAAlB,CAAuBC,MAAM,CAAC7Y,kBAA9B,EAAkD,IAAlD;;AAEA,QAAI;AACF,aAAO,MAAMzB,IAAN,GAAajC,IAAb,CAAkB,MAAM8xB,gCAAY,CAAC,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC7D,eAAO,CAAC,KAAK6c,cAAL,CAAoB5sC,IAApB,GAA4B,KAAK4sC,cAAL,CAAoB5sC,IAApB,MAA8BrC,OAAO,CAACC,OAAR,EAA1D,GAA+ED,OAAO,CAACC,OAAR,EAAhF,EACJI,KADI,CACGC,GAAD,IAAS;AACd,cAAI,KAAKmvC,eAAL,CAAqBxuB,WAArB,CAAiC3gB,GAAjC,CAAJ,EAA2C;AACzCwH,YAAAA,OAAK,CAAE,eAAcsqB,MAAO,0BAAvB,CAAL;AACAD,YAAAA,KAAK,CAAC7xB,GAAD,CAAL;AACD,WAHD,MAGO;AACL,kBAAMA,GAAN;AACD;AACF,SARI,CAAP;AASD,OAV0C,EAUxC,KAAKmvC,eAAL,CAAqBhvB,aAVmB,CAApC,EAWJrgB,IAXI,CAWE2E,OAAD,IAAa;AACjB,aAAK0X,YAAL,CAAkBC,IAAlB,CAAuBC,MAAM,CAAC5Y,iBAA9B,EAAiD,IAAjD,EAAuDgB,OAAvD;AACA,eAAO,IAAP;AACD,OAdI,EAcF1E,KAdE,CAcKC,GAAD,IAAS;AAChB,aAAKmc,YAAL,CAAkBC,IAAlB,CAAuBC,MAAM,CAAC3Y,oBAA9B,EAAoD,IAApD,EAA0D1D,GAA1D;AACA,cAAMA,GAAN;AACD,OAjBI,CAAP;AAkBD,KAnBD,CAmBE,OAAOA,GAAP,EAAY;AACZ,WAAKmc,YAAL,CAAkBC,IAAlB,CAAuBC,MAAM,CAAC3Y,oBAA9B,EAAoD,IAApD,EAA0D1D,GAA1D;AACA,aAAON,OAAO,CAACE,MAAR,CAAe,IAAI2E,KAAJ,CAAW,gCAA+BsU,wBAAI,CAACC,OAAL,CAAa9Y,GAAb,CAAkB,EAA5D,CAAf,CAAP;AACD;AACF;;AAED+C,EAAAA,KAAK,GAAI;AACP,SAAKoZ,YAAL,CAAkBC,IAAlB,CAAuBC,MAAM,CAAC1Y,kBAA9B,EAAkD,IAAlD;;AACA,QAAI;AACF,aAAOiuB,gCAAY,CAAC,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,eAAO,CAAC,KAAK6c,cAAL,CAAoB5rC,KAApB,GAA6B,KAAK4rC,cAAL,CAAoB5rC,KAApB,MAA+BrD,OAAO,CAACC,OAAR,EAA5D,GAAiFD,OAAO,CAACC,OAAR,EAAlF,EACJI,KADI,CACGC,GAAD,IAAS;AACd,cAAI,KAAKovC,gBAAL,CAAsBzuB,WAAtB,CAAkC3gB,GAAlC,CAAJ,EAA4C;AAC1CwH,YAAAA,OAAK,CAAE,gBAAesqB,MAAO,0BAAxB,CAAL;AACAD,YAAAA,KAAK,CAAC7xB,GAAD,CAAL;AACD,WAHD,MAGO;AACL,kBAAMA,GAAN;AACD;AACF,SARI,CAAP;AASD,OAVkB,EAUhB,KAAKovC,gBAAL,CAAsBjvB,aAVN,CAAZ,CAWJrgB,IAXI,CAWC,MAAM,MAAMiD,KAAN,EAXP,EAWsBjD,IAXtB,CAW2B,MAAM;AACpC,aAAKqc,YAAL,CAAkBC,IAAlB,CAAuBC,MAAM,CAACzY,iBAA9B,EAAiD,IAAjD;AACA,eAAO,IAAP;AACD,OAdI,EAcF7D,KAdE,CAcKC,GAAD,IAAS;AAChB,aAAKmc,YAAL,CAAkBC,IAAlB,CAAuBC,MAAM,CAACxY,qBAA9B,EAAqD,IAArD,EAA2D7D,GAA3D;AACA,cAAMA,GAAN;AACD,OAjBI,CAAP;AAkBD,KAnBD,CAmBE,OAAOA,GAAP,EAAY;AACZ,WAAKmc,YAAL,CAAkBC,IAAlB,CAAuBC,MAAM,CAACxY,qBAA9B,EAAqD,IAArD,EAA2D7D,GAA3D;AACA,aAAON,OAAO,CAACE,MAAR,CAAe,IAAI2E,KAAJ,CAAW,iCAAgCsU,wBAAI,CAACC,OAAL,CAAa9Y,GAAb,CAAkB,EAA7D,CAAf,CAAP;AACD;AACF;;AAxJmE,CAAtE;;;;ACAA,MAAM;AAAEqvC,EAAAA;AAAF,IAAc9nC,2BAApB;AAEA,MAAMC,OAAK,GAAGC,yBAAgB,CAAC,uBAAD,CAA9B;AAEA,MAAM;AAAE4mC,EAAAA;AAAF,IAAc3mC,UAApB;AASA,eAAc,GAAG,MAAM4nC,SAAN,CAAgB;AAC/BnwC,EAAAA,WAAW,CAAEgJ,IAAI,GAAG,EAAT,EAAaq1B,OAAO,GAAG,EAAvB,EAA2B4D,IAAI,GAAG,EAAlC,EAAsC;AAC/C,SAAKjlB,YAAL,GAAoB,IAAIozB,0BAAJ,EAApB;AAEA,SAAKpnC,IAAL,GAAYjG,0BAAC,CAACkN,SAAF,CAAY8iB,UAAQ,CAACrzB,YAArB,CAAZ;AACA,SAAK2+B,OAAL,GAAet7B,0BAAC,CAACkN,SAAF,CAAY8iB,UAAQ,CAACpzB,OAArB,CAAf;AACA,SAAKsiC,IAAL,GAAYl/B,0BAAC,CAACkN,SAAF,CAAY8iB,UAAQ,CAAClzB,IAArB,CAAZ;AAEA,SAAKwwC,mBAAL,GAA2B,EAA3B;;AACA,SAAKC,qBAAL,CAA2B,CACzB,eADyB,EACR7jC,OAAO,CAAC6K,GAAR,CAAYi5B,QAAZ,IAAyB,YAAW9jC,OAAO,CAAC6K,GAAR,CAAYi5B,QAAS,OADjD,EAEzB,qBAFyB,EAEF9jC,OAAO,CAAC6K,GAAR,CAAYi5B,QAAZ,IAAyB,YAAW9jC,OAAO,CAAC6K,GAAR,CAAYi5B,QAAS,aAFvD,CAA3B;;AAIA,UAAMC,eAAe,GAAG/jC,OAAO,CAAC6K,GAAR,CAAYm5B,aAApC;;AACA,QAAID,eAAJ,EAAqB;AACnB,YAAME,QAAQ,GAAGlmC,wBAAI,CAACmsB,OAAL,CAAa6Z,eAAb,CAAjB;AACA,YAAMG,aAAa,GAAGnmC,wBAAI,CAACC,QAAL,CAAc+lC,eAAd,EAA+B,OAA/B,CAAtB;;AACA,UAAI,CAAC,KAAKF,qBAAL,CAA2B,CAC9BE,eAD8B,EACb/jC,OAAO,CAAC6K,GAAR,CAAYi5B,QAAZ,IAAwB/lC,wBAAI,CAAC5D,IAAL,CAAU8pC,QAAV,EAAqB,GAAEC,aAAc,IAAGlkC,OAAO,CAAC6K,GAAR,CAAYi5B,QAAS,OAA7D,CADX,EAE9B/lC,wBAAI,CAAC5D,IAAL,CAAU8pC,QAAV,EAAqB,GAAEC,aAAc,aAArC,CAF8B,EAEsBlkC,OAAO,CAAC6K,GAAR,CAAYi5B,QAAZ,IAAwB/lC,wBAAI,CAAC5D,IAAL,CAAU8pC,QAAV,EAAqB,GAAEC,aAAc,IAAGlkC,OAAO,CAAC6K,GAAR,CAAYi5B,QAAS,aAA7D,CAF9C,CAA3B,CAAL,EAGI;AACF,cAAM,IAAInrC,KAAJ,CAAW,qCAAoCorC,eAAgB,gBAA/D,CAAN;AACD;AACF;;AACDnoC,IAAAA,OAAK,CAAE,qCAAoC,KAAKgoC,mBAAL,CAAyBzpC,IAAzB,CAA8B,GAA9B,CAAmC,EAAzE,CAAL;AAEA,UAAMgqC,aAAa,GAAGztC,MAAM,CAAC+H,IAAP,CAAYtL,MAAZ,CAAtB;AAEAuD,IAAAA,MAAM,CAAC+H,IAAP,CAAYuB,OAAO,CAAC6K,GAApB,EAAyBnG,MAAzB,CAAgCuR,CAAC,IAAIA,CAAC,CAAChR,UAAF,CAAa,SAAb,CAArC,EAA8D1L,OAA9D,CAAuE6qC,OAAD,IAAa;AACjF,YAAMC,aAAa,GAAGD,OAAO,CAAC//B,OAAR,CAAgB,UAAhB,EAA4B,EAA5B,CAAtB;;AACA,UAAI8/B,aAAa,CAACriB,QAAd,CAAuBuiB,aAAvB,CAAJ,EAA2C;AACzC,aAAKC,UAAL,CAAgB,KAAK1S,OAArB,EAA8B;AAAE,WAACyS,aAAD,GAAiBrkC,OAAO,CAAC6K,GAAR,CAAYu5B,OAAZ;AAAnB,SAA9B;AACD,OAFD,MAEO;AACL,aAAKE,UAAL,CAAgB,KAAK/nC,IAArB,EAA2B;AAAE,WAAC8nC,aAAD,GAAiBrkC,OAAO,CAAC6K,GAAR,CAAYu5B,OAAZ;AAAnB,SAA3B;AACD;;AACD,UAAIA,OAAO,CAACn/B,UAAR,CAAmB,aAAnB,CAAJ,EAAuC;AACrC,cAAMs/B,OAAO,GAAGH,OAAO,CAAC//B,OAAR,CAAgB,cAAhB,EAAgC,EAAhC,CAAhB;AACA,aAAKmxB,IAAL,CAAU+O,OAAV,IAAqBvkC,OAAO,CAAC6K,GAAR,CAAYu5B,OAAZ,CAArB;AACD;AACF,KAXD;AAaA,QAAI7nC,IAAJ,EAAU,KAAK+nC,UAAL,CAAgB,KAAK/nC,IAArB,EAA2BA,IAA3B;AACV,QAAIq1B,OAAJ,EAAa,KAAK0S,UAAL,CAAgB,KAAK1S,OAArB,EAA8BA,OAA9B;AACb,QAAI4D,IAAJ,EAAU,KAAKA,IAAL,GAAYl/B,0BAAC,CAAC6rC,KAAF,CAAQ,KAAK3M,IAAb,EAAmBA,IAAnB,CAAZ;AACX;;AAEDxC,EAAAA,EAAE,CAAE2F,KAAF,EAAS1D,QAAT,EAAmB;AACnB,SAAK1kB,YAAL,CAAkByiB,EAAlB,CAAqB2F,KAArB,EAA4B1D,QAA5B;AACA,WAAO,IAAP;AACD;;AAEDuP,EAAAA,eAAe,CAAEjoC,IAAF,EAAQ;AACrB,SAAK+nC,UAAL,CAAgB,KAAK/nC,IAArB,EAA2BA,IAA3B;;AACA,WAAO,IAAP;AACD;;AAEDkoC,EAAAA,aAAa,CAAE3oB,GAAF,EAAO5Y,KAAP,EAAc;AACzB,SAAKohC,UAAL,CAAgB,KAAK/nC,IAArB,EAA2B;AAAE,OAACuf,GAAD,GAAO5Y;AAAT,KAA3B;;AACA,WAAO,IAAP;AACD;;AAEDwhC,EAAAA,UAAU,CAAE9S,OAAF,EAAW;AACnB,SAAK0S,UAAL,CAAgB,KAAK1S,OAArB,EAA8BA,OAA9B;;AACA,WAAO,IAAP;AACD;;AAED+S,EAAAA,SAAS,CAAEhrC,MAAF,EAAUuJ,KAAV,EAAiB;AACxB,SAAKohC,UAAL,CAAgB,KAAK1S,OAArB,EAA8B;AAAE,OAACj4B,MAAD,GAAUuJ;AAAZ,KAA9B;;AACA,WAAO,IAAP;AACD;;AAED0hC,EAAAA,OAAO,CAAEpP,IAAF,EAAQ;AACb,SAAKA,IAAL,GAAYl/B,0BAAC,CAAC6rC,KAAF,CAAQ,KAAK3M,IAAb,EAAmBA,IAAnB,CAAZ;AACA,WAAO,IAAP;AACD;;AAEDqP,EAAAA,MAAM,CAAE7rC,IAAF,EAAQkK,KAAR,EAAe;AACnB,SAAKsyB,IAAL,CAAUx8B,IAAV,IAAkBkK,KAAlB;AACA,WAAO,IAAP;AACD;;AAED4hC,EAAAA,WAAW,GAAI;AACb,SAAKxxC,MAAL,GAAc,IAAIA,QAAJ,CAAW,IAAX,CAAd;AACA,WAAO,KAAKA,MAAZ;AACD;;AAEDW,EAAAA,KAAK,GAAI;AACP2H,IAAAA,OAAK,CAAE,gCAA+B6mC,OAAQ,EAAzC,CAAL;AACA7mC,IAAAA,OAAK,CAAE,wBAAuBqR,wBAAI,CAACC,OAAL,CAAa,KAAK3Q,IAAlB,CAAwB,EAAjD,CAAL;AACAX,IAAAA,OAAK,CAAE,qBAAoBqR,wBAAI,CAACC,OAAL,CAAa,KAAK0kB,OAAlB,CAA2B,EAAjD,CAAL;AACAh2B,IAAAA,OAAK,CAAE,kBAAiBqR,wBAAI,CAACC,OAAL,CAAa,KAAKsoB,IAAlB,CAAwB,EAA3C,CAAL;AACA,SAAKjlB,YAAL,CAAkBC,IAAlB,CAAuBC,MAAM,CAACnZ,kBAA9B;AAEA,WAAO,IAAIxD,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,UAAIuhC,IAAI,GAAG,IAAX;AACA,UAAI7hC,SAAS,GAAG,IAAhB;AAEAY,MAAAA,yBAAK,CAAC4+B,MAAN,CAAa,CAEV6R,eAAD,IAAqB;AACnB,aAAKC,SAAL,GACG9wC,IADH,CACQ,MAAM6wC,eAAe,EAD7B,EAEG5wC,KAFH,CAES4wC,eAFT;AAGD,OANU,EAQVE,aAAD,IAAmB;AACjB,YAAI;AACF1P,UAAAA,IAAI,GAAG,KAAK2P,QAAL,EAAP;AACD,SAFD,CAEE,OAAO9wC,GAAP,EAAY;AACZ,iBAAO6wC,aAAa,CAAC7wC,GAAD,CAApB;AACD;;AACDmhC,QAAAA,IAAI,CAAC7Z,QAAL,GAAgBxnB,IAAhB,CAAqB,MAAM+wC,aAAa,EAAxC,EAA4C9wC,KAA5C,CAAkD8wC,aAAlD;AACD,OAfU,EAiBVE,YAAD,IAAkB;AAChB5P,QAAAA,IAAI,CAACzD,OAAL,GAAe59B,IAAf,CAAoB,MAAMixC,YAAY,EAAtC,EAA0ChxC,KAA1C,CAAgDgxC,YAAhD;AACD,OAnBU,EAqBVC,kBAAD,IAAwB;AACtB,YAAI;AACF1xC,UAAAA,SAAS,GAAG,KAAK2xC,aAAL,CAAmB9P,IAAnB,CAAZ;AACD,SAFD,CAEE,OAAOnhC,GAAP,EAAY;AACZ,iBAAOgxC,kBAAkB,CAAChxC,GAAD,CAAzB;AACD;;AACDV,QAAAA,SAAS,CAACgoB,QAAV,GAAqBxnB,IAArB,CAA0B,MAAMkxC,kBAAkB,EAAlD,EAAsDjxC,KAAtD,CAA4DixC,kBAA5D;AACD,OA5BU,EA8BVE,cAAD,IAAoB;AAClB5xC,QAAAA,SAAS,CAACO,KAAV,GAAkBC,IAAlB,CAAuB,MAAMoxC,cAAc,EAA3C,EAA+CnxC,KAA/C,CAAqDmxC,cAArD;AACD,OAhCU,CAAb,EAkCIlxC,GAAD,IAAS;AACV,YAAIA,GAAJ,EAAS;AACPwH,UAAAA,OAAK,CAAE,0BAAyBxH,GAAI,EAA/B,CAAL;AACA,eAAKmc,YAAL,CAAkBC,IAAlB,CAAuBC,MAAM,CAACjZ,qBAA9B,EAAqDpD,GAArD;;AACA,cAAI,KAAKu9B,aAAT,EAAwB;AACtBkF,YAAAA,0BAAM,CAAC,KAAKlF,aAAN,EAAsBv9B,GAAD,IAAS;AAClC,kBAAIA,GAAJ,EAASwH,OAAK,CAAE,oBAAmB,KAAK+1B,aAAc,YAAW1kB,wBAAI,CAACC,OAAL,CAAa9Y,GAAb,CAAkB,EAArE,CAAL;AACV,aAFK,CAAN;AAGD;;AACD,iBAAOJ,MAAM,CAACI,GAAD,CAAb;AACD;;AACD,aAAKmc,YAAL,CAAkBC,IAAlB,CAAuBC,MAAM,CAAClZ,eAA9B,EAA+C7D,SAA/C;AACAK,QAAAA,OAAO,CAACL,SAAD,CAAP;AACD,OA/CD;AAgDD,KApDM,CAAP;AAqDD;;AAEDuB,EAAAA,aAAa,GAAI;AACf,QAAI;AACF,YAAMxB,QAAQ,GAAG,IAAI4yB,mBAAJ,CAAsB,KAAK9pB,IAA3B,CAAjB;AACA9I,MAAAA,QAAQ,CAACQ,KAAT;AACA,aAAOR,QAAP;AACD,KAJD,CAIE,OAAOW,GAAP,EAAY;AACZwH,MAAAA,OAAK,CAAE,kCAAiCxH,GAAI,EAAvC,CAAL;AACA,YAAMA,GAAN;AACD;AACF;;;;;AAKDmxC,EAAAA,eAAe,CAAEpuB,QAAF,EAAY;AACzB,QAAI;AACF,YAAMquB,UAAU,GAAGxrC,IAAI,CAACkL,KAAL,CAAWhF,sBAAE,CAAC2qB,YAAH,CAAgB1T,QAAhB,CAAX,CAAnB;;AACA,UAAIquB,UAAU,CAACtJ,MAAf,EAAuB;AACrB,YAAIsJ,UAAU,CAACtJ,MAAX,CAAkBjpC,YAAtB,EAAoC,KAAKqxC,UAAL,CAAgB,KAAK/nC,IAArB,EAA2BipC,UAAU,CAACtJ,MAAX,CAAkBjpC,YAA7C;AACpC,YAAIuyC,UAAU,CAACtJ,MAAX,CAAkBhpC,OAAtB,EAA+B,KAAKoxC,UAAL,CAAgB,KAAK1S,OAArB,EAA8B4T,UAAU,CAACtJ,MAAX,CAAkBhpC,OAAhD;AAC/B,YAAIsyC,UAAU,CAACtJ,MAAX,CAAkB9oC,IAAtB,EAA4B,KAAKkxC,UAAL,CAAgB,KAAK9O,IAArB,EAA2BgQ,UAAU,CAACtJ,MAAX,CAAkB9oC,IAA7C;AAC5B,eAAO,IAAP;AACD,OALD,MAKO;AACLwI,QAAAA,OAAK,CAAE,6BAA4Bub,QAAS,6CAAvC,CAAL;AACA,eAAO,KAAP;AACD;AACF,KAXD,CAWE,OAAO/iB,GAAP,EAAY;AACZ,YAAM,IAAIuE,KAAJ,CAAW,6CAA4Cwe,QAAS,KAAIlK,wBAAI,CAACC,OAAL,CAAa9Y,GAAb,CAAkB,EAAtF,CAAN;AACD;AACF,GAjL8B;;;AAoL/ByvC,EAAAA,qBAAqB,CAAE4B,KAAF,EAAS;AAC5B,UAAMC,YAAY,GAAG,EAArB;;AACA,SAAK,MAAM7b,IAAX,IAAmB4b,KAAnB,EAA0B;AACxB,UAAI5b,IAAI,IAAI3pB,sBAAE,CAACC,UAAH,CAAc0pB,IAAd,CAAZ,EAAiC;AAC/B,cAAM8b,WAAW,GAAG5nC,wBAAI,CAAChK,OAAL,CAAa81B,IAAb,CAApB;;AACA,YAAI,KAAK+Z,mBAAL,CAAyBvkC,OAAzB,CAAiCsmC,WAAjC,IAAgD,CAApD,EAAuD;AACrD,eAAKJ,eAAL,CAAqB1b,IAArB;;AACA6b,UAAAA,YAAY,CAAC7xC,IAAb,CAAkBg2B,IAAlB;;AACA,eAAK+Z,mBAAL,CAAyB/vC,IAAzB,CAA8B8xC,WAA9B;AACD,SAJD,MAIO;AACLD,UAAAA,YAAY,CAAC7xC,IAAb,CAAkBg2B,IAAlB;AACD;AACF;AACF;;AACD,WAAO6b,YAAP;AACD;;AAEDE,EAAAA,gBAAgB,CAAE/gC,GAAF,EAAO;AACrB,UAAM85B,MAAM,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,KAAnB,EAA0B,KAA1B,EAAiC,KAAjC,EAAwC,MAAxC,EAAgD,MAAhD,EAAwD,MAAxD,CAAf;;AACA,SAAK,MAAMkH,YAAX,IAA2BlH,MAA3B,EAAmC;AACjC,UAAIjoC,MAAM,CAACic,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqChO,GAArC,EAA0C85B,MAAM,CAACkH,YAAD,CAAhD,CAAJ,EAAqE,OAAOlH,MAAM,CAACkH,YAAD,CAAb;AACtE;AACF;;AAEDvB,EAAAA,UAAU,CAAE/nC,IAAF,EAAQupC,OAAR,EAAiB;AACzB,QAAI,CAACvpC,IAAL,EAAW;AACX7F,IAAAA,MAAM,CAAC+H,IAAP,CAAYqnC,OAAZ,EAAqBvsC,OAArB,CAA6B2+B,MAAM,IAAI;AACrC,UAAI,CAACxhC,MAAM,CAACic,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCtW,IAArC,EAA2C27B,MAA3C,CAAL,EAAyD;AACvD,YAAI5hC,0BAAC,CAACiI,QAAF,CAAWunC,OAAO,CAAC5N,MAAD,CAAlB,CAAJ,EAAiC;AAC/B,cAAI;AACF37B,YAAAA,IAAI,CAAC27B,MAAD,CAAJ,GAAel+B,IAAI,CAACkL,KAAL,CAAW4gC,OAAO,CAAC5N,MAAD,CAAlB,CAAf;;AACA,gBAAI5hC,0BAAC,CAACyvC,QAAF,CAAWxpC,IAAI,CAAC27B,MAAD,CAAf,CAAJ,EAA8B;AAC5B37B,cAAAA,IAAI,CAAC27B,MAAD,CAAJ,GAAe37B,IAAI,CAAC27B,MAAD,CAAJ,CAAan9B,QAAb,EAAf;AACD;AACF,WALD,CAKE,OAAO3G,GAAP,EAAY;AACZmI,YAAAA,IAAI,CAAC27B,MAAD,CAAJ,GAAe4N,OAAO,CAAC5N,MAAD,CAAtB;AACD;AACF,SATD,MASO;AACL37B,UAAAA,IAAI,CAAC27B,MAAD,CAAJ,GAAe4N,OAAO,CAAC5N,MAAD,CAAtB;AACD;;AACD;AACD;;AAED,UAAI5hC,0BAAC,CAACgD,OAAF,CAAUiD,IAAI,CAAC27B,MAAD,CAAd,CAAJ,EAA6B;AAC3B,YAAI8N,WAAW,GAAGF,OAAO,CAAC5N,MAAD,CAAzB;;AACA,YAAI,CAAC5hC,0BAAC,CAACgD,OAAF,CAAU0sC,WAAV,CAAL,EAA6B;AAC3B,cAAI;AACFA,YAAAA,WAAW,GAAGhsC,IAAI,CAACkL,KAAL,CAAW8gC,WAAX,CAAd;AACD,WAFD,CAEE,OAAO5xC,GAAP,EAAY;AACZwH,YAAAA,OAAK,CAAE,qCAAoCs8B,MAAO,wBAAuB9jC,GAAI,uEAAxE,CAAL;AACD;AACF;;AACD,YAAIkC,0BAAC,CAACgD,OAAF,CAAU0sC,WAAV,CAAJ,EAA4B;AAC1BA,UAAAA,WAAW,CAACzsC,OAAZ,CAAoB0sC,UAAU,IAAI;AAChC,kBAAMC,QAAQ,GAAG,KAAKN,gBAAL,CAAsBK,UAAtB,CAAjB;;AACA,gBAAIC,QAAJ,EAAc;AACZ,oBAAMC,UAAU,GAAG5pC,IAAI,CAAC27B,MAAD,CAAJ,CAAar6B,IAAb,CAAkBsoC,UAAU,IAAIA,UAAU,CAACD,QAAD,CAAV,IAAwBC,UAAU,CAACD,QAAD,CAAV,KAAyBD,UAAU,CAACC,QAAD,CAA3F,CAAnB;;AACA,kBAAIC,UAAJ,EAAgB;AACd7vC,gBAAAA,0BAAC,CAAC6rC,KAAF,CAAQgE,UAAR,EAAoBF,UAApB;;AACA;AACD;;AACD1pC,cAAAA,IAAI,CAAC27B,MAAD,CAAJ,CAAarkC,IAAb,CAAkBoyC,UAAlB;AACD,aAPD,MAOO;AACL,kBAAI1pC,IAAI,CAAC27B,MAAD,CAAJ,CAAa74B,OAAb,CAAqB4mC,UAArB,IAAmC,CAAvC,EAA0C;AACxC1pC,gBAAAA,IAAI,CAAC27B,MAAD,CAAJ,CAAarkC,IAAb,CAAkBoyC,UAAlB;AACD;AACF;AACF,WAdD;AAeA;AACD;AACF;;AACD,UAAI,CAAC3vC,0BAAC,CAACgD,OAAF,CAAUiD,IAAI,CAAC27B,MAAD,CAAd,CAAD,IAA4B5hC,0BAAC,CAACgI,QAAF,CAAW/B,IAAI,CAAC27B,MAAD,CAAf,CAAhC,EAA0D;AACxD,YAAIkO,YAAY,GAAGN,OAAO,CAAC5N,MAAD,CAA1B;;AACA,YAAI,CAAC5hC,0BAAC,CAACgI,QAAF,CAAW8nC,YAAX,CAAL,EAA+B;AAC7B,cAAI;AACFA,YAAAA,YAAY,GAAGpsC,IAAI,CAACkL,KAAL,CAAWkhC,YAAX,CAAf;AACD,WAFD,CAEE,OAAOhyC,GAAP,EAAY;AACZwH,YAAAA,OAAK,CAAE,sCAAqCs8B,MAAO,wBAAuB9jC,GAAI,uEAAzE,CAAL;AACD;AACF;;AACD,YAAIkC,0BAAC,CAACgI,QAAF,CAAW8nC,YAAX,CAAJ,EAA8B;AAC5B9vC,UAAAA,0BAAC,CAAC6rC,KAAF,CAAQ5lC,IAAI,CAAC27B,MAAD,CAAZ,EAAsBkO,YAAtB;;AACA;AACD;AACF;;AAED,UAAI9vC,0BAAC,CAAC+vC,SAAF,CAAY9pC,IAAI,CAAC27B,MAAD,CAAhB,CAAJ,EAA+B;AAC7B,YAAI,CAAC5hC,0BAAC,CAAC+vC,SAAF,CAAYP,OAAO,CAAC5N,MAAD,CAAnB,CAAL,EAAmC;AACjC37B,UAAAA,IAAI,CAAC27B,MAAD,CAAJ,GAAeuL,OAAO,CAACqC,OAAO,CAAC5N,MAAD,CAAR,CAAtB;AACA;AACD;AACF;;AAED37B,MAAAA,IAAI,CAAC27B,MAAD,CAAJ,GAAe4N,OAAO,CAAC5N,MAAD,CAAtB;AACD,KApED;AAqED;;AAED8M,EAAAA,SAAS,GAAI;AACX,WAAO,IAAIlxC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,UAAI;AACF,YAAI,CAAC,KAAKuI,IAAL,CAAUtJ,YAAY,CAACzI,WAAvB,CAAL,EAA0C;AACxC,gBAAM,IAAImO,KAAJ,CAAW,uBAAsB1F,YAAY,CAACzI,WAAY,UAA1D,CAAN;AACD;;AACD,YAAI,CAAC,KAAK+R,IAAL,CAAUtJ,YAAY,CAACtI,OAAvB,CAAL,EAAsC;AACpC,gBAAM,IAAIgO,KAAJ,CAAW,uBAAsB1F,YAAY,CAACtI,OAAQ,UAAtD,CAAN;AACD;;AACD,YAAI,CAAC,KAAK4R,IAAL,CAAUtJ,YAAY,CAACnI,aAAvB,CAAD,IAA0C,CAAC,KAAKyR,IAAL,CAAUtJ,YAAY,CAAChI,aAAvB,CAA/C,EAAsF;AACpF,gBAAM,IAAI0N,KAAJ,CAAW,eAAc1F,YAAY,CAACnI,aAAc,SAAQmI,YAAY,CAAChI,aAAc,WAAvF,CAAN;AACD;;AAED,aAAK0mC,aAAL,GAAqB5zB,wBAAI,CAAChK,OAAL,CAAaiM,OAAO,CAACC,GAAR,EAAb,EAA4B,KAAK1D,IAAL,CAAUtJ,YAAY,CAACtI,OAAvB,CAA5B,EAA6D27C,oCAAQ,CAAE,GAAE,KAAK/pC,IAAL,CAAUtJ,YAAY,CAACzI,WAAvB,CAAoC,IAAGie,0BAAM,GAAGC,MAAT,CAAgB,iBAAhB,CAAmC,IAAG2B,8BAAS,CAAC,KAAD,EAAQ,CAAR,CAAW,EAArG,CAArE,CAArB;;AACA,YAAI;AACF+oB,UAAAA,0BAAM,CAAC3J,IAAP,CAAY,KAAKkI,aAAjB;AACD,SAFD,CAEE,OAAOv9B,GAAP,EAAY;AACZ,gBAAM,IAAIuE,KAAJ,CAAW,mCAAkC,KAAKg5B,aAAc,KAAIv9B,GAAI,EAAxE,CAAN;AACD;;AACDL,QAAAA,OAAO,CAAC,IAAD,CAAP;AACD,OAlBD,CAkBE,OAAOK,GAAP,EAAY;AACZJ,QAAAA,MAAM,CAACI,GAAD,CAAN;AACD;AACF,KAtBM,CAAP;AAuBD;;AAED8wC,EAAAA,QAAQ,GAAI;AACV,QAAI,KAAK3oC,IAAL,CAAUtJ,YAAY,CAAChI,aAAvB,CAAJ,EAA2C;AACzC,YAAM+mC,MAAM,GAAGj2B,QAAf;AACA,aAAO,IAAIi2B,MAAJ,CAAW,KAAKL,aAAhB,EAA+B,KAAKC,OAApC,CAAP;AACD;;AACD,QAAI,KAAKA,OAAL,CAAaz+B,MAAM,CAACN,MAApB,CAAJ,EAAiC;AAC/B,YAAMogC,OAAO,GAAG/qB,SAAhB;AACA,aAAO,IAAI+qB,OAAJ,CAAY,KAAKtB,aAAjB,EAAgC,KAAKC,OAArC,CAAP;AACD;;AACD,QAAI,KAAKA,OAAL,CAAaz+B,MAAM,CAACR,SAApB,CAAJ,EAAoC;AAClC,YAAM+gC,SAAS,GAAG7Y,WAAlB;AACA,aAAO,IAAI6Y,SAAJ,CAAc,KAAK/B,aAAnB,EAAkC,KAAKC,OAAvC,CAAP;AACD;;AACD,UAAM,IAAIj5B,KAAJ,CAAW,sCAAqCsU,wBAAI,CAACC,OAAL,CAAa,KAAK0kB,OAAlB,CAA2B,EAA3E,CAAN;AACD;;AAEDyT,EAAAA,aAAa,CAAE9P,IAAF,EAAQ;AACnB,QAAI,KAAKh5B,IAAL,CAAUtJ,YAAY,CAAChI,aAAvB,CAAJ,EAA2C;AACzC,YAAMmsC,aAAa,GAAGrO,eAAtB;AACA,aAAO,IAAIqO,aAAJ,CAAkB,KAAK7mB,YAAvB,EAAqC,KAAKohB,aAA1C,EAAyD4D,IAAzD,EAA+D,KAAKh5B,IAApE,EAA0E,KAAKi5B,IAA/E,CAAP;AACD;;AACD,QAAI,CAAC,KAAKj5B,IAAL,CAAUtJ,YAAY,CAACnI,aAAvB,CAAL,EAA4C;AAC1C,YAAM,IAAI6N,KAAJ,CAAW,eAAc1F,YAAY,CAACnI,aAAc,WAApD,CAAN;AACD;;AACD,QAAI,KAAKyR,IAAL,CAAUtJ,YAAY,CAACnI,aAAvB,MAA0C,WAA9C,EAA2D;AACzD,YAAMstC,kBAAkB,GAAGpP,oBAA3B;AACA,aAAO,IAAIoP,kBAAJ,CAAuB,KAAK7nB,YAA5B,EAA0C,KAAKohB,aAA/C,EAA8D4D,IAA9D,EAAoE,KAAKh5B,IAAzE,EAA+E,KAAKi5B,IAApF,CAAP;AACD;;AACD,UAAM2N,wBAAwB,GAAGla,0BAAjC;AACA,WAAO,IAAIka,wBAAJ,CAA6B,KAAK5yB,YAAlC,EAAgD,KAAKohB,aAArD,EAAoE4D,IAApE,EAA0E,KAAKh5B,IAA/E,EAAqF,KAAKi5B,IAA1F,CAAP;AACD;;AA7U8B,CAAjC;;ACrBA,MAAM55B,KAAK,GAAGD,yBAAgB,CAAC,qBAAD,CAA9B;AAEA,MAAM4qC,qBAAqB,GAAG,uBAA9B;AACA,MAAMC,oBAAoB,GAAG,sBAA7B;AACA,MAAMC,qBAAqB,GAAG,uBAA9B;AACA,MAAMC,qBAAqB,GAAG,uBAA9B;AAEA,MAAMC,cAAc,GAAG;AACrBJ,EAAAA,qBAAqB,EAAE,mBADF;AAErBC,EAAAA,oBAAoB,EAAE,kBAFD;AAGrBC,EAAAA,qBAAqB,EAAE,mBAHF;AAIrBC,EAAAA,qBAAqB,EAAE;AAJF,CAAvB;AAOA,MAAME,sBAAsB,GAAG;AAC7BJ,EAAAA,oBAAoB,EAAE,UADO;AAE7BC,EAAAA,qBAAqB,EAAE,WAFM;AAG7BC,EAAAA,qBAAqB,EAAE;AAHM,CAA/B;;AAMA,MAAMG,kBAAkB,GAAG,CAAC1vB,QAAD,EAAW2vB,SAAX,KAAyB;AAClD,MAAIC,UAAU,GAAG,IAAjB;;AACA,MAAI5vB,QAAQ,CAACnS,WAAT,GAAuBC,UAAvB,CAAkC0hC,cAAc,CAACJ,qBAAD,CAAhD,CAAJ,EAA8E;AAC5EQ,IAAAA,UAAU,GAAGR,qBAAb;;AACA,QAAI;AACF,YAAMvD,MAAM,GAAG9mC,eAAAA,CAAQib,QAARjb,CAAf;AACA,YAAM8qC,UAAU,GAAG9qC,eAAAA,CAAQnI,OAARmI,CAAgBib,QAAhBjb,CAAnB;;AACA,UAAI,CAAC8qC,UAAU,CAAC/hC,UAAX,CAAsB6hC,SAAtB,CAAL,EAAuC;AACrClrC,QAAAA,KAAK,CAAE,iCAAgCmC,wBAAI,CAAChK,OAAL,CAAa+yC,SAAb,EAAwB3vB,QAAxB,CAAkC,gBAAe6vB,UAAW,IAA9F,CAAL;AACA,eAAO,IAAP;AACD;;AACD,UAAI,CAAChE,MAAM,CAACC,aAAR,IAAyB,CAACD,MAAM,CAAC3kC,WAArC,EAAkD;AAChDzC,QAAAA,KAAK,CAAE,qCAAoCub,QAAS,8CAA/C,CAAL;AACA,eAAO,IAAP;AACD;;AACD,UAAI6rB,MAAM,CAAC+D,UAAP,IAAqB/D,MAAM,CAAC+D,UAAP,KAAsBA,UAA/C,EAA2D;AACzDnrC,QAAAA,KAAK,CAAE,6BAA4Bub,QAAS,kBAAiB6rB,MAAM,CAAC+D,UAAW,yCAAwCA,UAAW,EAA7H,CAAL;AACD;;AAED,UAAIE,kBAAkB,GAAG9vB,QAAQ,CAACtK,SAAT,CAAmB85B,cAAc,CAACJ,qBAAD,CAAd,CAAsCjsC,MAAzD,CAAzB;;AACA,UAAI2sC,kBAAkB,CAACjiC,WAAnB,GAAiCoS,QAAjC,CAA0C,KAA1C,CAAJ,EAAsD;AACpD6vB,QAAAA,kBAAkB,GAAGA,kBAAkB,CAACp6B,SAAnB,CAA6B,CAA7B,EAAgCo6B,kBAAkB,CAAC3sC,MAAnB,GAA4B,MAAMA,MAAlE,CAArB;AACD;;AAED,YAAM4sC,UAAU,GAAGlE,MAAM,CAACkE,UAAP,IAAqB,EAAxC;AACA,aAAO;AACLjE,QAAAA,aAAa,EAAED,MAAM,CAACC,aAAP,IAAwB,GADlC;AAEL8D,QAAAA,UAFK;AAGLG,QAAAA,UAAU,EAAE,EACV,GAAGA,UADO;AAEVxpC,UAAAA,GAAG,EAAEupC;AAFK;AAHP,OAAP;AAQD,KA7BD,CA6BE,OAAO7yC,GAAP,EAAY;AACZwH,MAAAA,KAAK,CAAE,8BAA6Bub,QAAS,aAAY/iB,GAAG,CAACwE,OAAQ,EAAhE,CAAL;AACA,aAAO,IAAP;AACD;AACF;;AACD,SAAO,IAAP;AACD,CAvCD;;AAyCA,MAAMuuC,cAAc,GAAG,CAAChwB,QAAD,EAAW2vB,SAAX,EAAsBrtC,IAAtB,KAA+B;AACpD,MAAIstC,UAAU,GAAG,IAAjB;;AACA,MAAIttC,IAAI,KAAK8sC,qBAAT,IAAkCpvB,QAAQ,CAACnS,WAAT,GAAuBC,UAAvB,CAAkC0hC,cAAc,CAACltC,IAAD,CAAhD,CAAtC,EAA+F;AAC7FstC,IAAAA,UAAU,GAAGttC,IAAb;AACD;;AACD,MAAI,CAACstC,UAAL,EAAiB;AACf,WAAO,IAAP;AACD;;AACD,MAAI;AACF,UAAM/D,MAAM,GAAG9mC,eAAAA,CAAQib,QAARjb,CAAf;AACA,UAAM8qC,UAAU,GAAG9qC,eAAAA,CAAQnI,OAARmI,CAAgBib,QAAhBjb,CAAnB;;AACA,QAAI,CAAC8qC,UAAU,CAAC/hC,UAAX,CAAsB6hC,SAAtB,CAAL,EAAuC;AACrClrC,MAAAA,KAAK,CAAE,iCAAgCmC,wBAAI,CAAChK,OAAL,CAAa+yC,SAAb,EAAwB3vB,QAAxB,CAAkC,gBAAe6vB,UAAW,IAA9F,CAAL;AACA,aAAO,IAAP;AACD;;AACD,QAAIhE,MAAM,CAAC+D,UAAP,IAAqB/D,MAAM,CAAC+D,UAAP,KAAsBA,UAA/C,EAA2D;AACzDnrC,MAAAA,KAAK,CAAE,6BAA4Bub,QAAS,kBAAiB6rB,MAAM,CAAC+D,UAAW,yCAAwCA,UAAW,EAA7H,CAAL;AACD;;AAED,QAAIK,UAAU,GAAGjwB,QAAQ,CAACtK,SAAT,CAAmB85B,cAAc,CAACltC,IAAD,CAAd,CAAqBa,MAAxC,CAAjB;;AACA,QAAI8sC,UAAU,CAACpiC,WAAX,GAAyBoS,QAAzB,CAAkC,KAAlC,CAAJ,EAA8C;AAC5CgwB,MAAAA,UAAU,GAAGA,UAAU,CAACv6B,SAAX,CAAqB,CAArB,EAAwBu6B,UAAU,CAAC9sC,MAAX,GAAoB,MAAMA,MAAlD,CAAb;AACD;;AAED,UAAM4sC,UAAU,GAAGlE,MAAM,CAACkE,UAAP,IAAqB,EAAxC;AAEA,WAAO;AACLjE,MAAAA,aAAa,EAAED,MAAM,CAACC,aAAP,IAAwB,GADlC;AAEL8D,MAAAA,UAFK;AAGLG,MAAAA,UAAU,EAAE;AACVluC,QAAAA,IAAI,EAAEouC,UADI;AAEVr5B,QAAAA,WAAW,EAAEm5B,UAAU,CAACn5B,WAFd;AAGVtU,QAAAA,IAAI,EAAEmtC,sBAAsB,CAACntC,IAAD,CAHlB;AAIViE,QAAAA,GAAG,EAAEyZ,QAJK;AAKV9Z,QAAAA,GAAG,EAAE6pC,UAAU,CAAC7pC,GAAX,IAAkB+pC,UAAU,CAAC3yB,WAAX,EALb;AAMVlX,QAAAA,MAAM,EAAE2pC,UAAU,CAAC3pC,MAAX,IAAqB,KANnB;AAOVI,QAAAA,IAAI,EAAEupC,UAAU,CAACvpC,IAAX,IAAmB;AAPf;AAHP,KAAP;AAaD,GA/BD,CA+BE,OAAOvJ,GAAP,EAAY;AACZwH,IAAAA,KAAK,CAAE,8BAA6Bub,QAAS,aAAY/iB,GAAG,CAACwE,OAAQ,EAAhE,CAAL;AACA,WAAO,IAAP;AACD;AACF,CA3CD;;AA6CA,MAAMyuC,UAAU,GAAG;AACjBd,EAAAA,qBAAqB,EAAEM,kBADN;AAEjBL,EAAAA,oBAAoB,EAAEW,cAFL;AAGjBV,EAAAA,qBAAqB,EAAEU,cAHN;AAIjBT,EAAAA,qBAAqB,EAAES;AAJN,CAAnB;;AAOA,MAAMG,UAAU,GAAG,OAAO7tC,IAAP,EAAa8tC,YAAb,KAA8B;AAC/C,MAAI,CAACF,UAAU,CAAC5tC,IAAD,CAAf,EAAuB;AACrBmC,IAAAA,KAAK,CAAE,wBAAuBnC,IAAK,GAA9B,CAAL;AACA,WAAO3F,OAAO,CAACC,OAAR,CAAgB,EAAhB,CAAP;AACD;;AAED,QAAM+yC,SAAS,GAAG/oC,wBAAI,CAAChK,OAAL,CAAawzC,YAAb,CAAlB;;AACA,MAAI,CAACrnC,sBAAE,CAACC,UAAH,CAAc2mC,SAAd,CAAL,EAA+B;AAC7BlrC,IAAAA,KAAK,CAAE,gCAA+BkrC,SAAU,kBAA3C,CAAL;AACA,WAAO,EAAP;AACD;;AACD,MAAIU,KAAJ;;AACA,MAAI;AACFA,IAAAA,KAAK,GAAGtnC,sBAAE,CAACunC,WAAH,CAAeX,SAAf,EACLpiC,MADK,CACE0O,IAAI,IAAIrV,wBAAI,CAAC2pC,OAAL,CAAat0B,IAAb,MAAuB,KAAvB,IAAgCA,IAAI,CAAC/T,OAAL,CAAa,GAAb,MAAsB,CAAC,CADjE,CAAR;AAED,GAHD,CAGE,OAAOjL,GAAP,EAAY;AACZwH,IAAAA,KAAK,CAAE,+CAA8CkrC,SAAU,MAAK1yC,GAAG,CAACwE,OAAQ,EAA3E,CAAL;AACA,WAAO,EAAP;AACD;;AAED,QAAMwC,MAAM,GAAG,EAAf;AACA,QAAMusC,kBAAkB,GAAG,EAA3B;;AACA,OAAK,IAAIngC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGggC,KAAK,CAACltC,MAA1B,EAAkCkN,CAAC,EAAnC,EAAuC;AACrC,UAAMw7B,MAAM,GAAGqE,UAAU,CAAC5tC,IAAD,CAAV,CAAiB+tC,KAAK,CAAChgC,CAAD,CAAtB,EAA2Bs/B,SAA3B,EAAsCrtC,IAAtC,CAAf;;AACA,QAAIupC,MAAJ,EAAY;AACV,UAAI2E,kBAAkB,CAAC3E,MAAM,CAACkE,UAAP,CAAkBluC,IAAnB,CAAtB,EAAgD;AAC9C4C,QAAAA,KAAK,CAAE,mBAAkB5B,IAAI,CAACC,SAAL,CAAe+oC,MAAf,CAAuB,gCAA+BhpC,IAAI,CAACC,SAAL,CAAe0tC,kBAAkB,CAAC3E,MAAM,CAACkE,UAAP,CAAkBluC,IAAnB,CAAjC,CAA2D,EAArI,CAAL;AACD,OAFD,MAEO;AACLoC,QAAAA,MAAM,CAACvH,IAAP,CAAYmvC,MAAZ;AACA2E,QAAAA,kBAAkB,CAAC3E,MAAM,CAACkE,UAAP,CAAkBluC,IAAnB,CAAlB,GAA6CgqC,MAA7C;AACD;AACF;AACF;;AACD,SAAO5nC,MAAP;AACD,CAlCD;;AAoCA,WAAc,GAAG;AACfksC,EAAAA,UADe;AAEff,EAAAA,qBAFe;AAGfC,EAAAA,oBAHe;AAIfC,EAAAA,qBAJe;AAKfC,EAAAA,qBALe;AAMfC,EAAAA;AANe,CAAjB;;;;;;;;cCvJc,GAAG;AACfjD,EAAAA,SAAS,EAAE/nC,WADI;AAEf0qB,EAAAA,iBAAiB,EAAExqB,mBAFJ;AAGf+rC,EAAAA,kBAAkB,EAAE9rC,SAHL;AAIf7I,EAAAA,YAAY,EAAE8I,YAJC;AAKfuqB,EAAAA,QAAQ,EAAEpe,UALK;AAMf/U,EAAAA,MAAM,EAAE0nB,MANO;AAOfpK,EAAAA,MAAM,EAAEsY,MAPO;AAQf8e,EAAAA,OAAO,EAAE7e,OARM;AASftwB,EAAAA,WAAW,EAAEuwB,aAAsC,CAACvwB,WATrC;AAUfsY,EAAAA,eAAe,EAAEkY,eAVF;AAWf4e,EAAAA,SAAS,EAAE3e,SAXI;AAYf4e,EAAAA,kBAAkB,EAAEC,eAZL;AAafC,EAAAA,GAAG,EAAE;AACHtF,IAAAA,aAAa,EAAEuF,OAAyC,CAACvF,aADtD;AAEHnI,IAAAA,mBAAmB,EAAE2N;AAFlB,GAbU;AAiBfC,EAAAA,YAAY,EAAEC,KAjBC;AAkBfC,EAAAA,0BAA0B,EAAEC;AAlBb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}