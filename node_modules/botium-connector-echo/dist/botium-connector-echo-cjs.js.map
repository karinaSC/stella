{"version":3,"file":"botium-connector-echo-cjs.js","sources":["../index.js"],"sourcesContent":["const fs = require('fs')\nconst path = require('path')\nconst _ = require('lodash')\nconst debug = require('debug')('botium-connector-echo')\n\nconst Capabilities = {\n  ECHO_ANSWERS: 'ECHO_ANSWERS',\n  ECHO_WELCOMEMESSAGE: 'ECHO_WELCOMEMESSAGE',\n  ECHO_DELAY: 'ECHO_DELAY',\n  ECHO_DELAY_INCREASE: 'ECHO_DELAY_INCREASE'\n}\n\nconst GlobalState = {\n  delaySlowdown: 0\n}\n\nconst audioFile = 'file_example_MP3_700KB.mp3'\nlet audioBuffer = null\nif (fs.existsSync(path.join(__dirname, audioFile))) {\n  audioBuffer = Buffer.from(fs.readFileSync(path.join(__dirname, audioFile)))\n} else if (fs.existsSync(path.join(__dirname, '..', audioFile))) {\n  audioBuffer = Buffer.from(fs.readFileSync(path.join(__dirname, '..', audioFile)))\n}\n\nconst videoFile = 'mov_bbb.mp4'\nlet videoBuffer = null\nif (fs.existsSync(path.join(__dirname, videoFile))) {\n  videoBuffer = Buffer.from(fs.readFileSync(path.join(__dirname, videoFile)))\n} else if (fs.existsSync(path.join(__dirname, '..', videoFile))) {\n  videoBuffer = Buffer.from(fs.readFileSync(path.join(__dirname, '..', videoFile)))\n}\n\nclass BotiumConnectorEcho {\n  constructor ({ queueBotSays, caps }) {\n    this.queueBotSays = queueBotSays\n    this.caps = caps\n    this.session = {}\n    this.welcomeMessages = []\n    this.answers = [\n      {\n        input: ['help'],\n        output: (msg, session) => ({\n          messageText: 'Recognized commands: ' + this.answers.map(a => a.input.join(', ')).join(', '),\n          nlp: {\n            intent: {\n              name: 'help',\n              confidence: 1\n            }\n          }\n        })\n      },\n      {\n        input: ['fail'],\n        output: (msg, session) => {\n          throw new Error('Here is a delivery failure')\n        }\n      },\n      {\n        input: ['random fail'],\n        output: (msg, session) => {\n          const possibility = Math.random()\n          if (possibility < 0.5) {\n            throw new Error(`Here is a random delivery failure (${possibility})`)\n          }\n          return {\n            messageText: `Delivery succesful (${possibility})`\n          }\n        }\n      },\n      {\n        input: ['add to cart'],\n        output: (msg, session) => {\n          const item = msg.messageText.substr(11).trim()\n          if (!session.cart) session.cart = []\n          session.cart.push(item)\n          return {\n            messageText: `Added to cart: ${item}`,\n            nlp: {\n              intent: {\n                name: 'addtocart',\n                confidence: 0.8\n              },\n              entities: [\n                { name: 'product', value: item, confidence: 0.7 }\n              ]\n            }\n          }\n        }\n      },\n      {\n        input: ['show cart'],\n        output: (msg, session) => {\n          return {\n            messageText: `In your cart: ${(session.cart || []).join(', ')}`,\n            nlp: {\n              intent: {\n                name: 'showcart',\n                confidence: 0.8\n              }\n            }\n          }\n        }\n      },\n      {\n        input: ['clear cart'],\n        output: (msg, session) => {\n          session.cart = []\n          return {\n            messageText: 'Your cart is now empty',\n            nlp: {\n              intent: {\n                name: 'clearcart',\n                confidence: 0.8\n              }\n            }\n          }\n        }\n      },\n      {\n        input: ['weak intent'],\n        output: {\n          messageText: 'This is an intent with weak confidence (0.3)',\n          nlp: {\n            intent: {\n              name: 'weak',\n              confidence: 0.3\n            }\n          }\n        }\n      },\n      {\n        input: ['duplicate intent'],\n        output: {\n          messageText: 'Identified two intents with same confidence',\n          nlp: {\n            intent: {\n              name: 'dupintent1',\n              confidence: 0.7,\n              intents: [\n                { name: 'dupintent2', confidence: 0.7 },\n                { name: 'dupintent3', confidence: 0.6 }\n              ]\n            }\n          }\n        }\n      },\n      {\n        input: ['button', 'buttons', 'show me buttons', 'show me some buttons', 'give me buttons', 'give me a button'],\n        output: {\n          messageText: 'Here are some buttons',\n          buttons: [\n            { text: 'First Button' },\n            { text: 'Second Button' }\n          ],\n          nlp: {\n            intent: {\n              name: 'buttons',\n              confidence: 0.8\n            }\n          }\n        }\n      },\n      {\n        input: ['picture', 'pictures', 'show me pictures', 'show me a picture', 'give me a picture', 'give me pictures'],\n        output: {\n          messageText: 'Here is a picture',\n          media: [\n            { altText: 'Botium Logo', mediaUri: 'https://www.botium.ai/wp-content/uploads/2020/03/logo.png' }\n          ],\n          nlp: {\n            intent: {\n              name: 'picture',\n              confidence: 0.8\n            }\n          }\n        }\n      },\n      {\n        input: ['card', 'show me a card', 'give me a card'],\n        output: {\n          messageText: 'Here is a card',\n          cards: [\n            {\n              text: 'Botium is great!',\n              image: { mediaUri: 'https://www.botium.ai/wp-content/uploads/2020/03/logo.png' },\n              buttons: [\n                { text: 'First Button' },\n                { text: 'Second Button' }\n              ]\n            }\n          ],\n          nlp: {\n            intent: {\n              name: 'card',\n              confidence: 0.8\n            }\n          }\n        }\n      },\n      {\n        input: ['audio', 'show me an audio', 'give me an audio'],\n        output: (msg, session) => {\n          if (!audioBuffer) {\n            throw new Error(`Audio file ${audioFile} not found`)\n          }\n          return {\n            messageText: 'Here is an audio',\n            media: [{\n              mediaUri: `data:audio/mp3;base64,${audioBuffer.toString('base64')}`,\n              mimeType: 'audio/mp3'\n            }],\n            nlp: {\n              intent: {\n                name: 'audio',\n                confidence: 0.8\n              }\n            }\n          }\n        }\n      },\n      {\n        input: ['attachment', 'audioattachment'],\n        output: (msg, session) => {\n          if (!audioBuffer) {\n            throw new Error(`Audio file ${audioFile} not found`)\n          }\n          return {\n            messageText: 'An audio is attached to this message',\n            attachments: [\n              {\n                name: audioFile,\n                mimeType: 'audio/mp3',\n                base64: audioBuffer.toString('base64')\n              }\n            ],\n            nlp: {\n              intent: {\n                name: 'audioattachment',\n                confidence: 0.8\n              }\n            }\n          }\n        }\n      },\n      {\n        input: ['video', 'show me a video', 'give me a video'],\n        output: (msg, session) => {\n          if (!videoBuffer) {\n            throw new Error(`Video file ${videoFile} not found`)\n          }\n          return {\n            messageText: 'Here is a video',\n            media: [{\n              mediaUri: `data:video/mp4;base64,${videoBuffer.toString('base64')}`,\n              mimeType: 'video/mp4'\n            }],\n            nlp: {\n              intent: {\n                name: 'video',\n                confidence: 0.8\n              }\n            }\n          }\n        }\n      },\n      {\n        input: ['videoattachment'],\n        output: (msg, session) => {\n          if (!videoBuffer) {\n            throw new Error(`Video file ${videoFile} not found`)\n          }\n          return {\n            messageText: 'A video is attached to this message',\n            attachments: [\n              {\n                name: videoFile,\n                mimeType: 'video/mp4',\n                base64: videoBuffer.toString('base64')\n              }\n            ],\n            nlp: {\n              intent: {\n                name: 'videoattachment',\n                confidence: 0.8\n              }\n            }\n          }\n        }\n      }\n    ]\n    this.echoDelay = 0\n  }\n\n  Build () {\n    if (this.caps[Capabilities.ECHO_ANSWERS]) {\n      const extraAnswers = _.isString(this.caps[Capabilities.ECHO_ANSWERS]) ? JSON.parse(this.caps[Capabilities.ECHO_ANSWERS]) : this.caps[Capabilities.ECHO_ANSWERS]\n      this.answers = this.answers.concat(extraAnswers)\n      for (const a of this.answers) {\n        if (_.isString(a.input)) a.input = [a.input]\n      }\n    }\n    if (this.caps[Capabilities.ECHO_WELCOMEMESSAGE]) {\n      const extraWelcomeMessages = _.isString(this.caps[Capabilities.ECHO_WELCOMEMESSAGE])\n        ? JSON.parse(this.caps[Capabilities.ECHO_WELCOMEMESSAGE])\n        : this.caps[Capabilities.ECHO_WELCOMEMESSAGE]\n      this.welcomeMessages = this.welcomeMessages.concat(extraWelcomeMessages)\n    }\n    if (this.caps[Capabilities.ECHO_DELAY]) {\n      this.echoDelay = this.caps[Capabilities.ECHO_DELAY]\n    }\n  }\n\n  Start () {\n    this.session = {}\n\n    for (const welcomeMessage of this.welcomeMessages) {\n      let botMsg = {\n        sender: 'bot'\n      }\n      if (_.isString(welcomeMessage)) {\n        botMsg.messageText = welcomeMessage\n      } else if (_.isFunction(welcomeMessage.output)) {\n        botMsg = Object.assign(botMsg, welcomeMessage.output({}, this.session))\n      } else if (_.isString(welcomeMessage.output)) {\n        botMsg.messageText = welcomeMessage.output\n      } else {\n        botMsg = Object.assign(botMsg, welcomeMessage.output)\n      }\n      setTimeout(() => this.queueBotSays(botMsg), 0)\n    }\n  }\n\n  UserSays (msg) {\n    debug('UserSays called, echo back')\n\n    let botMsg = {\n      sender: 'bot',\n      sourceData: {\n        request: {\n          messageText: msg.messageText,\n          buttons: msg.buttons,\n          media: msg.media\n        }\n      }\n    }\n\n    let template = null\n    if (msg.messageText) {\n      template = this.answers.find(a => {\n        if (a.input.findIndex(u => u.toLowerCase() === msg.messageText.toLowerCase()) >= 0) return true\n        return false\n      })\n      if (!template) {\n        const parts = msg.messageText.split(' ')\n        if (parts.length > 1) {\n          template = this.answers.find(a => {\n            if (a.input.findIndex(u => u.toLowerCase().startsWith(parts[0].toLowerCase())) >= 0) return true\n            return false\n          })\n        }\n      }\n    }\n    if (template && template.output) {\n      if (_.isFunction(template.output)) {\n        botMsg = Object.assign(botMsg, template.output(msg, this.session))\n      } else if (_.isString(template.output)) {\n        botMsg.messageText = template.output\n      } else {\n        botMsg = Object.assign(botMsg, template.output)\n      }\n    } else if (msg.buttons && msg.buttons.length > 0) {\n      botMsg.messageText = `BUTTON PRESSED: ${msg.buttons[0].text || msg.buttons[0].payload}`\n    } else if (msg.media && msg.media.length > 0) {\n      const media = msg.media[0]\n      const mediaName = decodeURIComponent(path.basename(media.downloadUri || media.mediaUri) || '-')\n      botMsg.messageText = `RECEIVED FILE: ${mediaName}`\n      botMsg.media = [{\n        mediaUri: media.mediaUri,\n        downloadUri: media.downloadUri,\n        mimeType: media.mimeType,\n        buffer: media.buffer\n      }]\n      if (media.buffer) {\n        botMsg.attachments = [{\n          name: mediaName,\n          mimeType: media.mimeType,\n          base64: media.buffer.toString('base64')\n        }]\n      }\n    } else {\n      botMsg.messageText = 'You said: ' + (msg.messageText || '-')\n    }\n\n    botMsg.sourceData.session = JSON.parse(JSON.stringify(this.session))\n    setTimeout(() => this.queueBotSays(botMsg), this.echoDelay + GlobalState.delaySlowdown)\n\n    if (this.caps[Capabilities.ECHO_DELAY_INCREASE]) {\n      GlobalState.delaySlowdown += this.caps[Capabilities.ECHO_DELAY_INCREASE]\n    }\n  }\n}\n\nmodule.exports = {\n  PluginVersion: 1,\n  PluginClass: BotiumConnectorEcho,\n  Import: {\n    Handler: () => {\n      return {\n        convos: [\n          {\n            header: { name: 'TC01 - buttons' },\n            conversation: [\n              { sender: 'me', messageText: 'buttons' },\n              {\n                sender: 'bot',\n                asserters: [\n                  {\n                    name: 'INTENT',\n                    args: ['buttons']\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            header: { name: 'TC02 - pictures' },\n            conversation: [\n              { sender: 'me', messageText: 'picture' },\n              {\n                sender: 'bot',\n                asserters: [\n                  {\n                    name: 'INTENT',\n                    args: ['picture']\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            header: { name: 'TC03 - cards' },\n            conversation: [\n              { sender: 'me', messageText: 'card' },\n              {\n                sender: 'bot',\n                asserters: [\n                  {\n                    name: 'INTENT',\n                    args: ['card']\n                  }\n                ]\n              }\n            ]\n          }\n        ],\n        utterances: [\n          {\n            name: 'buttons',\n            utterances: ['buttons', 'show me buttons', 'show me some buttons', 'give me buttons']\n          },\n          {\n            name: 'picture',\n            utterances: ['picture', 'show me a picture', 'give me a picture']\n          },\n          {\n            name: 'card',\n            utterances: ['card', 'show me a card', 'give me a card']\n          }\n        ]\n      }\n    },\n    Args: {}\n  },\n  Export: {\n    Handler: ({ ...rest } = {}, { convos, utterances } = {}, { statusCallback } = {}) => {\n      if (statusCallback) {\n        statusCallback(`Exporting ${convos ? convos.length : 0} convo(s)`)\n        statusCallback(`Exporting ${utterances ? utterances.length : 0} utterance(s)`)\n      }\n      return {}\n    },\n    Args: {}\n  },\n  PluginDesc: {\n    name: 'Botium Sample Chatbot (Echo)',\n    provider: 'Botium',\n    features: {\n      intentResolution: true,\n      intentConfidenceScore: true,\n      alternateIntents: true,\n      entityResolution: true,\n      entityConfidenceScore: true,\n      testCaseGeneration: true,\n      testCaseExport: true,\n      audioInput: true\n    },\n    capabilities: [\n      {\n        name: Capabilities.ECHO_WELCOMEMESSAGE,\n        label: 'Welcome Messages',\n        description: 'JSON-Array holding the welcome messages to send for a new session (example: [ \"Hello!\", \"My name is Dave. How can I help you ?\" ])',\n        type: 'json',\n        required: false,\n        advanced: true\n      },\n      {\n        name: Capabilities.ECHO_ANSWERS,\n        label: 'Customize Responses',\n        description: 'JSON-Structure holding keywords to detect and response (example: { \"input\": \"special\", \"output\": { \"messageText\": \"something special\", \"nlp\": { \"intent\": { \"name\": \"extra2\", \"confidence\": 0.8 } } } })',\n        type: 'json',\n        required: false,\n        advanced: true\n      },\n      {\n        name: Capabilities.ECHO_DELAY,\n        label: 'Delay response',\n        description: 'Delay for sending responses in milliseconds',\n        type: 'int',\n        required: false,\n        advanced: true\n      },\n      {\n        name: Capabilities.ECHO_DELAY_INCREASE,\n        label: 'Increase Delay',\n        description: 'Increase delay on each message in milliseconds',\n        type: 'int',\n        required: false,\n        advanced: true\n      }\n    ]\n  }\n}\n"],"names":["debug","require$$0","Capabilities","ECHO_ANSWERS","ECHO_WELCOMEMESSAGE","ECHO_DELAY","ECHO_DELAY_INCREASE","GlobalState","delaySlowdown","audioFile","audioBuffer","fs","existsSync","path","join","__dirname","Buffer","from","readFileSync","videoFile","videoBuffer","BotiumConnectorEcho","constructor","queueBotSays","caps","session","welcomeMessages","answers","input","output","msg","messageText","map","a","nlp","intent","name","confidence","Error","possibility","Math","random","item","substr","trim","cart","push","entities","value","intents","buttons","text","media","altText","mediaUri","cards","image","toString","mimeType","attachments","base64","echoDelay","Build","extraAnswers","_","isString","JSON","parse","concat","extraWelcomeMessages","Start","welcomeMessage","botMsg","sender","isFunction","Object","assign","setTimeout","UserSays","sourceData","request","template","find","findIndex","u","toLowerCase","parts","split","length","startsWith","payload","mediaName","decodeURIComponent","basename","downloadUri","buffer","stringify","PluginVersion","PluginClass","Import","Handler","convos","header","conversation","asserters","args","utterances","Args","Export","rest","statusCallback","PluginDesc","provider","features","intentResolution","intentConfidenceScore","alternateIntents","entityResolution","entityConfidenceScore","testCaseGeneration","testCaseExport","audioInput","capabilities","label","description","type","required","advanced"],"mappings":"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"}