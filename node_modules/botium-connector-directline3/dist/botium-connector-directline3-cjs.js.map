{"version":3,"file":"botium-connector-directline3-cjs.js","sources":["../index.js"],"sourcesContent":["const uuidv4 = require('uuid').v4\nconst mime = require('mime-types')\nconst _ = require('lodash')\nconst { DirectLine, ConnectionStatus } = require('botframework-directlinejs')\nconst debug = require('debug')('botium-connector-directline3')\nconst FormData = require('form-data')\nconst fetch = require('node-fetch')\nconst Queue = require('better-queue')\nconst fs = require('fs')\nconst path = require('path')\nconst xhr2 = require('xhr2')\nconst ws = require('ws')\n\nconst Capabilities = {\n  DIRECTLINE3_SECRET: 'DIRECTLINE3_SECRET',\n  DIRECTLINE3_WEBSOCKET: 'DIRECTLINE3_WEBSOCKET',\n  DIRECTLINE3_DOMAIN: 'DIRECTLINE3_DOMAIN',\n  DIRECTLINE3_POLLINGINTERVAL: 'DIRECTLINE3_POLLINGINTERVAL',\n  DIRECTLINE3_GENERATE_USERNAME: 'DIRECTLINE3_GENERATE_USERNAME',\n  DIRECTLINE3_BUTTON_TYPE: 'DIRECTLINE3_BUTTON_TYPE',\n  DIRECTLINE3_BUTTON_VALUE_FIELD: 'DIRECTLINE3_BUTTON_VALUE_FIELD',\n  DIRECTLINE3_HANDLE_ACTIVITY_TYPES: 'DIRECTLINE3_HANDLE_ACTIVITY_TYPES',\n  DIRECTLINE3_ACTIVITY_VALUE_MAP: 'DIRECTLINE3_ACTIVITY_VALUE_MAP',\n  DIRECTLINE3_ACTIVITY_TEMPLATE: 'DIRECTLINE3_ACTIVITY_TEMPLATE',\n  DIRECTLINE3_ACTIVITY_VALIDATION: 'DIRECTLINE3_ACTIVITY_VALIDATION',\n  DIRECTLINE3_WELCOME_ACTIVITY: 'DIRECTLINE3_WELCOME_ACTIVITY'\n}\n\nconst { BotiumError, Capabilities: CoreCapabilities } = require('botium-core')\n\nconst Defaults = {\n  [Capabilities.DIRECTLINE3_WEBSOCKET]: true,\n  [Capabilities.DIRECTLINE3_POLLINGINTERVAL]: 1000,\n  [Capabilities.DIRECTLINE3_GENERATE_USERNAME]: false,\n  [Capabilities.DIRECTLINE3_BUTTON_TYPE]: 'event',\n  [Capabilities.DIRECTLINE3_BUTTON_VALUE_FIELD]: 'name',\n  [Capabilities.DIRECTLINE3_HANDLE_ACTIVITY_TYPES]: 'message',\n  [Capabilities.DIRECTLINE3_ACTIVITY_VALIDATION]: 'error',\n  [Capabilities.DIRECTLINE3_ACTIVITY_VALUE_MAP]: {\n    event: 'name'\n  }\n}\n\nclass BotiumConnectorDirectline3 {\n  constructor ({ queueBotSays, caps }) {\n    this.queueBotSays = queueBotSays\n    this.caps = caps\n  }\n\n  async Validate () {\n    debug('Validate called')\n\n    this.caps = Object.assign({}, Defaults, _.pickBy(this.caps, (value, key) => !Object.prototype.hasOwnProperty.call(Defaults, key) || !_.isString(value) || value !== ''))\n\n    if (!this.caps.DIRECTLINE3_SECRET) throw new Error('DIRECTLINE3_SECRET capability required')\n    if (!this.caps.DIRECTLINE3_BUTTON_TYPE) throw new Error('DIRECTLINE3_BUTTON_TYPE capability required')\n    if (!this.caps.DIRECTLINE3_BUTTON_VALUE_FIELD) throw new Error('DIRECTLINE3_BUTTON_VALUE_FIELD capability required')\n    if (!this.caps.DIRECTLINE3_HANDLE_ACTIVITY_TYPES) throw new Error('DIRECTLINE3_HANDLE_ACTIVITY_TYPES capability required')\n\n    if (this.caps.DIRECTLINE3_ACTIVITY_VALUE_MAP) {\n      if (_.isString(this.caps.DIRECTLINE3_ACTIVITY_VALUE_MAP)) {\n        this.caps.DIRECTLINE3_ACTIVITY_VALUE_MAP = JSON.parse(this.caps.DIRECTLINE3_ACTIVITY_VALUE_MAP)\n      }\n    }\n    if (this.caps.DIRECTLINE3_ACTIVITY_TEMPLATE) {\n      if (_.isString(this.caps.DIRECTLINE3_ACTIVITY_TEMPLATE)) {\n        this.caps.DIRECTLINE3_ACTIVITY_TEMPLATE = JSON.parse(this.caps.DIRECTLINE3_ACTIVITY_TEMPLATE)\n      }\n    }\n  }\n\n  async Build () {\n    debug('Build called')\n  }\n\n  async Start () {\n    debug('Start called')\n    this.queue = new Queue((input, cb) => {\n      input().then(result => cb(null, result)).catch(err => cb(err))\n    })\n\n    global.XMLHttpRequest = xhr2\n    global.WebSocket = ws\n    if (debug.enabled) {\n      global.window = Object.assign(global.window || {}, { botchatDebug: true })\n    }\n    this._stopSubscription()\n    this.directLine = new DirectLine({\n      secret: this.caps.DIRECTLINE3_SECRET,\n      webSocket: this.caps.DIRECTLINE3_WEBSOCKET,\n      domain: this.caps.DIRECTLINE3_DOMAIN,\n      pollingInterval: this.caps.DIRECTLINE3_POLLINGINTERVAL\n    })\n\n    if (this.caps.DIRECTLINE3_GENERATE_USERNAME) {\n      this.me = uuidv4()\n    } else {\n      this.me = (this.caps.DIRECTLINE3_ACTIVITY_TEMPLATE && _.get(this.caps.DIRECTLINE3_ACTIVITY_TEMPLATE, 'from.id')) || 'me'\n    }\n\n    const isValidActivityType = (activityType) => {\n      const filter = this.caps.DIRECTLINE3_HANDLE_ACTIVITY_TYPES\n      if (_.isString(filter)) {\n        return filter.indexOf(activityType) >= 0\n      } else if (_.isArray(filter)) {\n        return filter.findIndex(f => f === activityType) >= 0\n      } else {\n        return false\n      }\n    }\n\n    this.receivedMessageIds = {}\n    this.subscription = this.directLine.activity$\n      .filter(activity => isValidActivityType(activity.type) && activity.from.id !== this.me)\n      .subscribe(\n        message => {\n          if (this.receivedMessageIds[message.id]) {\n            debug('ignore already received message ', message)\n          } else {\n            debug('received message ', JSON.stringify(message, null, 2))\n            this.receivedMessageIds[message.id] = true\n            const botMsg = { sender: 'bot', sourceData: message, media: [], buttons: [], cards: [], forms: [] }\n\n            if (message.type === 'message') {\n              botMsg.messageText = message.text || null\n\n              const mapButton = (b) => ({\n                text: b.title || b.text,\n                payload: b.value || b.url || b.data,\n                imageUri: b.image || b.iconUrl\n              })\n              const mapImage = (i) => ({\n                mediaUri: i.url,\n                mimeType: mime.lookup(i.url) || 'application/unknown',\n                altText: i.alt || i.altText\n              })\n              const mapMedia = (m) => ({\n                mediaUri: m.url,\n                mimeType: mime.lookup(m.url) || 'application/unknown',\n                altText: m.profile\n              })\n              const mapAdaptiveCardRecursive = (c) => {\n                const textBlocks = this._deepFilter(c.body, (t) => t.type, (t) => t.type === 'TextBlock')\n                const imageBlocks = this._deepFilter(c.body, (t) => t.type, (t) => t.type === 'Image')\n                const buttonBlocks = this._deepFilter(c.body, (t) => t.type, (t) => t.type.startsWith('Action.'))\n                const actions = (c.actions || []).concat((buttonBlocks && buttonBlocks.map(mapButton)) || [])\n                const subcards = actions.filter(a => (a.type === 'Action.ShowCard' && a.card && a.card.body)).map(a => mapAdaptiveCardRecursive(a.card))\n                const inputs = this._deepFilter(c.body, (t) => t.type, (t) => t.type.startsWith('Input.'))\n                const forms = []\n                for (const input of inputs) {\n                  forms.push({\n                    name: input.id,\n                    label: input.label,\n                    type: input.type.substring('Input.'.length),\n                    options: input.choices\n                  })\n                }\n                return {\n                  text: textBlocks && textBlocks.map(t => t.text),\n                  image: imageBlocks && imageBlocks.length > 0 && mapImage(imageBlocks[0]),\n                  buttons: actions.map(mapButton),\n                  media: imageBlocks && imageBlocks.length > 1 && imageBlocks.slice(1).map(mapImage),\n                  forms: forms.length ? forms : null,\n                  cards: subcards.length ? subcards : null,\n                  sourceData: c\n                }\n              }\n              message.attachments && message.attachments.forEach(a => {\n                if (a.contentType === 'application/vnd.microsoft.card.hero') {\n                  botMsg.cards.push({\n                    text: a.content.title || a.content.text,\n                    subtext: a.content.subtitle,\n                    content: a.content.text,\n                    image: a.content.images && a.content.images.length > 0 && mapImage(a.content.images[0]),\n                    buttons: a.content.buttons && a.content.buttons.map(mapButton),\n                    media: a.content.images && a.content.images.length > 1 && a.content.images.slice(1).map(mapImage),\n                    sourceData: a\n                  })\n                } else if (a.contentType === 'application/vnd.microsoft.card.adaptive') {\n                  // if is send 'card inputs please' instead of 'card inputs' then there is an empty card in attachments\n                  if (a.content) {\n                    botMsg.cards.push(mapAdaptiveCardRecursive(a.content))\n                  }\n                } else if (a.contentType === 'application/vnd.microsoft.card.animation' ||\n                  a.contentType === 'application/vnd.microsoft.card.audio' ||\n                  a.contentType === 'application/vnd.microsoft.card.video') {\n                  botMsg.cards.push({\n                    text: a.content.title || a.content.text,\n                    subtext: a.content.subtitle,\n                    content: a.content.text,\n                    image: a.content.image && mapImage(a.content.image),\n                    buttons: a.content.buttons && a.content.buttons.map(mapButton),\n                    media: a.content.media && a.content.media.map(mapMedia),\n                    sourceData: a\n                  })\n                } else if (a.contentType === 'application/vnd.microsoft.card.thumbnail') {\n                  botMsg.cards.push({\n                    text: a.content.title || a.content.text,\n                    subtext: a.content.subtitle,\n                    content: a.content.text,\n                    image: a.content.images && a.content.images.length > 0 && mapImage(a.content.images[0]),\n                    buttons: a.content.buttons && a.content.buttons.map(mapButton),\n                    media: a.content.images && a.content.images.length > 1 && a.content.images.slice(1).map(mapImage),\n                    sourceData: a\n                  })\n                } else if (a.contentType === 'text/markdown') {\n                  botMsg.cards.push({\n                    content: a.content,\n                    sourceData: {\n                      type: 'AdaptiveCard',\n                      body: [\n                        {\n                          type: 'TextBlock',\n                          text: a.content\n                        }\n                      ]\n                    }\n                  })\n                } else if (a.contentType === 'text/plain') {\n                  botMsg.cards.push({\n                    content: a.content\n                  })\n                } else if (a.contentType && a.contentUrl) {\n                  botMsg.media.push({\n                    mediaUri: a.contentUrl,\n                    mimeType: a.contentType,\n                    altText: a.name\n                  })\n                } else if (a.content && a.content.buttons && a.content.buttons.length > 0) {\n                  a.content.buttons.forEach(b => {\n                    botMsg.buttons.push(mapButton(b))\n                  })\n                }\n              })\n\n              message.suggestedActions && message.suggestedActions.actions && message.suggestedActions.actions.forEach(a => {\n                botMsg.buttons.push(mapButton(a))\n              })\n\n              if (message.entities && message.entities.length > 0) {\n                botMsg.entities = message.entities.map(e => ({\n                  name: e.name,\n                  value: e.value\n                }))\n              }\n\n              if (!botMsg.messageText && botMsg.cards) {\n                const card = botMsg.cards.find(c => c.text)\n                if (card && _.isArray(card.text) && card.text.length > 0) {\n                  botMsg.messageText = card.text[0]\n                } else if (card && _.isString(card.text)) {\n                  botMsg.messageText = card.text\n                }\n              }\n              if (!botMsg.messageText && botMsg.buttons) {\n                const button = botMsg.buttons.find(b => b.text)\n                if (button) {\n                  botMsg.messageText = button.text\n                }\n              }\n            } else {\n              const valueMap = this.caps.DIRECTLINE3_ACTIVITY_VALUE_MAP\n              if (valueMap && valueMap[message.type]) {\n                botMsg.messageText = message[valueMap[message.type]]\n              } else {\n                botMsg.messageText = message.type\n              }\n            }\n            this._runInQueue(async () => { this.queueBotSays(botMsg) })\n          }\n        },\n        err => {\n          debug(`Error in waiting for activities: ${err.message}`)\n        }\n      )\n\n    let resultResolve = null\n    let resultReject = null\n    const resultPromise = new Promise((resolve, reject) => {\n      resultResolve = resolve\n      resultReject = reject\n    })\n\n    this.connSubscription = this.directLine.connectionStatus$\n      .subscribe(\n        connectionStatus => {\n          switch (connectionStatus) {\n            case ConnectionStatus.Uninitialized:\n              debug(`Directline Connection Status: ${connectionStatus} / Uninitialized`)\n              break\n            case ConnectionStatus.Connecting:\n              debug(`Directline Connection Status: ${connectionStatus} / Connecting`)\n              break\n            case ConnectionStatus.Online:\n              debug(`Directline Connection Status: ${connectionStatus} / Online`)\n              resultResolve && resultResolve()\n              resultResolve = null\n              break\n            case ConnectionStatus.ExpiredToken:\n              debug(`Directline Connection Status: ${connectionStatus} / ExpiredToken`)\n              resultReject && resultReject(new Error('Directline token expired'))\n              resultReject = null\n              break\n            case ConnectionStatus.FailedToConnect:\n              debug(`Directline Connection Status: ${connectionStatus} / FailedToConnect`)\n              resultReject && resultReject(new Error('Directline failed to connect - check the Directline Secret'))\n              resultReject = null\n              break\n            case ConnectionStatus.Ended:\n              debug(`Directline Connection Status: ${connectionStatus} / Ended`)\n              break\n          }\n        },\n        err => {\n          debug(`Error in waiting for connectionStatus: ${err.message}`)\n        }\n      )\n\n    if (this.caps[Capabilities.DIRECTLINE3_WELCOME_ACTIVITY]) {\n      if (_.isString(this.caps[Capabilities.DIRECTLINE3_WELCOME_ACTIVITY])) {\n        let initActivity = null\n        try {\n          initActivity = JSON.parse(this.caps[Capabilities.DIRECTLINE3_WELCOME_ACTIVITY])\n        } catch (err) {\n        }\n        if (initActivity) {\n          this.UserSays({ sourceData: initActivity }).catch(err => debug(`Failed to send DIRECTLINE3_WELCOME_ACTIVITY: ${err.message}`))\n        } else {\n          this.UserSays({ messageText: this.caps[Capabilities.DIRECTLINE3_WELCOME_ACTIVITY] }).catch(err => debug(`Failed to send DIRECTLINE3_WELCOME_ACTIVITY: ${err.message}`))\n        }\n      } else {\n        this.UserSays({ sourceData: this.caps[Capabilities.DIRECTLINE3_WELCOME_ACTIVITY] }).catch(err => debug(`Failed to send DIRECTLINE3_WELCOME_ACTIVITY: ${err.message}`))\n      }\n    } else {\n      this.directLine.getSessionId().subscribe(\n        () => {},\n        () => {}\n      )\n    }\n\n    return resultPromise\n  }\n\n  async UserSays (msg) {\n    debug('UserSays called')\n\n    const activity = Object.assign({}, msg.sourceData || this.caps.DIRECTLINE3_ACTIVITY_TEMPLATE || {})\n    if (msg.buttons && msg.buttons.length > 0 && (msg.buttons[0].text || msg.buttons[0].payload)) {\n      let payload = msg.buttons[0].payload || msg.buttons[0].text\n      try {\n        payload = JSON.parse(payload)\n      } catch (err) {\n      }\n      activity.type = this.caps[Capabilities.DIRECTLINE3_BUTTON_TYPE]\n      _.set(activity, this.caps[Capabilities.DIRECTLINE3_BUTTON_VALUE_FIELD], payload)\n    } else {\n      if (!activity.type) {\n        activity.type = 'message'\n      }\n      if (!_.isUndefined(msg.messageText)) {\n        activity.text = msg.messageText\n      }\n    }\n    if (!activity.from) {\n      activity.from = { id: this.me }\n    } else if (!activity.from.id) {\n      activity.from.id = this.me\n    }\n\n    if (msg.forms) {\n      activity.value = activity.value || {}\n      msg.forms.forEach(f => {\n        _.set(activity.value, f.name, f.value)\n      })\n    }\n\n    if (msg.SET_ACTIVITY_VALUE) {\n      _.keys(msg.SET_ACTIVITY_VALUE).forEach(key => {\n        _.set(activity, key, msg.SET_ACTIVITY_VALUE[key])\n      })\n    }\n\n    // validating the activity\n    if (activity.text) {\n      if (_.isObject(activity.text)) {\n        const msg = `Activity is not correct. There is a JSON ${JSON.stringify(activity.text)} in text field. Check your capabilities`\n        if (this.caps.DIRECTLINE3_ACTIVITY_VALIDATION === 'error') {\n          throw new Error(msg)\n        } else {\n          debug(msg)\n        }\n      }\n    }\n\n    if (msg.media && msg.media.length > 0) {\n      debug('Posting activity with attachments ', JSON.stringify(activity, null, 2))\n      msg.sourceData = Object.assign(msg.sourceData || {}, { activity })\n\n      const formData = new FormData()\n\n      formData.append('activity', Buffer.from(JSON.stringify(activity)), {\n        contentType: 'application/vnd.microsoft.activity',\n        filename: 'blob'\n      })\n\n      for (let i = 0; i < msg.media.length; i++) {\n        const attachment = msg.media[i]\n        const attachmentName = path.basename(attachment.mediaUri)\n\n        if (attachment.buffer) {\n          formData.append('file', attachment.buffer, {\n            filename: attachmentName\n          })\n        } else if (attachment.downloadUri && attachment.downloadUri.startsWith('file://')) {\n          // This check is maybe not required. If possible and safe, MediaImport extracts Buffer from downloadUri.\n          // This if-case should not be called at all.\n          if (!this.caps[CoreCapabilities.SECURITY_ALLOW_UNSAFE]) {\n            throw new BotiumError(\n              'Security Error. Illegal configured MediaInput. Sending attachment using the filesystem is not allowed',\n              {\n                type: 'security',\n                subtype: 'allow unsafe',\n                source: 'botium-connector-directline',\n                cause: { attachment }\n              }\n            )\n          }\n          const filepath = attachment.downloadUri.split('file://')[1]\n          formData.append('file', fs.createReadStream(filepath), {\n            filename: attachmentName\n          })\n        } else if (attachment.downloadUri) {\n          const res = await fetch(attachment.downloadUri)\n          const body = await res.buffer()\n\n          formData.append('file', body, {\n            filename: attachmentName\n          })\n        } else {\n          throw new Error(`Media attachment ${attachment.mediaUri} not downloaded`)\n        }\n      }\n\n      await this.directLine.checkConnection(true)\n      const uploadUrl = `${this.directLine.domain}/conversations/${this.directLine.conversationId}/upload?userId=${activity.from.id}`\n      debug(`Uploading attachments to ${uploadUrl}`)\n      return this._runInQueue(async () => {\n        try {\n          const res = await fetch(uploadUrl, {\n            method: 'POST',\n            headers: {\n              Authorization: `Bearer ${this.directLine.token}`\n            },\n            body: formData\n          })\n          const json = await res.json()\n          if (json && json.id) {\n            debug('Posted activity with attachments, assigned ID:', json.id)\n          } else {\n            throw new Error('No activity id returned')\n          }\n        } catch (err) {\n          debug('Error posting activity with attachments', err)\n          throw new Error(`Error posting activity: ${err.message || err}`)\n        }\n      })\n    } else {\n      debug('Posting activity ', JSON.stringify(activity, null, 2))\n      msg.sourceData = Object.assign(msg.sourceData || {}, { activity })\n\n      return this._runInQueue(() => new Promise((resolve, reject) => {\n        this.directLine.postActivity(activity).subscribe(\n          id => {\n            debug('Posted activity, assigned ID:', id)\n            resolve()\n          },\n          err => {\n            debug('Error posting activity', err)\n            reject(new Error(`Error posting activity: ${err.message || err}`))\n          }\n        )\n      }))\n    }\n  }\n\n  async Stop () {\n    debug('Stop called')\n    this.queue = null\n    this._stopSubscription()\n  }\n\n  async Clean () {\n    debug('Clean called')\n    this._stopSubscription()\n  }\n\n  _stopSubscription () {\n    if (this.subscription) {\n      try {\n        this.subscription.unsubscribe()\n        this.subscription = null\n        debug('unsubscribed from directline activity subscription')\n      } catch (err) {\n        debug(`unsubscribing from directline activity subscription failed: ${err.message}`)\n      }\n    }\n    if (this.connSubscription) {\n      try {\n        this.connSubscription.unsubscribe()\n        this.connSubscription = null\n        debug('unsubscribing from directline connectionstatus subscription')\n      } catch (err) {\n        debug(`unsubscribing from directline connectionstatus subscription failed: ${err.message}`)\n      }\n    }\n    if (this.directLine) {\n      debug('ending directline connection')\n      this.directLine.end()\n      this.directLine = null\n    }\n  }\n\n  async _runInQueue (fn) {\n    if (this.queue) {\n      return new Promise((resolve, reject) => {\n        this.queue.push(fn)\n          .on('finish', resolve)\n          .on('failed', reject)\n      })\n    } else {\n      throw new Error('Connector not yet started')\n    }\n  }\n\n  _deepFilter (item, selectFn, filterFn) {\n    if (!item) {\n      return []\n    }\n    let result = []\n    if (_.isArray(item)) {\n      item.filter(selectFn).forEach(subItem => {\n        result = result.concat(this._deepFilter(subItem, selectFn, filterFn))\n      })\n    } else if (selectFn(item)) {\n      if (filterFn(item)) {\n        result.push(item)\n      } else {\n        if (!item.type || item.type !== 'Action.ShowCard') {\n          Object.getOwnPropertyNames(item).forEach(key => {\n            result = result.concat(this._deepFilter(item[key], selectFn, filterFn))\n          })\n        }\n      }\n    }\n    return result\n  }\n}\n\nmodule.exports = {\n  PluginVersion: 1,\n  PluginClass: BotiumConnectorDirectline3,\n  PluginDesc: {\n    name: 'Microsoft Bot Framework (Directline 3)',\n    provider: 'Microsoft',\n    features: {\n      sendAttachments: true,\n      audioInput: true\n    }\n  }\n}\n"],"names":["uuidv4","require$$0","v4","DirectLine","ConnectionStatus","require$$1","debug","require$$2","Capabilities","DIRECTLINE3_SECRET","DIRECTLINE3_WEBSOCKET","DIRECTLINE3_DOMAIN","DIRECTLINE3_POLLINGINTERVAL","DIRECTLINE3_GENERATE_USERNAME","DIRECTLINE3_BUTTON_TYPE","DIRECTLINE3_BUTTON_VALUE_FIELD","DIRECTLINE3_HANDLE_ACTIVITY_TYPES","DIRECTLINE3_ACTIVITY_VALUE_MAP","DIRECTLINE3_ACTIVITY_TEMPLATE","DIRECTLINE3_ACTIVITY_VALIDATION","DIRECTLINE3_WELCOME_ACTIVITY","BotiumError","CoreCapabilities","require$$3","Defaults","event","BotiumConnectorDirectline3","constructor","queueBotSays","caps","Validate","Object","assign","_","pickBy","value","key","prototype","hasOwnProperty","call","isString","Error","JSON","parse","Build","Start","queue","Queue","input","cb","then","result","catch","err","global","XMLHttpRequest","xhr2","WebSocket","ws","enabled","window","botchatDebug","_stopSubscription","directLine","secret","webSocket","domain","pollingInterval","me","get","isValidActivityType","activityType","filter","indexOf","isArray","findIndex","f","receivedMessageIds","subscription","activity$","activity","type","from","id","subscribe","message","stringify","botMsg","sender","sourceData","media","buttons","cards","forms","messageText","text","mapButton","b","title","payload","url","data","imageUri","image","iconUrl","mapImage","i","mediaUri","mimeType","mime","lookup","altText","alt","mapMedia","m","profile","mapAdaptiveCardRecursive","c","textBlocks","_deepFilter","body","t","imageBlocks","buttonBlocks","startsWith","actions","concat","map","subcards","a","card","inputs","push","name","label","substring","length","options","choices","slice","attachments","forEach","contentType","content","subtext","subtitle","images","contentUrl","suggestedActions","entities","e","find","button","valueMap","_runInQueue","resultResolve","resultReject","resultPromise","Promise","resolve","reject","connSubscription","connectionStatus$","connectionStatus","Uninitialized","Connecting","Online","ExpiredToken","FailedToConnect","Ended","initActivity","UserSays","getSessionId","msg","set","isUndefined","SET_ACTIVITY_VALUE","keys","isObject","formData","FormData","append","Buffer","filename","attachment","attachmentName","path","basename","buffer","downloadUri","SECURITY_ALLOW_UNSAFE","subtype","source","cause","filepath","split","fs","createReadStream","res","fetch","checkConnection","uploadUrl","conversationId","method","headers","Authorization","token","json","postActivity","Stop","Clean","unsubscribe","end","fn","on","item","selectFn","filterFn","subItem","getOwnPropertyNames","botiumConnectorDirectline3","PluginVersion","PluginClass","PluginDesc","provider","features","sendAttachments","audioInput"],"mappings":"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"}